{"version":3,"file":"static/js/553.a7ced149.chunk.js","mappings":"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","sources":["src/screens/legal/Contact.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ScrollView, Text, StyleSheet, View, TextInput, TouchableOpacity, Alert } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../../types/navigation';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Contact'>;\n\nconst Contact = (props: Props) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = () => {\n    if (!name.trim() || !email.trim() || !message.trim()) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      Alert.alert('Error', 'Please enter a valid email address');\n      return;\n    }\n\n    // Here you would typically send the form data to your backend\n    // For now, we'll just show a success message\n    Alert.alert(\n      'Success',\n      'Thank you for your message! We will get back to you soon.',\n      [\n        {\n          text: 'OK',\n          onPress: () => {\n            setName('');\n            setEmail('');\n            setMessage('');\n          },\n        },\n      ]\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.content}>\n        <Text style={styles.title}>Contact Us</Text>\n        <Text style={styles.subtitle}>\n          FoilQuiver is still in very early development. Let me know if you have any feedback or feature requests!\n        </Text>\n\n        <View style={styles.form}>\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Name</Text>\n            <TextInput\n              style={styles.input}\n              value={name}\n              onChangeText={setName}\n              placeholder=\"Enter your name\"\n              placeholderTextColor=\"#999\"\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Email</Text>\n            <TextInput\n              style={styles.input}\n              value={email}\n              onChangeText={setEmail}\n              placeholder=\"Enter your email\"\n              placeholderTextColor=\"#999\"\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Message</Text>\n            <TextInput\n              style={[styles.input, styles.messageInput]}\n              value={message}\n              onChangeText={setMessage}\n              placeholder=\"Type your message here\"\n              placeholderTextColor=\"#999\"\n              multiline\n              numberOfLines={4}\n              textAlignVertical=\"top\"\n            />\n          </View>\n\n          <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n            <Text style={styles.submitButtonText}>Send Message</Text>\n          </TouchableOpacity>\n\n          <View style={styles.section}>\n            <Text style={styles.alternativeContact}>\n              Alternatively, you can email me directly at:{'\\n'}\n              sungho@sparkmindbody.com\n            </Text>\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 24,\n    lineHeight: 24,\n  },\n  form: {\n    marginTop: 20,\n  },\n  inputContainer: {\n    marginBottom: 20,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 8,\n    color: '#333',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    backgroundColor: '#fafafa',\n  },\n  messageInput: {\n    height: 120,\n    textAlignVertical: 'top',\n  },\n  submitButton: {\n    backgroundColor: '#007AFF',\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  section: {\n    marginTop: 32,\n    marginBottom: 24,\n  },\n  alternativeContact: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n    textAlign: 'center',\n  },\n});\n\nexport default Contact; "],"names":["styles","StyleSheet","create","container","flex","backgroundColor","content","padding","title","fontSize","fontWeight","marginBottom","subtitle","color","lineHeight","form","marginTop","inputContainer","label","input","borderWidth","borderColor","borderRadius","messageInput","height","textAlignVertical","submitButton","alignItems","submitButtonText","section","alternativeContact","textAlign","props","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","message","setMessage","_jsx","SafeAreaView","style","children","_jsxs","ScrollView","Text","View","TextInput","value","onChangeText","placeholder","placeholderTextColor","keyboardType","autoCapitalize","multiline","numberOfLines","TouchableOpacity","onPress","trim","test","Alert","alert","text"],"sourceRoot":""}