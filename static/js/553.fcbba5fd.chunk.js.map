{"version":3,"file":"static/js/553.fcbba5fd.chunk.js","mappings":"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","sources":["node_modules/react-native-safe-area-context/src/SafeAreaView.web.tsx","src/screens/legal/Contact.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  Edge,\n  EdgeMode,\n  EdgeRecord,\n  NativeSafeAreaViewInstance,\n  NativeSafeAreaViewProps,\n} from './SafeArea.types';\nimport { useSafeAreaInsets } from './SafeAreaContext';\n\nconst defaultEdges: Record<Edge, EdgeMode> = {\n  top: 'additive',\n  left: 'additive',\n  bottom: 'additive',\n  right: 'additive',\n};\n\nfunction getEdgeValue(\n  inset: number,\n  current: number,\n  mode: EdgeMode | undefined,\n) {\n  switch (mode) {\n    case 'off':\n      return current;\n    case 'maximum':\n      return Math.max(current, inset);\n    case 'additive':\n    default:\n      return current + inset;\n  }\n}\n\nexport const SafeAreaView = React.forwardRef<\n  NativeSafeAreaViewInstance,\n  NativeSafeAreaViewProps\n>(({ style = {}, mode, edges, ...rest }, ref) => {\n  const insets = useSafeAreaInsets();\n\n  const edgesRecord = React.useMemo(() => {\n    if (edges == null) {\n      return defaultEdges;\n    }\n\n    return Array.isArray(edges)\n      ? edges.reduce<EdgeRecord>((acc, edge: Edge) => {\n          acc[edge] = 'additive';\n          return acc;\n        }, {})\n      : // ts has trouble with refining readonly arrays.\n        (edges as EdgeRecord);\n  }, [edges]);\n\n  const appliedStyle = React.useMemo(() => {\n    const flatStyle = StyleSheet.flatten(style) as Record<string, number>;\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal,\n      } = flatStyle;\n\n      const marginStyle = {\n        marginTop: getEdgeValue(insets.top, marginTop, edgesRecord.top),\n        marginRight: getEdgeValue(insets.right, marginRight, edgesRecord.right),\n        marginBottom: getEdgeValue(\n          insets.bottom,\n          marginBottom,\n          edgesRecord.bottom,\n        ),\n        marginLeft: getEdgeValue(insets.left, marginLeft, edgesRecord.left),\n      };\n\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal,\n      } = flatStyle;\n\n      const paddingStyle = {\n        paddingTop: getEdgeValue(insets.top, paddingTop, edgesRecord.top),\n        paddingRight: getEdgeValue(\n          insets.right,\n          paddingRight,\n          edgesRecord.right,\n        ),\n        paddingBottom: getEdgeValue(\n          insets.bottom,\n          paddingBottom,\n          edgesRecord.bottom,\n        ),\n        paddingLeft: getEdgeValue(insets.left, paddingLeft, edgesRecord.left),\n      };\n\n      return [style, paddingStyle];\n    }\n  }, [\n    edgesRecord.bottom,\n    edgesRecord.left,\n    edgesRecord.right,\n    edgesRecord.top,\n    insets.bottom,\n    insets.left,\n    insets.right,\n    insets.top,\n    mode,\n    style,\n  ]);\n\n  return <View style={appliedStyle} {...rest} ref={ref} />;\n});\n","import React, { useState } from 'react';\nimport { ScrollView, Text, StyleSheet, View, TextInput, TouchableOpacity, Alert } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../../types/navigation';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Contact'>;\n\nconst Contact = (props: Props) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = () => {\n    if (!name.trim() || !email.trim() || !message.trim()) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      Alert.alert('Error', 'Please enter a valid email address');\n      return;\n    }\n\n    // Here you would typically send the form data to your backend\n    // For now, we'll just show a success message\n    Alert.alert(\n      'Success',\n      'Thank you for your message! We will get back to you soon.',\n      [\n        {\n          text: 'OK',\n          onPress: () => {\n            setName('');\n            setEmail('');\n            setMessage('');\n          },\n        },\n      ]\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.content}>\n        <Text style={styles.title}>Contact Us</Text>\n        <Text style={styles.subtitle}>\n          FoilQuiver is still in very early development. Let me know if you have any feedback or feature requests!\n        </Text>\n\n        <View style={styles.form}>\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Name</Text>\n            <TextInput\n              style={styles.input}\n              value={name}\n              onChangeText={setName}\n              placeholder=\"Enter your name\"\n              placeholderTextColor=\"#999\"\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Email</Text>\n            <TextInput\n              style={styles.input}\n              value={email}\n              onChangeText={setEmail}\n              placeholder=\"Enter your email\"\n              placeholderTextColor=\"#999\"\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Message</Text>\n            <TextInput\n              style={[styles.input, styles.messageInput]}\n              value={message}\n              onChangeText={setMessage}\n              placeholder=\"Type your message here\"\n              placeholderTextColor=\"#999\"\n              multiline\n              numberOfLines={4}\n              textAlignVertical=\"top\"\n            />\n          </View>\n\n          <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n            <Text style={styles.submitButtonText}>Send Message</Text>\n          </TouchableOpacity>\n\n          <View style={styles.section}>\n            <Text style={styles.alternativeContact}>\n              Alternatively, you can email me directly at:{'\\n'}\n              sungho@foilquiver.com\n            </Text>\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 24,\n    lineHeight: 24,\n  },\n  form: {\n    marginTop: 20,\n  },\n  inputContainer: {\n    marginBottom: 20,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 8,\n    color: '#333',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    backgroundColor: '#fafafa',\n  },\n  messageInput: {\n    height: 120,\n    textAlignVertical: 'top',\n  },\n  submitButton: {\n    backgroundColor: '#007AFF',\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  section: {\n    marginTop: 32,\n    marginBottom: 24,\n  },\n  alternativeContact: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n    textAlign: 'center',\n  },\n});\n\nexport default Contact; "],"names":["defaultEdges","top","left","bottom","right","getEdgeValue","inset","current","mode","Math","max","SafeAreaView","React","_ref","ref","style","edges","rest","_objectWithoutPropertiesLoose","_excluded","insets","useSafeAreaInsets","edgesRecord","Array","isArray","reduce","acc","edge","appliedStyle","flatStyle","StyleSheet","flatten","margin","marginVertical","marginHorizontal","marginTop","marginRight","marginBottom","marginLeft","marginStyle","padding","paddingVertical","paddingHorizontal","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingStyle","View","_extends","styles","create","container","flex","backgroundColor","content","title","fontSize","fontWeight","subtitle","color","lineHeight","form","inputContainer","label","input","borderWidth","borderColor","borderRadius","messageInput","height","textAlignVertical","submitButton","alignItems","submitButtonText","section","alternativeContact","textAlign","props","name","setName","useState","email","setEmail","message","setMessage","_jsx","children","_jsxs","ScrollView","Text","TextInput","value","onChangeText","placeholder","placeholderTextColor","keyboardType","autoCapitalize","multiline","numberOfLines","TouchableOpacity","onPress","handleSubmit","trim","test","Alert","alert","text"],"sourceRoot":""}