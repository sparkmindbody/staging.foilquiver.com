{"version":3,"file":"static/js/50.1a34a4b7.chunk.js","mappings":"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","sources":["node_modules/react-native-safe-area-context/src/SafeAreaView.web.tsx","src/screens/legal/TermsOfService.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  Edge,\n  EdgeMode,\n  EdgeRecord,\n  NativeSafeAreaViewInstance,\n  NativeSafeAreaViewProps,\n} from './SafeArea.types';\nimport { useSafeAreaInsets } from './SafeAreaContext';\n\nconst defaultEdges: Record<Edge, EdgeMode> = {\n  top: 'additive',\n  left: 'additive',\n  bottom: 'additive',\n  right: 'additive',\n};\n\nfunction getEdgeValue(\n  inset: number,\n  current: number,\n  mode: EdgeMode | undefined,\n) {\n  switch (mode) {\n    case 'off':\n      return current;\n    case 'maximum':\n      return Math.max(current, inset);\n    case 'additive':\n    default:\n      return current + inset;\n  }\n}\n\nexport const SafeAreaView = React.forwardRef<\n  NativeSafeAreaViewInstance,\n  NativeSafeAreaViewProps\n>(({ style = {}, mode, edges, ...rest }, ref) => {\n  const insets = useSafeAreaInsets();\n\n  const edgesRecord = React.useMemo(() => {\n    if (edges == null) {\n      return defaultEdges;\n    }\n\n    return Array.isArray(edges)\n      ? edges.reduce<EdgeRecord>((acc, edge: Edge) => {\n          acc[edge] = 'additive';\n          return acc;\n        }, {})\n      : // ts has trouble with refining readonly arrays.\n        (edges as EdgeRecord);\n  }, [edges]);\n\n  const appliedStyle = React.useMemo(() => {\n    const flatStyle = StyleSheet.flatten(style) as Record<string, number>;\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal,\n      } = flatStyle;\n\n      const marginStyle = {\n        marginTop: getEdgeValue(insets.top, marginTop, edgesRecord.top),\n        marginRight: getEdgeValue(insets.right, marginRight, edgesRecord.right),\n        marginBottom: getEdgeValue(\n          insets.bottom,\n          marginBottom,\n          edgesRecord.bottom,\n        ),\n        marginLeft: getEdgeValue(insets.left, marginLeft, edgesRecord.left),\n      };\n\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal,\n      } = flatStyle;\n\n      const paddingStyle = {\n        paddingTop: getEdgeValue(insets.top, paddingTop, edgesRecord.top),\n        paddingRight: getEdgeValue(\n          insets.right,\n          paddingRight,\n          edgesRecord.right,\n        ),\n        paddingBottom: getEdgeValue(\n          insets.bottom,\n          paddingBottom,\n          edgesRecord.bottom,\n        ),\n        paddingLeft: getEdgeValue(insets.left, paddingLeft, edgesRecord.left),\n      };\n\n      return [style, paddingStyle];\n    }\n  }, [\n    edgesRecord.bottom,\n    edgesRecord.left,\n    edgesRecord.right,\n    edgesRecord.top,\n    insets.bottom,\n    insets.left,\n    insets.right,\n    insets.top,\n    mode,\n    style,\n  ]);\n\n  return <View style={appliedStyle} {...rest} ref={ref} />;\n});\n","import React from 'react';\nimport { ScrollView, Text, StyleSheet, View } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../../types/navigation';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Terms'>;\n\nconst TermsOfService = (props: Props) => {\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.content}>\n        <Text style={styles.title}>Terms of Service</Text>\n        <Text style={styles.lastUpdated}>Last Updated: February 2025</Text>\n        \n        <View style={styles.section}>\n          <Text style={styles.heading}>1. Acceptance of Terms</Text>\n          <Text style={styles.text}>\n            By accessing and using FoilQuiver, you accept and agree to be bound by these Terms of Service.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>2. Use License</Text>\n          <Text style={styles.text}>\n            FoilQuiver provides product comparison information for personal, non-commercial use.\n            All content is provided \"as is\" without warranty of any kind.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>3. Disclaimer</Text>\n          <Text style={styles.text}>\n            While we strive for accuracy, we cannot guarantee the completeness or accuracy of product information.\n            Always verify specifications with manufacturers before making purchase decisions.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>4. Limitations</Text>\n          <Text style={styles.text}>\n            We shall not be liable for any damages arising from the use of FoilQuiver.\n            Product prices and specifications are subject to change without notice.\n          </Text>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  lastUpdated: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 24,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 12,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n  },\n});\n\nexport default TermsOfService; "],"names":["defaultEdges","top","left","bottom","right","getEdgeValue","inset","current","mode","Math","max","SafeAreaView","React","_ref","ref","style","edges","rest","_objectWithoutPropertiesLoose","_excluded","insets","useSafeAreaInsets","edgesRecord","Array","isArray","reduce","acc","edge","appliedStyle","flatStyle","StyleSheet","flatten","margin","marginVertical","marginHorizontal","marginTop","marginRight","marginBottom","marginLeft","marginStyle","padding","paddingVertical","paddingHorizontal","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingStyle","View","_extends","styles","create","container","flex","backgroundColor","content","title","fontSize","fontWeight","lastUpdated","color","section","heading","text","lineHeight","props","_jsx","children","_jsxs","ScrollView","Text"],"sourceRoot":""}