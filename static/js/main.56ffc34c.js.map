{"version":3,"file":"static/js/main.56ffc34c.js","mappings":"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","sources":["src/components/ErrorBoundary.tsx","src/components/SearchBar.tsx","src/components/GoogleSignIn.tsx","src/components/TableSettings.tsx","src/navigation/AppHeader.tsx","App.tsx","index.ts","src/components/LoadingIndicator.tsx","src/components/QuiverManager.tsx","src/config/env.ts","src/config/environment.ts","src/constants/layout.ts","src/context/AppContext.tsx","src/hooks/useFilteredFoils.ts","src/utils/dataTransform.ts","src/services/productService.ts","src/hooks/useFoils.ts","src/hooks/useQuivers.ts","src/theme/ThemeContext.tsx","src/theme/colors.ts","src/theme/spacing.ts","src/utils/analytics.ts","src/utils/foilUtils.ts","src/utils/logger.ts","src/utils/routes.ts","src/utils/storage.ts","src/utils/supabase.ts"],"sourcesContent":["import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Platform } from 'react-native';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    // Log error to your error reporting service\n    console.error('Error caught by boundary:', error, errorInfo);\n  }\n\n  handleRetry = () => {\n    this.setState({ hasError: false, error: null });\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorView error={this.state.error} onRetry={this.handleRetry} />;\n    }\n\n    return this.props.children;\n  }\n}\n\ninterface ErrorViewProps {\n  error: Error | null;\n  onRetry: () => void;\n}\n\nconst ErrorView: React.FC<ErrorViewProps> = ({ error, onRetry }) => {\n  const { colors } = useTheme();\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.primary }]}>\n      <View style={styles.content}>\n        <Text style={[styles.title, { color: colors.error }]}>\n          Something went wrong\n        </Text>\n        <Text style={[styles.message, { color: colors.text.secondary }]}>\n          {error?.message || 'An unexpected error occurred'}\n        </Text>\n        <TouchableOpacity\n          style={[styles.button, { backgroundColor: colors.primary }]}\n          onPress={onRetry}\n        >\n          <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n            Try Again\n          </Text>\n        </TouchableOpacity>\n        {__DEV__ && error && (\n          <Text style={[styles.stack, { color: colors.text.tertiary }]}>\n            {error.stack}\n          </Text>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: spacing.LARGE,\n  },\n  content: {\n    maxWidth: 600,\n    width: '100%',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: spacing.MEDIUM,\n    textAlign: 'center',\n  },\n  message: {\n    fontSize: 16,\n    marginBottom: spacing.LARGE,\n    textAlign: 'center',\n  },\n  button: {\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    marginBottom: spacing.LARGE,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  stack: {\n    fontSize: 12,\n    fontFamily: Platform.OS === 'ios' ? 'Menlo' : 'monospace',\n    marginTop: spacing.LARGE,\n    padding: spacing.MEDIUM,\n    width: '100%',\n  },\n}); ","import React, { useState, useEffect, useRef } from 'react';\nimport { View, TextInput, StyleSheet, TouchableOpacity, Platform, Text, useWindowDimensions } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\nimport { MOBILE_BREAKPOINT } from '../constants/layout';\n\ninterface SearchBarProps {\n  value: string;\n  onChangeText: (text: string) => void;\n  onClear: () => void;\n  placeholder?: string;\n  autoFocus?: boolean;\n  mode?: 'browse' | 'comparison' | 'quiver';\n  onFocus?: () => void;\n}\n\nexport const SearchBar: React.FC<SearchBarProps> = ({\n  value,\n  onChangeText,\n  onClear,\n  placeholder = 'Search foils...',\n  autoFocus = false,\n  mode = 'browse',\n  onFocus,\n}) => {\n  const { colors } = useTheme();\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n\n  const getPlaceholder = () => {\n    if (isMobile) {\n      // Mobile-specific shorter placeholders\n      switch (mode) {\n        case 'comparison':\n          return 'Search to add...';\n        case 'quiver':\n          return 'Search to add...';\n        default:\n          return 'Search foils...';\n      }\n    }\n\n    // Desktop placeholders\n    switch (mode) {\n      case 'comparison':\n        return 'Search foils to add to comparison...';\n      case 'quiver':\n        return 'Search foils to add to quiver...';\n      default:\n        return 'Search foils...';\n    }\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.secondary }]}>\n      {Platform.OS === 'web' ? (\n        <Text style={[styles.searchIcon, { color: colors.text.secondary }]}>🔍</Text>\n      ) : (\n        <Ionicons name=\"search\" size={20} color={colors.text.secondary} />\n      )}\n      <TextInput\n        style={[styles.input, { color: colors.text.primary }]}\n        value={value}\n        onChangeText={onChangeText}\n        placeholder={getPlaceholder()}\n        placeholderTextColor={colors.text.tertiary}\n        autoFocus={autoFocus}\n        onFocus={onFocus}\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n        clearButtonMode=\"never\"\n        returnKeyType=\"search\"\n        maxFontSizeMultiplier={1}\n        {...(Platform.OS === 'web' ? {\n          spellCheck: false,\n          autoComplete: 'off',\n        } : {\n          keyboardType: 'web-search',\n        })}\n      />\n      {value !== '' && (\n        <TouchableOpacity onPress={onClear} style={styles.clearButton}>\n          {Platform.OS === 'web' ? (\n            <Text style={[styles.clearIcon, { color: colors.text.secondary }]}>✕</Text>\n          ) : (\n            <Ionicons name=\"close-circle\" size={20} color={colors.text.secondary} />\n          )}\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: spacing.MEDIUM,\n    height: 40,\n    borderRadius: 8,\n    gap: spacing.SMALL,\n  },\n  input: {\n    flex: 1,\n    fontSize: 16,\n    height: '100%',\n    ...(Platform.OS === 'web' && {\n      outlineStyle: 'none',\n      border: 'none',\n      background: 'transparent',\n      lineHeight: 40,\n    }),\n  },\n  clearButton: {\n    height: '100%',\n    aspectRatio: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  searchIcon: {\n    fontSize: 16,\n    width: 20,\n    height: 20,\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n  clearIcon: {\n    fontSize: 16,\n    width: 20,\n    height: 20,\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n}); ","import React, { useEffect } from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { supabase } from '../utils/supabase';\nimport { GOOGLE_CLIENT_ID } from '../config/env';\n\ninterface GoogleSignInProps {\n  onSuccess?: () => void;\n}\n\ninterface GoogleCredentialResponse {\n  credential: string;\n}\n\ndeclare global {\n  interface Window {\n    google?: {\n      accounts: {\n        id: {\n          initialize: (config: any) => void;\n          renderButton: (element: HTMLElement, config: any) => void;\n          prompt: () => void;\n        };\n      };\n    };\n  }\n}\n\nexport const GoogleSignIn = ({ onSuccess }: GoogleSignInProps) => {\n  useEffect(() => {\n    const initializeGoogleSignIn = () => {\n      if (Platform.OS !== 'web' || typeof window === 'undefined' || !window.google) return;\n\n      window.google.accounts.id.initialize({\n        client_id: GOOGLE_CLIENT_ID,\n        callback: async (response: GoogleCredentialResponse) => {\n          try {\n            const { data, error } = await supabase.auth.signInWithIdToken({\n              provider: 'google',\n              token: response.credential,\n            });\n\n            if (error) {\n              console.error('Error signing in with Google:', error);\n              return;\n            }\n\n            onSuccess?.();\n          } catch (error) {\n            console.error('Unexpected error during Google sign in:', error);\n          }\n        },\n        use_fedcm_for_prompt: true,\n      });\n\n      // Render the button\n      const buttonContainer = document.getElementById('google-signin-button');\n      if (buttonContainer) {\n        window.google.accounts.id.renderButton(buttonContainer, {\n          type: 'standard',\n          theme: 'outline',\n          size: 'large',\n          text: 'signin_with',\n          shape: 'pill',\n        });\n      }\n    };\n\n    // Load the Google Sign-In script\n    if (Platform.OS === 'web') {\n      const script = document.createElement('script');\n      script.src = 'https://accounts.google.com/gsi/client';\n      script.async = true;\n      script.onload = initializeGoogleSignIn;\n      document.body.appendChild(script);\n\n      return () => {\n        document.body.removeChild(script);\n      };\n    }\n  }, [onSuccess]);\n\n  if (Platform.OS !== 'web') {\n    return null;\n  }\n\n  return (\n    <View style={styles.container}>\n      <div id=\"google-signin-button\" />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: 40,\n  },\n}); ","import React, { useState, useMemo, useEffect } from 'react';\nimport { View, Text, Pressable, StyleSheet, Modal, Platform, ScrollView, Image, Alert } from 'react-native';\nimport { MaterialIcons, Ionicons } from '@expo/vector-icons';\nimport { useTheme } from '../theme/ThemeContext';\nimport { FilterOptions } from '../types/filters';\nimport { BaseProduct } from '../types/scraper';\nimport { saveFilters, saveColumns, loadFilters, loadColumns, StoredFilters, StoredColumns } from '../utils/storage';\nimport { spacing } from '../theme/spacing';\nimport { supabase } from '../utils/supabase';\nimport { Session, User } from '@supabase/supabase-js';\nimport { GoogleSignIn } from './GoogleSignIn';\nimport { QuiversMenu } from './QuiversMenu';\nimport { QuiverManager } from './QuiverManager';\n\ninterface Column {\n  id: string;\n  label: string;\n  isVisible: boolean;\n}\n\ninterface TableSettingsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n  onClearFilters: () => void;\n  columns: Column[];\n  onColumnVisibilityChange: (columnId: string) => void;\n  onResetColumns: () => void;\n  foils: BaseProduct[];\n}\n\nexport function TableSettings({\n  filterOptions,\n  selectedBrands,\n  selectedSeries,\n  selectedTypes,\n  onFilterChange,\n  onClearFilters,\n  columns,\n  onColumnVisibilityChange,\n  onResetColumns,\n  foils,\n}: TableSettingsProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [activeTab, setActiveTab] = useState<'filters' | 'columns' | 'account' | 'appearance'>('filters');\n  const { colors, isDark, toggleTheme } = useTheme();\n  const [session, setSession] = useState<Session | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [isQuiversModalVisible, setIsQuiversModalVisible] = useState(false);\n\n  // Get initial session and listen for auth changes\n  useEffect(() => {\n    console.log('Setting up auth listeners...');\n    \n    supabase.auth.getSession().then(({ data: { session } }) => {\n      console.log('Initial session check:', session ? 'Session exists' : 'No session');\n      setSession(session);\n      setUser(session?.user ?? null);\n    });\n\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\n      console.log('Auth state changed:', _event);\n      console.log('New session:', session ? 'Session exists' : 'No session');\n      setSession(session);\n      setUser(session?.user ?? null);\n      if (session) {\n        console.log('User logged in:', session.user);\n      }\n    });\n\n    return () => {\n      console.log('Cleaning up auth listeners...');\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  // Load saved settings on mount\n  useEffect(() => {\n    const loadSavedSettings = async () => {\n      try {\n        // Load and apply saved filters\n        const savedFilters = await loadFilters();\n        if (savedFilters) {\n          savedFilters.brands.forEach(brand => onFilterChange('brands', brand));\n          savedFilters.series.forEach(series => onFilterChange('series', series));\n          savedFilters.types.forEach(type => onFilterChange('type', type));\n        }\n\n        // Load and apply saved column settings\n        const savedColumns = await loadColumns();\n        if (savedColumns) {\n          // Create a map of current column visibility\n          const currentColumns = Object.fromEntries(\n            columns.map(col => [col.id, col.isVisible])\n          );\n\n          // Update each column's visibility if it differs from saved state\n          Object.entries(savedColumns).forEach(([columnId, isVisible]) => {\n            if (currentColumns[columnId] !== isVisible) {\n              onColumnVisibilityChange(columnId);\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Error loading settings:', error);\n      }\n    };\n\n    loadSavedSettings();\n  }, []);\n\n  // Save filters when they change\n  useEffect(() => {\n    const saveFilterSettings = async () => {\n      try {\n        const filters: StoredFilters = {\n          brands: selectedBrands,\n          series: selectedSeries,\n          types: selectedTypes,\n        };\n        await saveFilters(filters);\n      } catch (error) {\n        console.error('Error saving filter settings:', error);\n      }\n    };\n\n    saveFilterSettings();\n  }, [selectedBrands, selectedSeries, selectedTypes]);\n\n  // Save column settings when they change\n  useEffect(() => {\n    const saveColumnSettings = async () => {\n      try {\n        const columnSettings: StoredColumns = {};\n        columns.forEach(column => {\n          columnSettings[column.id] = column.isVisible;\n        });\n        await saveColumns(columnSettings);\n      } catch (error) {\n        console.error('Error saving column settings:', error);\n      }\n    };\n\n    saveColumnSettings();\n  }, [columns]);\n\n  const handleSignOut = async () => {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n      setSession(null);\n      setUser(null);\n      setIsOpen(false);\n    } catch (error) {\n      Alert.alert('Error', 'Failed to sign out');\n      console.error('Sign out error:', error);\n    }\n  };\n\n  // Handle column visibility change\n  const handleColumnVisibilityChange = async (columnId: string) => {\n    onColumnVisibilityChange(columnId);\n  };\n\n  // Handle reset columns\n  const handleResetColumns = async () => {\n    onResetColumns();\n    try {\n      const columnSettings: StoredColumns = {};\n      columns.forEach(column => {\n        columnSettings[column.id] = column.isVisible;\n      });\n      await saveColumns(columnSettings);\n    } catch (error) {\n      console.error('Error resetting column settings:', error);\n    }\n  };\n\n  // Filter series based on selected brands\n  const availableSeries = useMemo(() => {\n    if (selectedBrands.length === 0) {\n      return filterOptions.series;\n    }\n\n    // Get all series from foils that match selected brands\n    const seriesSet = new Set<string>();\n    foils.forEach(foil => {\n      if (selectedBrands.includes(foil.brand) && foil.series) {\n        seriesSet.add(foil.series);\n      }\n    });\n\n    return Array.from(seriesSet).sort();\n  }, [filterOptions.series, selectedBrands, foils]);\n\n  const renderAccountTab = () => {\n    console.log('Rendering account tab, session:', session ? 'exists' : 'none');\n    \n    if (!session) {\n      return (\n        <View style={styles.contentWrapper}>\n          <View style={styles.content}>\n            <Text style={[styles.contentTitle, { color: colors.text.primary, marginBottom: 16 }]}>Sign In</Text>\n            <GoogleSignIn onSuccess={() => {\n              console.log('Google Sign In success callback triggered');\n              // Session will be updated automatically through the auth state change listener\n              setIsOpen(false);\n            }} />\n          </View>\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.contentWrapper}>\n        <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n          <View style={styles.content}>\n            <View style={styles.userInfo}>\n              {user?.user_metadata?.avatar_url && (\n                <Image \n                  source={{ uri: user.user_metadata.avatar_url }} \n                  style={styles.avatarImage}\n                />\n              )}\n              <View style={styles.userTextInfo}>\n                <Text style={[styles.userName, { color: colors.text.primary }]}>\n                  {user?.user_metadata?.full_name || user?.email}\n                </Text>\n                <Text style={[styles.userEmail, { color: colors.text.secondary }]}>\n                  {user?.email}\n                </Text>\n              </View>\n            </View>\n\n            <View style={[styles.menuDivider, { backgroundColor: colors.border }]} />\n\n            <View style={styles.section}>\n              <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Quivers</Text>\n              <Pressable\n                style={[styles.menuButton, { backgroundColor: colors.background.secondary }]}\n                onPress={() => {\n                  setIsQuiversModalVisible(true);\n                }}\n              >\n                <View style={styles.menuButtonContent}>\n                  {Platform.OS === 'web' ? (\n                    <Text style={{ fontSize: 20, color: colors.text.primary }}>🎯</Text>\n                  ) : (\n                    <Ionicons name=\"bookmark-outline\" size={20} color={colors.text.primary} />\n                  )}\n                  <Text style={[styles.menuButtonText, { color: colors.text.primary }]}>Manage Quivers</Text>\n                </View>\n                <MaterialIcons name=\"chevron-right\" size={20} color={colors.text.secondary} />\n              </Pressable>\n            </View>\n\n            <View style={styles.section}>\n              <Pressable\n                style={[styles.signOutButton, { backgroundColor: colors.background.secondary }]}\n                onPress={handleSignOut}\n              >\n                <View style={styles.menuButtonContent}>\n                  {Platform.OS === 'web' ? (\n                    <Text style={{ fontSize: 20, color: colors.text.primary }}>⇥</Text>\n                  ) : (\n                    <Ionicons name=\"log-out-outline\" size={20} color={colors.text.primary} />\n                  )}\n                  <Text style={[styles.menuButtonText, { color: colors.text.primary }]}>Sign Out</Text>\n                </View>\n              </Pressable>\n            </View>\n          </View>\n        </ScrollView>\n      </View>\n    );\n  };\n\n  return (\n    <>\n      <Pressable \n        onPress={() => setIsOpen(true)}\n        style={[styles.iconButton, { backgroundColor: colors.background.secondary }]}\n      >\n        <MaterialIcons name=\"settings\" size={24} color={colors.text.primary} />\n      </Pressable>\n\n      <Modal\n        visible={isOpen}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => setIsOpen(false)}\n      >\n        <Pressable \n          style={[styles.modalOverlay, { backgroundColor: isDark ? 'rgba(0, 0, 0, 0.7)' : 'rgba(0, 0, 0, 0.5)' }]}\n          onPress={() => setIsOpen(false)}\n        >\n          <Pressable \n            style={[styles.modalContent, { backgroundColor: colors.background.primary }]}\n            onPress={e => e.stopPropagation()}\n          >\n            <View style={[styles.modalHeader, { borderBottomColor: colors.border }]}>\n              <Text style={[styles.modalTitle, { color: colors.text.primary }]}>Settings</Text>\n              <Pressable \n                onPress={() => setIsOpen(false)}\n                style={styles.closeButton}\n              >\n                <MaterialIcons name=\"close\" size={24} color={colors.text.secondary} />\n              </Pressable>\n            </View>\n\n            <View style={[styles.tabs, { borderBottomColor: colors.border }]}>\n              <Pressable\n                style={[styles.tab, activeTab === 'filters' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('filters')}\n              >\n                <Text style={[\n                  styles.tabText, \n                  { color: colors.text.secondary },\n                  activeTab === 'filters' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Filters {(selectedBrands.length > 0 || selectedSeries.length > 0 || selectedTypes.length > 0) && '•'}\n                </Text>\n              </Pressable>\n              <Pressable\n                style={[styles.tab, activeTab === 'columns' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('columns')}\n              >\n                <Text style={[\n                  styles.tabText,\n                  { color: colors.text.secondary },\n                  activeTab === 'columns' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Columns {columns.some(col => !col.isVisible) && '•'}\n                </Text>\n              </Pressable>\n              <Pressable\n                style={[styles.tab, activeTab === 'appearance' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('appearance')}\n              >\n                <Text style={[\n                  styles.tabText,\n                  { color: colors.text.secondary },\n                  activeTab === 'appearance' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Appearance\n                </Text>\n              </Pressable>\n              <Pressable\n                style={[styles.tab, activeTab === 'account' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('account')}\n              >\n                <Text style={[\n                  styles.tabText,\n                  { color: colors.text.secondary },\n                  activeTab === 'account' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Account\n                </Text>\n              </Pressable>\n            </View>\n\n            {activeTab === 'filters' ? (\n              <View style={styles.contentWrapper}>\n                <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n                  <View style={styles.content}>\n                    <View style={styles.headerWithAction}>\n                      <Text style={[styles.contentTitle, { color: colors.text.primary }]}>Active Filters</Text>\n                      {(selectedBrands.length > 0 || selectedSeries.length > 0 || selectedTypes.length > 0) && (\n                        <Pressable \n                          onPress={onClearFilters}\n                          style={[styles.clearButton, { backgroundColor: colors.background.secondary }]}\n                        >\n                          <Text style={[styles.clearButtonText, { color: colors.text.secondary }]}>Clear All</Text>\n                        </Pressable>\n                      )}\n                    </View>\n                    <View style={styles.section}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Brand</Text>\n                      <View style={styles.chipContainer}>\n                        {filterOptions.brands.map((brand) => (\n                          <Pressable\n                            key={brand}\n                            style={[\n                              styles.chip,\n                              { backgroundColor: colors.background.secondary },\n                              selectedBrands.includes(brand) && [styles.chipSelected, { backgroundColor: colors.primary }],\n                            ]}\n                            onPress={() => onFilterChange('brands', brand)}\n                          >\n                            <Text \n                              style={[\n                                styles.chipText,\n                                { color: colors.text.secondary },\n                                selectedBrands.includes(brand) && [styles.chipTextSelected, { color: colors.text.inverse }],\n                              ]}\n                            >\n                              {brand}\n                            </Text>\n                          </Pressable>\n                        ))}\n                      </View>\n                    </View>\n\n                    <View style={styles.section}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Type</Text>\n                      <View style={styles.chipContainer}>\n                        {filterOptions.types.map((type) => (\n                          <Pressable\n                            key={type}\n                            style={[\n                              styles.chip,\n                              { backgroundColor: colors.background.secondary },\n                              selectedTypes.includes(type) && [styles.chipSelected, { backgroundColor: colors.primary }],\n                            ]}\n                            onPress={() => onFilterChange('type', type)}\n                          >\n                            <Text \n                              style={[\n                                styles.chipText,\n                                { color: colors.text.secondary },\n                                selectedTypes.includes(type) && [styles.chipTextSelected, { color: colors.text.inverse }],\n                              ]}\n                            >\n                              {type}\n                            </Text>\n                          </Pressable>\n                        ))}\n                      </View>\n                    </View>\n\n                    <View style={styles.section}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Series</Text>\n                      <View style={styles.chipContainer}>\n                        {availableSeries.length > 0 ? (\n                          availableSeries.map((series) => (\n                            <Pressable\n                              key={series}\n                              style={[\n                                styles.chip,\n                                { backgroundColor: colors.background.secondary },\n                                selectedSeries.includes(series) && [styles.chipSelected, { backgroundColor: colors.primary }],\n                              ]}\n                              onPress={() => onFilterChange('series', series)}\n                            >\n                              <Text \n                                style={[\n                                  styles.chipText,\n                                  { color: colors.text.secondary },\n                                  selectedSeries.includes(series) && [styles.chipTextSelected, { color: colors.text.inverse }],\n                                ]}\n                              >\n                                {series}\n                              </Text>\n                            </Pressable>\n                          ))\n                        ) : (\n                          <Text style={[styles.noSeriesText, { color: colors.text.secondary }]}>\n                            No series available for selected brands\n                          </Text>\n                        )}\n                      </View>\n                    </View>\n                  </View>\n                </ScrollView>\n              </View>\n            ) : activeTab === 'columns' ? (\n              <View style={styles.contentWrapper}>\n                <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n                  <View style={styles.content}>\n                    <View style={styles.headerWithAction}>\n                      <Text style={[styles.contentTitle, { color: colors.text.primary }]}>Visible Columns</Text>\n                      {columns.some(col => !col.isVisible) && (\n                        <Pressable \n                          onPress={handleResetColumns}\n                          style={[styles.clearButton, { backgroundColor: colors.background.secondary }]}\n                        >\n                          <Text style={[styles.clearButtonText, { color: colors.text.secondary }]}>Reset</Text>\n                        </Pressable>\n                      )}\n                    </View>\n                    <View style={styles.columnList}>\n                      {columns.map(column => (\n                        <Pressable\n                          key={column.id}\n                          style={styles.columnItem}\n                          onPress={() => handleColumnVisibilityChange(column.id)}\n                        >\n                          <Text style={[styles.columnLabel, { color: colors.text.primary }]}>{column.label}</Text>\n                          <View style={[\n                            styles.checkbox,\n                            { borderColor: colors.border },\n                            column.isVisible && [styles.checkboxChecked, { backgroundColor: colors.primary, borderColor: colors.primary }]\n                          ]}>\n                            {column.isVisible && (\n                              <MaterialIcons name=\"check\" size={16} color={colors.text.inverse} />\n                            )}\n                          </View>\n                        </Pressable>\n                      ))}\n                    </View>\n                  </View>\n                </ScrollView>\n              </View>\n            ) : activeTab === 'appearance' ? (\n              <View style={styles.contentWrapper}>\n                <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n                  <View style={styles.content}>\n                    <Text style={[styles.contentTitle, { color: colors.text.primary }]}>Theme Settings</Text>\n                    <View style={styles.section}>\n                      <Pressable\n                        style={[styles.menuButton, { backgroundColor: colors.background.secondary }]}\n                        onPress={toggleTheme}\n                      >\n                        <View style={styles.menuButtonContent}>\n                          <MaterialIcons \n                            name={isDark ? 'dark-mode' : 'light-mode'} \n                            size={20} \n                            color={colors.text.primary} \n                          />\n                          <Text style={[styles.menuButtonText, { color: colors.text.primary }]}>\n                            {isDark ? 'Dark Mode' : 'Light Mode'}\n                          </Text>\n                        </View>\n                      </Pressable>\n                    </View>\n                  </View>\n                </ScrollView>\n              </View>\n            ) : (\n              renderAccountTab()\n            )}\n          </Pressable>\n        </Pressable>\n      </Modal>\n\n      <Modal\n        visible={isQuiversModalVisible}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => setIsQuiversModalVisible(false)}\n      >\n        <View \n          style={[\n            styles.modalOverlay,\n            { backgroundColor: 'rgba(0, 0, 0, 0.5)' }\n          ]}\n          onStartShouldSetResponder={() => true}\n        >\n          <View \n            style={[\n              styles.modalContent,\n              { backgroundColor: colors.background.primary }\n            ]}\n          >\n            <QuiverManager\n              selectedFoils={[]}\n              onClose={() => setIsQuiversModalVisible(false)}\n              initialTab=\"saved\"\n              standalone={true}\n            />\n          </View>\n        </View>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n  },\n  button: {\n    padding: spacing.MEDIUM,\n  },\n  iconButton: {\n    padding: spacing.XSMALL,\n    borderRadius: 8,\n  },\n  modalContent: {\n    width: '100%',\n    maxWidth: 600,\n    borderRadius: 12,\n    maxHeight: '90%',\n    overflow: 'hidden',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n    borderBottomWidth: 1,\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n  },\n  columnGroup: {\n    flexDirection: 'column',\n    gap: spacing.MEDIUM,\n  },\n  filterGroup: {\n    padding: spacing.MEDIUM,\n  },\n  filterList: {\n    gap: spacing.MEDIUM,\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n  },\n  closeButton: {\n    padding: 4,\n  },\n  tabs: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n  },\n  tab: {\n    flex: 1,\n    padding: 12,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n  },\n  tabText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  activeTabText: {\n    // Remove static color reference since we're applying it dynamically\n  },\n  content: {\n    padding: 16,\n    width: '100%',\n  },\n  contentWrapper: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 12,\n  },\n  chipContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  chip: {\n    borderRadius: 16,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n  },\n  chipSelected: {},\n  chipText: {\n    fontSize: 14,\n  },\n  chipTextSelected: {},\n  columnList: {\n    gap: 12,\n  },\n  columnItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n  },\n  columnLabel: {\n    fontSize: 14,\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderRadius: 4,\n    borderWidth: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  checkboxChecked: {},\n  headerWithAction: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  contentTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  clearButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n  },\n  clearButtonText: {\n    fontSize: 14,\n  },\n  noSeriesText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  // User Menu Styles\n  userInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n    marginBottom: 16,\n  },\n  userTextInfo: {\n    flex: 1,\n  },\n  avatarImage: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n  },\n  userName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  userEmail: {\n    fontSize: 14,\n  },\n  menuDivider: {\n    height: 1,\n    marginBottom: 16,\n  },\n  menuButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  menuButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n  },\n  menuButtonText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  signOutButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n}); ","import React, { lazy, Suspense, useEffect, useMemo, useContext } from 'react';\nimport { View, Text, StyleSheet, Pressable, Platform, useWindowDimensions, Alert, TouchableOpacity } from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackParamList, RootStackNavigationProp } from '../types/navigation';\nimport { SearchBar } from '../components/SearchBar';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { TableSettings } from '../components/TableSettings';\nimport { useTheme } from '../theme/ThemeContext';\nimport { useFoils } from '../hooks/useFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { FilterOptions } from '../types/filters';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT, DEFAULT_COLUMNS, getTableWidth, getContentWidth, Column } from '../constants/layout';\nimport { loadColumns, loadFilters, saveFilters } from '../utils/storage';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useApp } from '../context/AppContext';\nimport { routes } from '../utils/routes';\nimport { getEnvironmentConfig } from '../config/environment';\nimport { generateFoilId } from '../utils/foilUtils';\nimport { QuiverManager } from '../components/QuiverManager';\nimport { QuiverContext } from '../../App';\n\n// Lazy load screens with proper suspense boundaries\nconst BrowseScreen = React.lazy(() => import('../screens/BrowseScreen'));\nconst ComparisonScreen = React.lazy(() => import('../screens/ComparisonScreen'));\nconst QuiverScreen = React.lazy(() => import('../screens/QuiverScreen'));\nconst PrivacyPolicy = React.lazy(() => import('../screens/legal/PrivacyPolicy'));\nconst TermsOfService = React.lazy(() => import('../screens/legal/TermsOfService'));\nconst Contact = React.lazy(() => import('../screens/legal/Contact'));\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nconst ICON_NAMES = {\n  home: 'home-outline' as const,\n  browse: 'search-outline' as const,\n  compare: 'git-compare-outline' as const,\n  settings: 'settings-outline' as const,\n  quiver: 'bookmark-outline' as const,\n};\n\nfunction TabBarIcon({ name, color }: { name: keyof typeof ICON_NAMES; color: string }) {\n  if (Platform.OS === 'web') {\n    // Use text alternatives for web\n    const webIcons: Record<keyof typeof ICON_NAMES, string> = {\n      home: '🏠',\n      browse: '🔍',\n      compare: '⚖️',\n      settings: '⚙️',\n      quiver: '🔖'\n    };\n    return <Text style={{ fontSize: 20, color }}>{webIcons[name]}</Text>;\n  }\n  return <Ionicons name={ICON_NAMES[name]} size={24} color={color} />;\n}\n\n// Define linking configuration for web\nconst linking = {\n  prefixes: [getEnvironmentConfig().webUrl],\n  config: {\n    screens: {\n      Browse: {\n        path: routes.browse,\n        parse: {\n          mode: (mode: string) => mode,\n        },\n      },\n      Comparison: routes.comparison,\n      Quiver: routes.quiver,\n      Terms: routes.terms,\n      Privacy: routes.privacy,\n      Contact: routes.contact,\n    },\n  },\n};\n\n// Screen wrapper with suspense and navigation props\nconst ScreenWrapper = ({ \n  children, \n  ...props \n}: { \n  children: React.ReactElement; \n  [key: string]: any;\n}) => (\n  <Suspense fallback={<LoadingIndicator />}>\n    {React.cloneElement(children, props)}\n  </Suspense>\n);\n\nexport const AppHeader = () => {\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { colors } = useTheme();\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const { foils } = useFoils();\n  const { \n    searchQuery, \n    setSearchQuery, \n    filters, \n    setFilters, \n    columns, \n    setColumns,\n    setCurrentScreen \n  } = useApp();\n  const { filterOptions } = useFilteredFoils(foils, filters);\n  const { showQuiverManager } = useContext(QuiverContext);\n\n  // Calculate brands from foils\n  const brands = React.useMemo(() => {\n    if (!foils?.length) return [];\n    return [...new Set(foils.map(foil => foil.brand))].sort();\n  }, [foils]);\n\n  // Add missing function definitions\n  const handleLogoPress = () => {\n    navigation.navigate('Browse', {});\n  };\n\n  const handleSearch = (text: string) => {\n    setSearchQuery(text);\n    navigation.setParams({ searchQuery: text });\n  };\n\n  const getViewMode = (route: any) => {\n    if (route.name === 'Comparison') return 'comparison';\n    if (route.name === 'Quiver') return 'quiver';\n    return 'browse';\n  };\n\n  const getSearchPlaceholder = (route: any) => {\n    switch (route.name) {\n      case 'Comparison':\n        return 'Search foils to add to comparison...';\n      case 'Quiver':\n        return 'Search foils to add to quiver...';\n      default:\n        return 'Search foils...';\n    }\n  };\n\n  const handleSearchFocus = (route: any) => {\n    if (route.name === 'Browse') {\n      navigation.setParams({ showSearchDropdown: true });\n    }\n  };\n\n  const handleFilterChange = (type: keyof FilterOptions, value: string) => {\n    setFilters(prev => ({\n      ...prev,\n      [type]: prev[type].includes(value)\n        ? prev[type].filter(item => item !== value)\n        : [...prev[type], value]\n    }));\n  };\n\n  const handleFilterChangeWrapper = (type: string, value: string) => {\n    handleFilterChange(type as keyof FilterOptions, value);\n  };\n\n  const handleClearFilters = () => {\n    setFilters({\n      brands: [],\n      series: [],\n      type: []\n    });\n  };\n\n  const handleColumnVisibilityChange = (columnId: string) => {\n    setColumns(prev => \n      prev.map(col => \n        col.id === columnId ? { ...col, isVisible: !col.isVisible } : col\n      )\n    );\n  };\n\n  const handleResetColumns = () => {\n    setColumns(DEFAULT_COLUMNS);\n  };\n\n  // Calculate table width based on visible columns\n  const tableWidth = React.useMemo(() => getTableWidth(columns), [columns]);\n\n  // Calculate content width including padding\n  const contentWidth = React.useMemo(() => \n    getContentWidth(tableWidth, width, isMobile), \n    [tableWidth, width, isMobile]\n  );\n\n  // Calculate container width for header alignment\n  const containerWidth = React.useMemo(() => {\n    if (isMobile) {\n      return '100%';\n    }\n    // Match the table's container width exactly\n    return Math.min(tableWidth + (CONTAINER_PADDING * 2), width);\n  }, [tableWidth, width, isMobile]);\n\n  // Load saved column settings on mount\n  useEffect(() => {\n    const loadSavedColumnSettings = async () => {\n      try {\n        const savedColumns = await loadColumns();\n        if (savedColumns) {\n          const updatedColumns = DEFAULT_COLUMNS.map(col => ({\n            ...col,\n            isVisible: typeof savedColumns[col.id] === 'boolean' ? savedColumns[col.id] : col.isVisible\n          }));\n          setColumns(updatedColumns);\n        }\n      } catch (error) {\n        console.error('Error loading column settings:', error);\n      }\n    };\n\n    loadSavedColumnSettings();\n  }, []);\n\n  // Load saved filter settings on mount\n  useEffect(() => {\n    const loadSavedSettings = async () => {\n      try {\n        const savedFilters = await loadFilters();\n        if (savedFilters) {\n          setFilters({\n            brands: savedFilters.brands || [],\n            series: savedFilters.series || [],\n            type: savedFilters.types || []\n          });\n        }\n      } catch (error) {\n        console.error('Error loading filter settings:', error);\n      }\n    };\n\n    loadSavedSettings();\n  }, []);\n\n  const headerMainContainerStyle = React.useMemo(() => {\n    if (isMobile) {\n      return {\n        width: '100%' as const,\n        paddingHorizontal: CONTAINER_PADDING\n      };\n    }\n\n    // For web, match the table width exactly without additional padding\n    const containerWidth = getTableWidth(columns);\n    return {\n      width: containerWidth,\n      maxWidth: getContentWidth(containerWidth, width, false),\n      alignSelf: 'center' as const\n    };\n  }, [columns, width, isMobile]);\n\n  const renderHeaderRight = (route: any) => {\n    if (isMobile) {\n      return (\n        <View style={styles.headerRightContainerMobile}>\n          <TouchableOpacity\n            style={[styles.headerButton]}\n            onPress={showQuiverManager}\n          >\n            <TabBarIcon name=\"quiver\" color={colors.text.primary} />\n          </TouchableOpacity>\n          <TableSettings\n            filterOptions={filterOptions}\n            selectedBrands={filters.brands}\n            selectedSeries={filters.series}\n            selectedTypes={filters.type}\n            onFilterChange={handleFilterChangeWrapper}\n            onClearFilters={handleClearFilters}\n            columns={columns}\n            onColumnVisibilityChange={handleColumnVisibilityChange}\n            onResetColumns={handleResetColumns}\n            foils={foils}\n          />\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.headerRightContainerWeb}>\n        <TouchableOpacity\n          style={[styles.headerButton]}\n          onPress={showQuiverManager}\n        >\n          <TabBarIcon name=\"quiver\" color={colors.text.primary} />\n          {!isMobile && (\n            <Text style={[styles.headerButtonText, { color: colors.text.primary }]}>\n              My Quivers\n            </Text>\n          )}\n        </TouchableOpacity>\n        <TableSettings\n          filterOptions={filterOptions}\n          selectedBrands={filters.brands}\n          selectedSeries={filters.series}\n          selectedTypes={filters.type}\n          onFilterChange={handleFilterChangeWrapper}\n          onClearFilters={handleClearFilters}\n          columns={columns}\n          onColumnVisibilityChange={handleColumnVisibilityChange}\n          onResetColumns={handleResetColumns}\n          foils={foils}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: colors.background.primary,\n        },\n        headerShadowVisible: false,\n      }}\n    >\n      <Stack.Screen \n        name=\"Browse\"\n        options={({ route }) => ({\n          headerTitle: route.params?.title || '',\n          headerLeft: () => (\n            <View style={[\n              styles.headerOuterContainer,\n              { backgroundColor: colors.background.primary },\n              !isMobile && { alignItems: 'center' }\n            ]}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <View style={styles.headerTopRowMobile}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainerMobile,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitleMobile, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={styles.searchBarContainerMobile}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  headerMainContainerStyle\n                ]}>\n                  <View style={[\n                    styles.headerContentWeb,\n                    { \n                      width: '100%',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }\n                  ]}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={[styles.searchBarContainerWeb, { flex: 1 }]}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n        })}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <BrowseScreen\n              {...props}\n              filters={filters}\n              onFilterChange={handleFilterChangeWrapper}\n              columns={columns}\n              brands={brands}\n            />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Comparison\"\n        options={({ route }) => ({\n          headerTitle: route.params?.title || '',\n          headerLeft: () => (\n            <View style={[\n              styles.headerOuterContainer,\n              { backgroundColor: colors.background.primary },\n              !isMobile && { alignItems: 'center' }\n            ]}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <View style={styles.headerTopRowMobile}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainerMobile,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitleMobile, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={styles.searchBarContainerMobile}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  headerMainContainerStyle\n                ]}>\n                  <View style={[\n                    styles.headerContentWeb,\n                    { \n                      width: '100%',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }\n                  ]}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={[styles.searchBarContainerWeb, { flex: 1 }]}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n        })}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <ComparisonScreen {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Quiver\"\n        options={({ route }) => ({\n          headerTitle: '',\n          headerLeft: () => (\n            <View style={[\n              styles.headerOuterContainer,\n              { backgroundColor: colors.background.primary },\n              !isMobile && { alignItems: 'center' }\n            ]}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <View style={styles.headerTopRowMobile}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainerMobile,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitleMobile, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={styles.searchBarContainerMobile}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  headerMainContainerStyle\n                ]}>\n                  <View style={[\n                    styles.headerContentWeb,\n                    { \n                      width: '100%',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }\n                  ]}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={[styles.searchBarContainerWeb, { flex: 1 }]}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n        })}\n      >\n        {(props) => {\n          const currentQuiverFoils = React.useMemo(() => {\n            if (!props.route.params?.foil_ids || !Array.isArray(foils)) return [];\n            return foils.filter(f => {\n              if (!f) return false;\n              const foilId = generateFoilId(f);\n              return props.route.params.foil_ids.includes(foilId);\n            });\n          }, [props.route.params?.foil_ids, foils]);\n\n          return (\n            <ScreenWrapper>\n              <QuiverScreen {...props}\n                searchProps={{\n                  value: searchQuery,\n                  onChangeText: handleSearch,\n                  onClear: () => setSearchQuery(''),\n                  mode: 'quiver',\n                  placeholder: 'Search foils in quiver...'\n                }}\n                tableSettingsProps={{\n                  filterOptions,\n                  selectedBrands: filters.brands,\n                  selectedSeries: filters.series,\n                  selectedTypes: filters.type,\n                  onFilterChange: handleFilterChangeWrapper,\n                  onClearFilters: handleClearFilters,\n                  columns,\n                  onColumnVisibilityChange: handleColumnVisibilityChange,\n                  onResetColumns: handleResetColumns,\n                  foils: currentQuiverFoils\n                }}\n              />\n            </ScreenWrapper>\n          );\n        }}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Terms\"\n        options={{\n          headerShown: false,\n        }}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <TermsOfService {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Privacy\"\n        options={{\n          headerShown: false,\n        }}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <PrivacyPolicy {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Contact\"\n        options={{\n          headerShown: false,\n        }}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <Contact {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n    </Stack.Navigator>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerOuterContainer: {\n    flex: 1,\n    paddingHorizontal: CONTAINER_PADDING,\n  },\n  // Mobile Styles\n  headerMainContainerMobile: {\n    width: '100%',\n  },\n  headerTopRowMobile: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    height: 48,\n    width: '100%',\n    gap: 8,\n  },\n  logoContainerMobile: {\n    height: '100%',\n    justifyContent: 'center',\n    minWidth: 80,\n  },\n  headerTitleMobile: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  searchBarContainerMobile: {\n    flex: 1,\n    height: 36,\n    minWidth: 120,\n    maxWidth: 200,\n  },\n  headerRightContainerMobile: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n    zIndex: 2000,\n  },\n  // Web Styles\n  headerMainContainerWeb: {\n    height: 72,\n    width: '100%',\n  },\n  headerContentWeb: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 24,\n    height: '100%',\n    width: '100%',\n  },\n  searchBarContainerWeb: {\n    flex: 1,\n    height: 40,\n  },\n  // Common Styles\n  logoContainer: {\n    height: '100%',\n    justifyContent: 'center',\n    minWidth: 120,\n  },\n  logoPressed: {\n    opacity: 0.7,\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  headerRightContainerWeb: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n    paddingRight: CONTAINER_PADDING,\n    zIndex: 2000,\n  },\n  headerButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    padding: 6,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      userSelect: 'none',\n    }),\n  },\n  headerButtonText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n}); ","import React, { useRef, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNavigationContainerRef, LinkingOptions, getStateFromPath, getPathFromState } from '@react-navigation/native';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { View } from 'react-native';\nimport { ErrorBoundary } from './src/components/ErrorBoundary';\nimport { ThemeProvider } from './src/theme/ThemeContext';\nimport { AppProvider } from './src/context/AppContext';\nimport { LoadingIndicator } from './src/components/LoadingIndicator';\nimport { QuiverManager } from './src/components/QuiverManager';\nimport { routes } from './src/utils/routes';\nimport { RootStackParamList } from './src/types/navigation';\nimport { getPrefixes } from './src/config/environment';\nimport { AppHeader } from './src/navigation/AppHeader';\nimport { Platform } from 'react-native';\n\nexport const QuiverContext = React.createContext<{\n  showQuiverManager: () => void;\n  hideQuiverManager: () => void;\n}>({\n  showQuiverManager: () => {},\n  hideQuiverManager: () => {},\n});\n\nexport default function App() {\n  const navigationRef = createNavigationContainerRef<RootStackParamList>();\n  const [isQuiverManagerVisible, setIsQuiverManagerVisible] = useState(false);\n  \n  const showQuiverManager = () => setIsQuiverManagerVisible(true);\n  const hideQuiverManager = () => setIsQuiverManagerVisible(false);\n\n  const linking: LinkingOptions<RootStackParamList> = {\n    prefixes: getPrefixes(),\n    config: {\n      screens: {\n        Browse: {\n          path: '/',\n          parse: {\n            mode: (mode: string) => mode,\n          },\n          stringify: {\n            mode: (mode: string) => mode,\n          },\n        },\n        Comparison: {\n          path: '/comparison',\n          exact: true,\n          stringify: {\n            quiverName: (name: string) => name,\n            foils: (foils: any[]) => JSON.stringify(foils),\n          },\n        },\n        Quiver: {\n          path: '/quiver/:quiverId',\n          parse: {\n            quiverId: (id: string) => id,\n            quiverName: (name: string) => name,\n            foils: (foils: string) => foils ? JSON.parse(foils) : undefined,\n          },\n          stringify: {\n            quiverId: (id: string) => id,\n            quiverName: (name: string) => name,\n            foils: (foils: any[]) => JSON.stringify(foils),\n          },\n        },\n        Terms: '/terms',\n        Privacy: '/privacy',\n        Contact: '/contact',\n      },\n    },\n    getStateFromPath: (path, options) => {\n      // Handle direct navigation to comparison\n      if (path === '/comparison') {\n        return {\n          routes: [\n            {\n              name: 'Comparison',\n              params: {},\n            },\n          ],\n        };\n      }\n      return getStateFromPath(path, options);\n    },\n    getPathFromState: (state, config) => {\n      // Handle comparison route specially\n      if (state.routes[state.routes.length - 1].name === 'Comparison') {\n        return '/comparison';\n      }\n      const path = getPathFromState(state, config);\n      return path || '/';\n    },\n  };\n\n  return (\n    <ThemeProvider>\n      <AppProvider>\n        <QuiverContext.Provider value={{ showQuiverManager, hideQuiverManager }}>\n          <HelmetProvider>\n            <ErrorBoundary>\n              <SafeAreaProvider>\n                <NavigationContainer \n                  ref={navigationRef}\n                  linking={linking}\n                  fallback={<LoadingIndicator />}\n                >\n                  <View style={{ flex: 1 }}>\n                    <AppHeader />\n                    {isQuiverManagerVisible && (\n                      <QuiverManager\n                        standalone={false}\n                        isModalVisible={isQuiverManagerVisible}\n                        onClose={hideQuiverManager}\n                        initialTab=\"saved\"\n                      />\n                    )}\n                  </View>\n                </NavigationContainer>\n              </SafeAreaProvider>\n            </ErrorBoundary>\n          </HelmetProvider>\n        </QuiverContext.Provider>\n      </AppProvider>\n    </ThemeProvider>\n  );\n} ","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import React from 'react';\nimport { View, Text, ActivityIndicator, StyleSheet } from 'react-native';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\ninterface LoadingIndicatorProps {\n  message?: string;\n  size?: 'small' | 'large';\n  fullScreen?: boolean;\n}\n\nexport const LoadingIndicator: React.FC<LoadingIndicatorProps> = ({\n  message = 'Loading...',\n  size = 'large',\n  fullScreen = true,\n}) => {\n  const { colors } = useTheme();\n\n  return (\n    <View\n      style={[\n        styles.container,\n        fullScreen && styles.fullScreen,\n        { backgroundColor: colors.background.primary },\n      ]}\n    >\n      <ActivityIndicator size={size} color={colors.primary} />\n      {message && (\n        <Text style={[styles.message, { color: colors.text.secondary }]}>\n          {message}\n        </Text>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: spacing.LARGE,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fullScreen: {\n    flex: 1,\n  },\n  message: {\n    marginTop: spacing.MEDIUM,\n    fontSize: 16,\n    textAlign: 'center',\n  },\n}); ","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Modal,\n  TextInput,\n  ScrollView,\n  Alert,\n  Platform,\n  useWindowDimensions,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { useQuivers } from '../hooks/useQuivers';\nimport { BaseProduct } from '../types/scraper';\nimport { Quiver } from '../types/quiver';\nimport { useTheme } from '../theme/ThemeContext';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT } from '../constants/layout';\nimport { spacing } from '../theme/spacing';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { trackAction, ANALYTICS_EVENTS } from '../utils/analytics';\nimport { logger } from '../utils/logger';\nimport { useApp } from '../context/AppContext';\nimport { generateFoilId } from '../utils/foilUtils';\n\ninterface QuiverManagerProps {\n  selectedFoils?: BaseProduct[];\n  onClose?: () => void;\n  initialTab?: 'save' | 'saved';\n  standalone?: boolean;\n  isModalVisible?: boolean;\n  hideStandaloneButton?: boolean;\n  onQuiverSaved?: (quiverId: string, quiverName: string) => void;\n}\n\nexport const QuiverManager: React.FC<QuiverManagerProps> = ({\n  selectedFoils = [],\n  onClose,\n  initialTab = 'save',\n  standalone = false,\n  isModalVisible,\n  hideStandaloneButton = false,\n  onQuiverSaved,\n}) => {\n  const { colors } = useTheme();\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { setSelectedFoils } = useApp();\n\n  const [isModalVisibleInternal, setIsModalVisibleInternal] = useState(!standalone);\n  const modalVisible = isModalVisible !== undefined ? isModalVisible : isModalVisibleInternal;\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [activeTab, setActiveTab] = useState<'save' | 'saved'>(initialTab);\n  const [editingQuiverId, setEditingQuiverId] = useState<string | null>(null);\n  const [editingName, setEditingName] = useState('');\n\n  const {\n    quivers,\n    isLoading,\n    error,\n    createQuiver,\n    deleteQuiver,\n    reloadQuivers,\n    updateQuiver\n  } = useQuivers();\n\n  const handleCreateQuiver = async () => {\n    if (!name.trim()) {\n      if (Platform.OS === 'web') {\n        window.alert('Please enter a name for your quiver');\n      } else {\n        Alert.alert('Error', 'Please enter a name for your quiver');\n      }\n      return;\n    }\n\n    try {\n      const result = await createQuiver({\n        name: name.trim(),\n        description: description.trim(),\n        foils: selectedFoils, // Use selected foils if they exist\n      });\n\n      if (result) {\n        trackAction(ANALYTICS_EVENTS.SAVE_QUIVER, {\n          foilCount: selectedFoils.length,\n          isNewQuiver: true,\n          fromComparison: selectedFoils.length > 0,\n        });\n        \n        setName('');\n        setDescription('');\n        setIsModalVisibleInternal(false);\n        onClose?.();\n        onQuiverSaved?.(result.id, result.name);\n\n        // Navigate to QuiverView with the new quiver\n        navigation.navigate('Quiver', {\n          quiverId: result.id,\n          quiverName: result.name,\n          foil_ids: selectedFoils.map(f => generateFoilId(f))\n        });\n      } else {\n        throw new Error('Failed to create quiver - no result returned');\n      }\n    } catch (error) {\n      console.error('Error creating quiver:', error);\n      if (Platform.OS === 'web') {\n        window.alert(`Failed to save quiver: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      } else {\n        Alert.alert('Error', `Failed to save quiver: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    }\n  };\n\n  const handleDeleteQuiver = async (quiverId: string) => {\n    try {\n      const userConfirmed = await new Promise<boolean>((resolve) => {\n        Alert.alert(\n          'Delete Quiver',\n          'Are you sure you want to delete this quiver? This action cannot be undone.',\n          [\n            {\n              text: 'Cancel',\n              style: 'cancel',\n              onPress: () => resolve(false),\n            },\n            {\n              text: 'Delete',\n              style: 'destructive',\n              onPress: () => resolve(true),\n            },\n          ],\n          { cancelable: false }\n        );\n      });\n\n      if (!userConfirmed) return;\n\n      const success = await deleteQuiver(quiverId);\n      \n      if (success) {\n        trackAction(ANALYTICS_EVENTS.DELETE_QUIVER, {\n          quiverId,\n        });\n        Alert.alert('Success', 'Quiver deleted successfully');\n      } else {\n        Alert.alert('Error', 'Failed to delete quiver. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error deleting quiver:', error);\n      Alert.alert('Error', 'An unexpected error occurred. Please try again.');\n    }\n  };\n\n  const handleViewQuiver = (quiver: Quiver) => {\n    // Close the modal first\n    setIsModalVisibleInternal(false);\n    onClose?.();\n\n    // Clear any existing selected foils before navigating\n    setSelectedFoils([]);\n\n    // Navigate to Quiver screen with the quiver's data\n    navigation.navigate('Quiver', {\n        quiverId: quiver.id,\n        quiverName: quiver.name,\n        foil_ids: quiver.foil_ids || []\n    });\n  };\n\n  const handleStartRename = (quiver: Quiver) => {\n    setEditingQuiverId(quiver.id);\n    setEditingName(quiver.name);\n  };\n\n  const handleSaveRename = async () => {\n    if (!editingQuiverId || !editingName.trim()) return;\n\n    try {\n      const success = await updateQuiver(editingQuiverId, { name: editingName.trim() });\n      if (success) {\n        trackAction(ANALYTICS_EVENTS.UPDATE_QUIVER, {\n          quiverId: editingQuiverId,\n          action: 'rename',\n        });\n        \n        if (Platform.OS === 'web') {\n          window.alert('Quiver renamed successfully');\n        } else {\n          Alert.alert('Success', 'Quiver renamed successfully');\n        }\n        setEditingQuiverId(null);\n        setEditingName('');\n        reloadQuivers();\n      }\n    } catch (error) {\n      console.error('Error renaming quiver:', error);\n      Alert.alert('Error', 'Failed to rename quiver');\n    }\n  };\n\n  const getFoilCount = (quiver: Quiver) => {\n    if (quiver.foil_ids && Array.isArray(quiver.foil_ids)) {\n        return quiver.foil_ids.length;\n    }\n    return 0;\n  };\n\n  const renderQuiverList = () => {\n    if (isLoading) {\n      return (\n        <View style={styles.centerContent}>\n          <Text style={[styles.message, { color: colors.text.secondary }]}>\n            Loading quivers...\n          </Text>\n        </View>\n      );\n    }\n\n    if (error) {\n      return (\n        <View style={styles.centerContent}>\n          <Text style={[styles.message, { color: colors.error }]}>\n            {error}\n          </Text>\n        </View>\n      );\n    }\n\n    return (\n      <View>\n        {quivers.length === 0 ? (\n          <View style={styles.centerContent}>\n            <Text style={[styles.message, { color: colors.text.secondary }]}>\n              No saved quivers yet\n            </Text>\n          </View>\n        ) : (\n          quivers.map((quiver) => {\n            return (\n              <View\n                key={quiver.id}\n                style={[\n                  styles.quiverItem,\n                  { borderBottomColor: colors.border }\n                ]}\n              >\n                <TouchableOpacity \n                  style={styles.quiverInfo}\n                  onPress={() => handleViewQuiver(quiver)}\n                >\n                  {editingQuiverId === quiver.id ? (\n                    <View style={styles.renameContainer}>\n                      <TextInput\n                        style={[\n                          styles.renameInput,\n                          { \n                            color: colors.text.primary,\n                            borderColor: colors.border,\n                            backgroundColor: colors.background.secondary\n                          }\n                        ]}\n                        value={editingName}\n                        onChangeText={setEditingName}\n                        placeholder=\"Enter new name\"\n                        placeholderTextColor={colors.text.tertiary}\n                        autoFocus\n                      />\n                      <TouchableOpacity\n                        style={[styles.renameButton, { backgroundColor: colors.error }]}\n                        onPress={() => {\n                          setEditingQuiverId(null);\n                          setEditingName('');\n                        }}\n                      >\n                        <Text style={[styles.renameButtonText, { color: colors.text.inverse }]}>Cancel</Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={[styles.renameButton, { backgroundColor: colors.primary }]}\n                        onPress={handleSaveRename}\n                      >\n                        <Text style={[styles.renameButtonText, { color: colors.text.inverse }]}>Save</Text>\n                      </TouchableOpacity>\n                    </View>\n                  ) : (\n                    <>\n                      <View style={styles.quiverNameContainer}>\n                        <Text style={[styles.quiverName, { color: colors.text.primary }]}>\n                          {quiver.name}\n                        </Text>\n                        <TouchableOpacity\n                          onPress={() => handleStartRename(quiver)}\n                          style={styles.renameIcon}\n                        >\n                          {Platform.OS === 'web' ? (\n                            <Text style={{ color: colors.text.secondary }}>✎</Text>\n                          ) : (\n                            <Ionicons name=\"pencil\" size={16} color={colors.text.secondary} />\n                          )}\n                        </TouchableOpacity>\n                      </View>\n                      {quiver.description && (\n                        <Text style={[styles.quiverDescription, { color: colors.text.secondary }]}>\n                          {quiver.description}\n                        </Text>\n                      )}\n                      <Text style={[styles.quiverMeta, { color: colors.text.tertiary }]}>\n                        {getFoilCount(quiver)} foils • {new Date(quiver.updated_at).toLocaleDateString()}\n                      </Text>\n                    </>\n                  )}\n                </TouchableOpacity>\n                {Platform.OS === 'web' ? (\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      try {\n                        const confirmed = window.confirm('Are you sure you want to delete this quiver? This action cannot be undone.');\n                        if (confirmed) {\n                          deleteQuiver(quiver.id).then(success => {\n                            if (success) {\n                              reloadQuivers();\n                            } else {\n                              window.alert('Failed to delete quiver');\n                            }\n                          }).catch(error => {\n                            console.error('Delete error:', error);\n                            window.alert('Error deleting quiver');\n                          });\n                        }\n                      } catch (error) {\n                        console.error('Delete error:', error);\n                        window.alert('Error in delete operation');\n                      }\n                    }}\n                    style={{\n                      padding: '8px',\n                      borderWidth: '1px',\n                      borderStyle: 'solid',\n                      borderColor: colors.error,\n                      borderRadius: '8px',\n                      minWidth: '70px',\n                      backgroundColor: colors.background.primary,\n                      cursor: 'pointer',\n                      color: colors.error,\n                      fontWeight: '600',\n                      fontSize: '14px',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      zIndex: 10,\n                      position: 'relative',\n                      pointerEvents: 'auto',\n                    }}\n                  >\n                    Delete\n                  </button>\n                ) : (\n                  <TouchableOpacity\n                    style={[\n                      styles.deleteButton, \n                      { \n                        borderColor: colors.error,\n                        backgroundColor: colors.background.primary \n                      }\n                    ]}\n                    onPress={() => {\n                      handleDeleteQuiver(quiver.id);\n                    }}\n                  >\n                    <Ionicons name=\"trash-outline\" size={20} color={colors.error} />\n                  </TouchableOpacity>\n                )}\n              </View>\n            );\n          })\n        )}\n        \n        <View style={styles.createButtonContainer}>\n          <TouchableOpacity\n            style={[\n              styles.createEmptyButton,\n              { backgroundColor: colors.primary }\n            ]}\n            onPress={() => setActiveTab('save')}\n          >\n            <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n              Create New Quiver\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  const content = (\n    <>\n      <View style={[styles.modalHeader, { borderBottomColor: colors.border }]}>\n        <Text style={[styles.modalTitle, { color: colors.text.primary }]}>\n          Manage Quivers\n        </Text>\n        {onClose && (\n          <TouchableOpacity onPress={onClose}>\n            {Platform.OS === 'web' ? (\n              <Text style={{ fontSize: 24, color: colors.text.primary }}>×</Text>\n            ) : (\n              <Ionicons name=\"close\" size={24} color={colors.text.primary} />\n            )}\n          </TouchableOpacity>\n        )}\n      </View>\n\n      {selectedFoils.length > 0 && (\n        <View style={[styles.tabContainer, { borderBottomColor: colors.border }]}>\n          <TouchableOpacity\n            style={[\n              styles.tab,\n              activeTab === 'save' && [\n                styles.activeTab,\n                { borderBottomColor: colors.primary }\n              ]\n            ]}\n            onPress={() => setActiveTab('save')}\n          >\n            <Text\n              style={[\n                styles.tabText,\n                { color: activeTab === 'save' ? colors.primary : colors.text.secondary }\n              ]}\n            >\n              Save Quiver\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={[\n              styles.tab,\n              activeTab === 'saved' && [\n                styles.activeTab,\n                { borderBottomColor: colors.primary }\n              ]\n            ]}\n            onPress={() => setActiveTab('saved')}\n          >\n            <Text\n              style={[\n                styles.tabText,\n                { color: activeTab === 'saved' ? colors.primary : colors.text.secondary }\n              ]}\n            >\n              Saved Quivers\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n\n      <ScrollView style={styles.modalBody}>\n        {activeTab === 'save' ? (\n          <View style={styles.form}>\n            <View style={styles.formField}>\n              <Text style={[styles.label, { color: colors.text.secondary }]}>\n                Name\n              </Text>\n              <TextInput\n                style={[\n                  styles.input,\n                  { \n                    color: colors.text.primary,\n                    borderColor: colors.border,\n                    backgroundColor: colors.background.secondary\n                  }\n                ]}\n                value={name}\n                onChangeText={setName}\n                placeholder=\"Enter quiver name\"\n                placeholderTextColor={colors.text.tertiary}\n              />\n            </View>\n\n            <View style={styles.formField}>\n              <Text style={[styles.label, { color: colors.text.secondary }]}>\n                Description (optional)\n              </Text>\n              <TextInput\n                style={[\n                  styles.input,\n                  styles.textArea,\n                  { \n                    color: colors.text.primary,\n                    borderColor: colors.border,\n                    backgroundColor: colors.background.secondary\n                  }\n                ]}\n                value={description}\n                onChangeText={setDescription}\n                placeholder=\"Enter description\"\n                placeholderTextColor={colors.text.tertiary}\n                multiline\n                numberOfLines={3}\n              />\n            </View>\n\n            <TouchableOpacity\n              style={[\n                styles.createButton,\n                { backgroundColor: colors.primary }\n              ]}\n              onPress={handleCreateQuiver}\n            >\n              <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n                {selectedFoils.length > 0 ? 'Save Quiver' : 'Create Empty Quiver'}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        ) : (\n          <View style={styles.quiverList}>\n            {renderQuiverList()}\n          </View>\n        )}\n      </ScrollView>\n    </>\n  );\n\n  if (standalone) {\n    return content;\n  }\n\n  return (\n    <>\n      {selectedFoils.length > 0 && !standalone && !isModalVisible && !hideStandaloneButton && (\n        <TouchableOpacity\n          style={[\n            styles.saveButton,\n            { backgroundColor: colors.primary }\n          ]}\n          onPress={() => setIsModalVisibleInternal(true)}\n        >\n          {Platform.OS === 'web' ? (\n            <Text style={{ fontSize: 20, color: colors.text.inverse, marginRight: 8 }}>+</Text>\n          ) : (\n            <Ionicons name=\"bookmark-outline\" size={20} color={colors.text.inverse} />\n          )}\n          <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n            Save Quiver\n          </Text>\n        </TouchableOpacity>\n      )}\n      <Modal\n        visible={modalVisible}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => {\n          setIsModalVisibleInternal(false);\n          onClose?.();\n        }}\n      >\n        <TouchableOpacity\n          style={[\n            styles.modalOverlay,\n            standalone && styles.standaloneOverlay\n          ]}\n          activeOpacity={1}\n          onPress={() => {\n            setIsModalVisibleInternal(false);\n            onClose?.();\n          }}\n        >\n          <TouchableOpacity\n            style={[\n              styles.modalContent,\n              { backgroundColor: colors.background.primary },\n              isMobile && styles.modalContentMobile\n            ]}\n            activeOpacity={1}\n            onPress={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          >\n            {content}\n          </TouchableOpacity>\n        </TouchableOpacity>\n      </Modal>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  saveButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    gap: 8,\n    minHeight: 40,\n    minWidth: 120,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n  buttonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    textAlign: 'center',\n    ...(Platform.OS === 'web' && {\n      userSelect: 'none',\n    }),\n  },\n  modalOverlay: {\n    position: 'absolute' as const,\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: CONTAINER_PADDING,\n    zIndex: 2000,\n    ...(Platform.OS === 'web' && {\n      position: 'absolute' as const,\n      pointerEvents: 'auto',\n    }),\n  },\n  modalContent: {\n    width: '100%',\n    maxWidth: 600,\n    borderRadius: 12,\n    maxHeight: '90%',\n    zIndex: 2001,\n    ...(Platform.OS === 'web' && {\n      pointerEvents: 'auto',\n      userSelect: 'none',\n    }),\n  },\n  modalContentMobile: {\n    maxWidth: '100%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n    borderBottomWidth: 1,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n  },\n  modalBody: {\n    flex: 1,\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: spacing.MEDIUM,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n  },\n  tabText: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  form: {\n    padding: spacing.LARGE,\n  },\n  formField: {\n    marginBottom: spacing.LARGE,\n  },\n  label: {\n    fontSize: 14,\n    marginBottom: spacing.SMALL,\n  },\n  input: {\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: spacing.MEDIUM,\n    fontSize: 16,\n    ...(Platform.OS === 'web' && {\n      outlineStyle: 'none',\n    }),\n  },\n  textArea: {\n    height: 80,\n    paddingTop: spacing.MEDIUM,\n    textAlignVertical: 'top',\n  },\n  createButton: {\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  quiverList: {\n    padding: spacing.LARGE,\n  },\n  quiverItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: spacing.MEDIUM,\n    borderBottomWidth: 1,\n  },\n  quiverInfo: {\n    flex: 1,\n    marginRight: spacing.MEDIUM,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  quiverName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  quiverDescription: {\n    fontSize: 14,\n    marginBottom: 4,\n  },\n  quiverMeta: {\n    fontSize: 12,\n  },\n  deleteButton: {\n    padding: spacing.SMALL,\n    borderWidth: 1,\n    borderRadius: 8,\n    minWidth: Platform.OS === 'web' ? 70 : 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 10,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      position: 'relative',\n    }),\n  },\n  deleteIcon: {\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  centerContent: {\n    padding: spacing.LARGE,\n    alignItems: 'center',\n  },\n  message: {\n    fontSize: 16,\n  },\n  standaloneOverlay: {\n    position: 'relative',\n    backgroundColor: 'transparent',\n  },\n  renameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n  },\n  renameInput: {\n    flex: 1,\n    height: 32,\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: spacing.SMALL,\n    fontSize: 14,\n  },\n  renameButton: {\n    paddingHorizontal: spacing.MEDIUM,\n    paddingVertical: spacing.SMALL,\n    borderRadius: 4,\n  },\n  renameButtonText: {\n    fontSize: 12,\n    fontWeight: '500',\n  },\n  quiverNameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n  },\n  renameIcon: {\n    padding: spacing.SMALL,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  createButtonContainer: {\n    borderTopWidth: 1,\n    marginTop: spacing.LARGE,\n    paddingTop: spacing.LARGE,\n    paddingBottom: spacing.MEDIUM,\n  },\n  createEmptyButton: {\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    alignItems: 'center',\n    minWidth: 180,\n    alignSelf: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n}); ","// Supabase Configuration\nexport const SUPABASE_URL = 'https://zhylhvuhhoialsgqrxxr.supabase.co';\nexport const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpoeWxodnVoaG9pYWxzZ3FyeHhyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzkxNjM3NTgsImV4cCI6MjA1NDczOTc1OH0.wrZ05wA3EcbBubG3Mrxmx--fA9ThE2_M9k9WYTmGpag';\n\n// Google OAuth Configuration\nexport const GOOGLE_CLIENT_ID = '159399186219-fagq1jdgjps8q6fq70e9ua8pnmjac7bs.apps.googleusercontent.com'; ","import { Platform } from 'react-native';\n\nexport type Environment = 'development' | 'staging' | 'production';\n\ninterface EnvironmentConfig {\n  apiUrl: string;\n  webUrl: string;\n  appScheme: string;\n}\n\nconst ENV: Environment = process.env.EXPO_PUBLIC_ENV as Environment || 'development';\n\nconst configs: Record<Environment, EnvironmentConfig> = {\n  development: {\n    apiUrl: 'http://localhost:3000',\n    webUrl: 'http://localhost:19006',\n    appScheme: 'foilquiver-dev',\n  },\n  staging: {\n    apiUrl: 'https://api.staging.foilquiver.com',\n    webUrl: 'https://staging.foilquiver.com',\n    appScheme: 'foilquiver-staging',\n  },\n  production: {\n    apiUrl: 'https://api.foilquiver.com',\n    webUrl: 'https://foilquiver.com',\n    appScheme: 'foilquiver',\n  },\n};\n\nexport const getEnvironmentConfig = (): EnvironmentConfig => {\n  return configs[ENV];\n};\n\nexport const getPrefixes = (): string[] => {\n  const config = getEnvironmentConfig();\n  if (Platform.OS === 'web') {\n    return [config.webUrl];\n  }\n  return [`${config.appScheme}://`];\n};\n\nexport const isProduction = () => ENV === 'production';\nexport const isDevelopment = () => ENV === 'development';\nexport const isStaging = () => ENV === 'staging'; ","// Layout constants\nexport const CONTAINER_PADDING = 16;\nexport const MAX_CONTENT_WIDTH = 1200;\nexport const MOBILE_BREAKPOINT = 768;\n\n// Column width constants\nexport const COLUMN_WIDTHS = {\n  brand: 100,\n  series: 120,\n  model: 150,\n  area: 80,\n  wingspan: 80,\n  aspectRatio: 80,\n  type: 80,\n  price: 105,\n  link: 80,\n} as const;\n\nexport type Column = {\n  id: keyof typeof COLUMN_WIDTHS;\n  label: string;\n  isVisible: boolean;\n};\n\n// Default column configuration\nexport const DEFAULT_COLUMNS: Column[] = [\n  { id: 'brand', label: 'Brand', isVisible: true },\n  { id: 'series', label: 'Series', isVisible: false },\n  { id: 'model', label: 'Model', isVisible: true },\n  { id: 'area', label: 'Area', isVisible: true },\n  { id: 'wingspan', label: 'Span', isVisible: true },\n  { id: 'aspectRatio', label: 'AR', isVisible: true },\n  { id: 'type', label: 'Type', isVisible: true },\n  { id: 'price', label: 'Price', isVisible: true },\n  { id: 'link', label: 'Link', isVisible: true },\n];\n\n// Helper functions for width calculations\nexport const getTableWidth = (columns: Column[]) => {\n  return columns.reduce((total, column) => {\n    if (column.isVisible) {\n      return total + (COLUMN_WIDTHS[column.id] || 100);\n    }\n    return total;\n  }, 0);\n};\n\nexport const getContentWidth = (tableWidth: number, screenWidth: number, isMobile: boolean) => {\n  if (isMobile) {\n    return screenWidth;\n  }\n  return Math.min(tableWidth, screenWidth - 48);\n}; ","import React, { createContext, useContext, useState, useEffect, Dispatch, SetStateAction } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\nimport { Column } from '../constants/layout';\nimport { loadColumns, loadFilters, saveFilters } from '../utils/storage';\nimport { DEFAULT_COLUMNS } from '../constants/layout';\n\ninterface AppContextType {\n  // Search state\n  searchQuery: string;\n  setSearchQuery: Dispatch<SetStateAction<string>>;\n  \n  // Filter state\n  filters: FilterOptions;\n  setFilters: Dispatch<SetStateAction<FilterOptions>>;\n  \n  // Column settings\n  columns: Column[];\n  setColumns: Dispatch<SetStateAction<Column[]>>;\n  \n  // Selected foils state\n  selectedFoils: BaseProduct[];\n  setSelectedFoils: Dispatch<SetStateAction<BaseProduct[]>>;\n  \n  // Navigation state\n  currentScreen: string | null;\n  setCurrentScreen: Dispatch<SetStateAction<string | null>>;\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nexport const AppProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  // Search state\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  // Filter state\n  const [filters, setFilters] = useState<FilterOptions>({\n    brands: [],\n    series: [],\n    type: []\n  });\n  \n  // Column settings\n  const [columns, setColumns] = useState<Column[]>(DEFAULT_COLUMNS);\n  \n  // Selected foils state\n  const [selectedFoils, setSelectedFoils] = useState<BaseProduct[]>([]);\n  \n  // Navigation state - initialize as null to prevent default routing\n  const [currentScreen, setCurrentScreen] = useState<string | null>(null);\n\n  // Load saved filters and columns on mount\n  useEffect(() => {\n    const loadSavedSettings = async () => {\n      try {\n        const savedFilters = await loadFilters();\n        if (savedFilters) {\n          setFilters({\n            brands: savedFilters.brands || [],\n            series: savedFilters.series || [],\n            type: savedFilters.types || []\n          });\n        }\n\n        const savedColumns = await loadColumns();\n        if (savedColumns && Array.isArray(savedColumns)) {\n          setColumns(savedColumns.map((col: Partial<Column>) => ({\n            ...DEFAULT_COLUMNS.find(defaultCol => defaultCol.id === col.id)!,\n            ...col\n          })));\n        }\n      } catch (error) {\n        console.error('Error loading saved settings:', error);\n      }\n    };\n\n    loadSavedSettings();\n  }, []);\n\n  // Save filters when they change\n  useEffect(() => {\n    saveFilters({\n      brands: filters.brands,\n      series: filters.series,\n      types: filters.type\n    });\n  }, [filters]);\n\n  // Reset filters when screen changes\n  useEffect(() => {\n    if (currentScreen) {\n      setFilters({ brands: [], series: [], type: [] });\n    }\n  }, [currentScreen]);\n\n  const value = {\n    searchQuery,\n    setSearchQuery,\n    filters,\n    setFilters,\n    columns,\n    setColumns,\n    selectedFoils,\n    setSelectedFoils,\n    currentScreen,\n    setCurrentScreen,\n  };\n\n  return (\n    <AppContext.Provider value={value}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}; ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\nimport { groupFoilsByBrand, groupFoilsBySeries } from '../utils/dataTransform';\n\nexport function useFilteredFoils(foils: BaseProduct[], filters: FilterOptions) {\n  const filterOptions = useMemo(() => {\n    const brands = Array.from(new Set(foils.map(foil => foil.brand))).sort();\n    \n    // Group foils by brand\n    const foilsByBrand = groupFoilsByBrand(foils);\n    \n    // Get series based on selected brands\n    let availableSeries: string[] = [];\n    if (filters.brands.length === 0) {\n      // If no brands selected, show all series\n      availableSeries = Array.from(new Set(foils.map(foil => foil.series))).sort();\n    } else {\n      // If brands are selected, only show series from those brands\n      const filteredFoils = filters.brands.flatMap(brand => foilsByBrand[brand] || []);\n      availableSeries = Array.from(new Set(filteredFoils.map(foil => foil.series))).sort();\n    }\n\n    const types = ['front', 'tail'];\n\n    return { brands, series: availableSeries, types };\n  }, [foils, filters.brands]);\n\n  const filteredFoils = useMemo(() => {\n    return foils.filter(foil => {\n      const brandMatch = filters.brands.length === 0 || filters.brands.includes(foil.brand);\n      const seriesMatch = filters.series.length === 0 || filters.series.includes(foil.series);\n      const typeMatch = filters.type.length === 0 || filters.type.includes(foil.type);\n\n      return brandMatch && seriesMatch && typeMatch;\n    });\n  }, [foils, filters.brands, filters.series, filters.type]);\n\n  return {\n    filteredFoils,\n    filterOptions,\n  };\n} ","import { BaseProduct } from '../types/scraper';\n\nexport function formatMeasurement(value: number, unit: string): string {\n  return `${value}${unit}`;\n}\n\nexport function convertArea(cmSquared: number): number {\n  return Math.round(cmSquared * 0.155); // Convert to square inches\n}\n\nexport function calculateAspectRatio(wingspan: number, area: number): number {\n  return Math.round((wingspan * wingspan / area) * 100) / 100;\n}\n\nexport function groupFoilsByBrand(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.brand]) {\n      acc[foil.brand] = [];\n    }\n    acc[foil.brand].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function groupFoilsBySeries(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.series]) {\n      acc[foil.series] = [];\n    }\n    acc[foil.series].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function getUniqueValues(foils: BaseProduct[], key: keyof BaseProduct): string[] {\n  return Array.from(new Set(foils.map(foil => foil[key] as string))).sort();\n} ","import { BaseProduct } from '../types/scraper';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport class ProductService {\n  private static isWeb = Platform.OS === 'web';\n  private static DATA_PATH = '/data/foils.json';\n  private static CACHE_DIR = '.cache';\n\n  // Get base URL for data loading\n  private static getBaseUrl(): string {\n    if (process.env.NODE_ENV === 'development') {\n      return '';\n    }\n    return process.env.NODE_ENV === 'staging' \n      ? 'https://staging.foilquiver.com'\n      : 'https://foilquiver.com';\n  }\n\n  static async getAllProducts(): Promise<BaseProduct[]> {\n    try {\n      if (this.isWeb) {\n        const baseUrl = this.getBaseUrl();\n\n        // Try loading from data directory first\n        try {\n          const response = await fetch(`${baseUrl}${this.DATA_PATH}`);\n          if (response.ok) {\n            const products = await response.json();\n            console.log(`Loaded ${products.length} products from ${this.DATA_PATH}`);\n            return products;\n          } else {\n            console.warn(`Failed to load from ${this.DATA_PATH} (${response.status}), trying .cache directory...`);\n          }\n        } catch (error) {\n          console.warn(`Failed to load from ${this.DATA_PATH}, trying .cache directory...`, error);\n        }\n\n        // Try loading from .cache as fallback\n        try {\n          // Normalize brand names to match file names\n          const brands = ['armstrong', 'lift-foils', 'axis-foils', 'code-foils', 'kt-foils', 'uni-foil'];\n          const allProducts: BaseProduct[] = [];\n          \n          for (const brand of brands) {\n            try {\n              const response = await fetch(`${baseUrl}/${this.CACHE_DIR}/${brand}.json`);\n              if (response.ok) {\n                const products = await response.json();\n                console.log(`Loaded ${products.length} products for ${brand} from .cache`);\n                allProducts.push(...products);\n              }\n            } catch (error) {\n              console.warn(`No cache file found for ${brand}`);\n            }\n          }\n\n          if (allProducts.length > 0) {\n            return allProducts;\n          }\n        } catch (error) {\n          console.warn('Failed to load from .cache directory', error);\n        }\n      } else {\n        // For mobile, use AsyncStorage\n        const cached = await AsyncStorage.getItem('foils');\n        if (cached) {\n          const products = JSON.parse(cached);\n          console.log(`Loaded ${products.length} products from AsyncStorage`);\n          return products;\n        }\n      }\n    } catch (error) {\n      console.error('Error loading foils data:', error);\n    }\n    \n    console.warn('No foils data found in any location');\n    return [];\n  }\n} ","import { useState, useEffect } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { ProductService } from '../services/productService';\n\nexport function useFoils() {\n  const [foils, setFoils] = useState<BaseProduct[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadFoils = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const products = await ProductService.getAllProducts();\n      setFoils(products);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load foils');\n      console.error('Error loading foils:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadFoils();\n  }, []);\n\n  const refreshFoils = () => {\n    loadFoils();\n  };\n\n  return {\n    foils,\n    loading,\n    error,\n    refreshFoils\n  };\n} ","import { useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Platform } from 'react-native';\nimport { supabase } from '../utils/supabase';\nimport { Quiver, CreateQuiverInput, UpdateQuiverInput } from '../types/quiver';\nimport { BaseProduct } from '../types/scraper';\nimport { generateFoilId, generateUUID } from '../utils/foilUtils';\nimport { logger } from '../utils/logger';\nimport { Environment } from '../config/environment';\n\nconst STORAGE_KEYS = {\n  QUIVERS: '@foilquiver/quivers',\n} as const;\n\n// Get the current environment\nconst getEnvironment = (): 'dev' | 'staging' | 'prod' => {\n  if (process.env.NODE_ENV === 'development') return 'dev';\n  if (window.location.hostname.includes('staging')) return 'staging';\n  return 'prod';\n};\n\n// Get the table name for the current environment\nconst getTableName = () => {\n  const env = getEnvironment();\n  return `${env}_quivers`;\n};\n\n// Storage helper that works for both web and native\nconst storage = {\n  getItem: async (key: string): Promise<string | null> => {\n    if (Platform.OS === 'web') {\n      return localStorage.getItem(key);\n    }\n    return AsyncStorage.getItem(key);\n  },\n  setItem: async (key: string, value: string): Promise<void> => {\n    if (Platform.OS === 'web') {\n      localStorage.setItem(key, value);\n      return;\n    }\n    return AsyncStorage.setItem(key, value);\n  },\n  removeItem: async (key: string): Promise<void> => {\n    if (Platform.OS === 'web') {\n      localStorage.removeItem(key);\n      return;\n    }\n    return AsyncStorage.removeItem(key);\n  }\n};\n\n// Local interface for creating quivers\ninterface LocalCreateQuiverInput {\n    name: string;\n    description?: string;\n    foils: BaseProduct[];\n    is_public?: boolean;\n}\n\n// Local interface for syncing quivers\ninterface LocalQuiverData {\n    name: string;\n    description?: string;\n    foils: BaseProduct[];\n    is_public?: boolean;\n}\n\nconst ENV: Environment = process.env.EXPO_PUBLIC_ENV as Environment || 'development';\n\nexport const useQuivers = () => {\n  const [quivers, setQuivers] = useState<Quiver[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadQuivers = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const { data: { session } } = await supabase.auth.getSession();\n      \n      if (session?.user) {\n        const { data, error: supabaseError } = await supabase\n          .from(getTableName())\n          .select('*')\n          .eq('environment', getEnvironment())\n          .eq('user_id', session.user.id)\n          .order('updated_at', { ascending: false });\n\n        if (supabaseError) throw supabaseError;\n        setQuivers(data || []);\n      } else {\n        const storedQuivers = await storage.getItem(STORAGE_KEYS.QUIVERS);\n        if (storedQuivers) {\n          setQuivers(JSON.parse(storedQuivers));\n        } else {\n          setQuivers([]);\n        }\n      }\n    } catch (err) {\n      console.error('Error loading quivers:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load quivers');\n      setQuivers([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const createQuiver = async (input: LocalCreateQuiverInput): Promise<Quiver | null> => {\n    try {\n      setError(null);\n      const { data: { session } } = await supabase.auth.getSession();\n\n      if (session?.user) {\n        const tableName = getTableName();\n        const env = getEnvironment();\n\n        const foil_ids = input.foils.map(foil => generateFoilId(foil));\n\n        const insertData = {\n          name: input.name,\n          description: input.description || '',\n          user_id: session.user.id,\n          environment: env,\n          foil_ids,\n          is_public: input.is_public || false\n        };\n\n        const { error: insertError } = await supabase\n          .from(tableName)\n          .insert(insertData);\n\n        if (insertError) {\n          logger.error('Insert error:', {\n            message: insertError.message,\n            details: insertError.details,\n            hint: insertError.hint,\n            code: insertError.code\n          });\n          throw insertError;\n        }\n\n        const { data: newData, error: selectError } = await supabase\n          .from(tableName)\n          .select('*')\n          .eq('user_id', session.user.id)\n          .eq('name', input.name)\n          .order('created_at', { ascending: false })\n          .limit(1)\n          .single();\n\n        if (selectError) throw selectError;\n        if (!newData) throw new Error('Failed to retrieve created quiver');\n\n        const newQuiver = {\n          ...newData,\n          foils: input.foils\n        };\n\n        setQuivers(prev => [newQuiver, ...prev]);\n        return newQuiver;\n      } else {\n        const env = getEnvironment();\n        const foil_ids = input.foils.map(foil => generateFoilId(foil));\n        \n        const newQuiver: Quiver = {\n          id: generateUUID(),\n          name: input.name,\n          description: input.description || '',\n          foil_ids,\n          is_public: input.is_public || false,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n          user_id: 'local',\n          environment: env\n        };\n\n        const updatedQuivers = [newQuiver, ...quivers];\n        await storage.setItem(STORAGE_KEYS.QUIVERS, JSON.stringify(updatedQuivers));\n        setQuivers(updatedQuivers);\n        return newQuiver;\n      }\n    } catch (err) {\n      console.error('Error creating quiver:', err);\n      throw err;\n    }\n  };\n\n  const deleteQuiver = async (id: string): Promise<boolean> => {\n    try {\n      setError(null);\n      const { data: { session } } = await supabase.auth.getSession();\n\n      if (session?.user) {\n        const { error: supabaseError } = await supabase\n          .from(getTableName())\n          .delete()\n          .eq('id', id)\n          .eq('user_id', session.user.id)\n          .eq('environment', getEnvironment());\n\n        if (supabaseError) throw supabaseError;\n      }\n\n      const updatedQuivers = quivers.filter(quiver => quiver.id !== id);\n      setQuivers(updatedQuivers);\n\n      if (!session?.user) {\n        await storage.setItem(STORAGE_KEYS.QUIVERS, JSON.stringify(updatedQuivers));\n      }\n\n      return true;\n    } catch (err) {\n      console.error('Error deleting quiver:', err);\n      setError(err instanceof Error ? err.message : 'Failed to delete quiver');\n      return false;\n    }\n  };\n\n  // Update an existing quiver\n  const updateQuiver = async (quiverId: string, updates: UpdateQuiverInput) => {\n    setError(null);\n    try {\n      const { data: { session } } = await supabase.auth.getSession();\n      \n      if (session?.user) {\n        const { error } = await supabase\n          .from(getTableName())\n          .update(updates)\n          .eq('id', quiverId);\n\n        if (error) throw error;\n        await loadQuivers();\n        return true;\n      } else {\n        // Local storage update logic\n        const storedQuivers = await storage.getItem(STORAGE_KEYS.QUIVERS);\n        if (!storedQuivers) return false;\n\n        const parsedQuivers: Quiver[] = JSON.parse(storedQuivers);\n        const updatedQuivers = parsedQuivers.map(quiver => {\n          if (quiver.id === quiverId) {\n            return {\n              ...quiver,\n              ...updates,\n              updated_at: new Date().toISOString()\n            };\n          }\n          return quiver;\n        });\n\n        await storage.setItem(STORAGE_KEYS.QUIVERS, JSON.stringify(updatedQuivers));\n        setQuivers(updatedQuivers);\n        return true;\n      }\n    } catch (error) {\n      console.error('Error updating quiver:', error);\n      setError('Failed to update quiver');\n      return false;\n    }\n  };\n\n  // Sync storage quivers to Supabase when user logs in\n  const syncQuiversToSupabase = async () => {\n    try {\n      const { data: { session } } = await supabase.auth.getSession();\n      if (!session?.user) return;\n\n      const localQuivers = await storage.getItem(STORAGE_KEYS.QUIVERS);\n      if (!localQuivers) return;\n\n      const parsedQuivers: LocalQuiverData[] = JSON.parse(localQuivers);\n      const env = getEnvironment();\n      \n      // Insert all local quivers to Supabase\n      for (const quiver of parsedQuivers) {\n        const foil_ids = quiver.foils.map(foil => generateFoilId(foil));\n        const insertData = {\n          name: quiver.name,\n          description: quiver.description || '',\n          foil_ids,\n          is_public: quiver.is_public || false,\n          user_id: session.user.id,\n          environment: env\n        };\n        await supabase\n          .from(getTableName())\n          .insert([insertData]);\n      }\n\n      // Clear storage after successful sync\n      await storage.removeItem(STORAGE_KEYS.QUIVERS);\n      \n      // Reload quivers from Supabase\n      await loadQuivers();\n    } catch (err) {\n      console.error('Error syncing quivers:', err);\n    }\n  };\n\n  // Load quivers on mount and when auth state changes\n  useEffect(() => {\n    loadQuivers();\n\n    // Listen for auth state changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event) => {\n      if (event === 'SIGNED_IN') {\n        await syncQuiversToSupabase();\n      }\n      await loadQuivers();\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  return {\n    quivers,\n    isLoading,\n    error,\n    createQuiver,\n    updateQuiver,\n    deleteQuiver,\n    reloadQuivers: loadQuivers,\n  };\n}; ","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useColorScheme } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getColors, ThemeColors } from './colors';\n\ntype ThemeContextType = {\n  isDark: boolean;\n  colors: ThemeColors;\n  toggleTheme: () => void;\n};\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nconst THEME_STORAGE_KEY = '@foilquiver/theme';\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const systemColorScheme = useColorScheme();\n  const [isDark, setIsDark] = useState<boolean>(systemColorScheme === 'dark');\n\n  useEffect(() => {\n    // Load saved theme preference\n    const loadTheme = async () => {\n      try {\n        const savedTheme = await AsyncStorage.getItem(THEME_STORAGE_KEY);\n        if (savedTheme !== null) {\n          setIsDark(savedTheme === 'dark');\n        }\n      } catch (error) {\n        console.error('Error loading theme:', error);\n      }\n    };\n\n    loadTheme();\n  }, []);\n\n  const toggleTheme = async () => {\n    try {\n      const newTheme = !isDark;\n      setIsDark(newTheme);\n      await AsyncStorage.setItem(THEME_STORAGE_KEY, newTheme ? 'dark' : 'light');\n    } catch (error) {\n      console.error('Error saving theme:', error);\n    }\n  };\n\n  const colors = getColors(isDark ? 'dark' : 'light');\n\n  return (\n    <ThemeContext.Provider value={{ isDark, colors, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}; ","import { ColorSchemeName } from 'react-native';\n\nexport type ThemeColors = {\n  background: {\n    primary: string;\n    secondary: string;\n    tertiary: string;\n  };\n  text: {\n    primary: string;\n    secondary: string;\n    tertiary: string;\n    inverse: string;\n  };\n  border: string;\n  primary: string;\n  error: string;\n  success: string;\n  warning: string;\n};\n\n// Sunset theme colors (accent colors)\nconst SPACE_CADET = '#1F214D';\nconst EMINENCE = '#50366F';\nconst MAGENTA_DYE = '#BF3475';\nconst BURNT_SIENNA = '#EE6C45';\nconst SUNGLOW = '#FFCE61';\n\n// Neutral colors for text and backgrounds\nconst NEUTRAL = {\n  50: '#F9FAFB',\n  100: '#F3F4F6',\n  200: '#E5E7EB',\n  300: '#D1D5DB',\n  400: '#9CA3AF',\n  500: '#6B7280',\n  600: '#4B5563',\n  700: '#374151',\n  800: '#1F2937',\n  900: '#111827',\n};\n\nconst lightColors: ThemeColors = {\n  background: {\n    primary: NEUTRAL[50],\n    secondary: NEUTRAL[100],\n    tertiary: NEUTRAL[200],\n  },\n  text: {\n    primary: NEUTRAL[900],\n    secondary: NEUTRAL[700],\n    tertiary: NEUTRAL[500],\n    inverse: NEUTRAL[50],\n  },\n  border: NEUTRAL[200],\n  primary: MAGENTA_DYE,\n  error: '#DC2626',\n  success: '#059669',\n  warning: SUNGLOW,\n};\n\nconst darkColors: ThemeColors = {\n  background: {\n    primary: NEUTRAL[900],\n    secondary: NEUTRAL[800],\n    tertiary: NEUTRAL[700],\n  },\n  text: {\n    primary: NEUTRAL[50],\n    secondary: NEUTRAL[200],\n    tertiary: NEUTRAL[400],\n    inverse: NEUTRAL[900],\n  },\n  border: NEUTRAL[700],\n  primary: MAGENTA_DYE,\n  error: '#EF4444',\n  success: '#10B981',\n  warning: SUNGLOW,\n};\n\nexport const getColors = (colorScheme: ColorSchemeName): ThemeColors => {\n  return colorScheme === 'dark' ? darkColors : lightColors;\n};\n\n// For backward compatibility\nexport const colors = lightColors; \n\n","export const spacing = {\n  XSMALL: 4,\n  SMALL: 8,\n  MEDIUM: 12,\n  LARGE: 16,\n  XLARGE: 24,\n  XXLARGE: 32,\n  \n  // Component-specific spacing\n  CONTAINER_PADDING: 24,\n  BUTTON_PADDING_H: 16,\n  BUTTON_PADDING_V: 8,\n  BUTTON_GAP: 12,\n  CONTROLS_BOTTOM: 24,\n\n  // Screen and view layout\n  SCREEN_PADDING: 24,\n  TABLE_CONTAINER_PADDING: 24,\n  HEADER_PADDING: 12,\n  CONTENT_PADDING: 16,\n  \n  // Controls and bottom elements\n  CONTROLS_CONTAINER_BOTTOM: 24,\n  CONTROLS_CONTAINER_PADDING: 24,\n} as const; ","import { Platform } from 'react-native';\n\ninterface PlausibleEvent {\n  name: string;\n  props?: Record<string, string | number | boolean>;\n}\n\ndeclare global {\n  interface Window {\n    plausible?: (eventName: string, options?: { props: Record<string, any> }) => void;\n  }\n}\n\nexport const trackEvent = (event: PlausibleEvent) => {\n  if (Platform.OS === 'web' && window.plausible) {\n    window.plausible(event.name, event.props ? { props: event.props } : undefined);\n  }\n};\n\nexport const trackPageView = (screenName: string, props?: Record<string, any>) => {\n  trackEvent({\n    name: 'pageview',\n    props: {\n      page: screenName,\n      ...props\n    }\n  });\n};\n\nexport const trackAction = (action: string, props?: Record<string, any>) => {\n  trackEvent({\n    name: action,\n    props\n  });\n};\n\n// Common analytics events\nexport const ANALYTICS_EVENTS = {\n  // Page views\n  VIEW_COMPARISON: 'view_comparison',\n  VIEW_QUIVER: 'view_quiver',\n  \n  // Actions\n  COMPARE_FOILS: 'compare_foils',\n  SAVE_QUIVER: 'save_quiver',\n  DELETE_QUIVER: 'delete_quiver',\n  UPDATE_QUIVER: 'update_quiver',\n  FILTER_FOILS: 'filter_foils',\n  SORT_FOILS: 'sort_foils',\n  SEARCH_FOILS: 'search_foils',\n} as const; ","import { BaseProduct } from '../types/scraper';\n\nexport const generateFoilId = (foil: BaseProduct): string => {\n  return `${foil.brand.toLowerCase()}-${foil.model.toLowerCase().replace(/\\s+/g, '-')}`;\n};\n\n// Generate a UUID v4 that works across platforms\nexport const generateUUID = (): string => {\n  // Use crypto.randomUUID if available (web)\n  if (typeof crypto !== 'undefined' && crypto.randomUUID) {\n    return crypto.randomUUID();\n  }\n\n  // Fallback implementation for mobile\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}; ","type LogLevel = 'debug' | 'info' | 'warn' | 'error';\n\nclass Logger {\n  private static instance: Logger;\n  private isDevelopment = process.env.NODE_ENV === 'development' || __DEV__;\n\n  private constructor() {\n    // Log environment status on initialization\n    if (this.isDevelopment) {\n      console.info('[Logger] Initialized in development mode');\n      console.info('[Logger] Environment:', process.env.NODE_ENV);\n    }\n  }\n\n  static getInstance(): Logger {\n    if (!Logger.instance) {\n      Logger.instance = new Logger();\n    }\n    return Logger.instance;\n  }\n\n  private log(level: LogLevel, message: string, ...args: any[]) {\n    // Always log errors, only log other levels in development\n    if (this.isDevelopment || level === 'error') {\n      const timestamp = new Date().toISOString();\n      const formattedMessage = `[${timestamp}] [${level.toUpperCase()}] ${message}`;\n      \n      switch (level) {\n        case 'debug':\n          console.debug(formattedMessage, ...args);\n          break;\n        case 'info':\n          console.info(formattedMessage, ...args);\n          break;\n        case 'warn':\n          console.warn(formattedMessage, ...args);\n          break;\n        case 'error':\n          console.error(formattedMessage, ...args);\n          break;\n      }\n    }\n  }\n\n  debug(message: string, ...args: any[]) {\n    this.log('debug', message, ...args);\n  }\n\n  info(message: string, ...args: any[]) {\n    this.log('info', message, ...args);\n  }\n\n  warn(message: string, ...args: any[]) {\n    this.log('warn', message, ...args);\n  }\n\n  error(message: string, ...args: any[]) {\n    this.log('error', message, ...args);\n  }\n}\n\nexport const logger = Logger.getInstance(); ","export const routes = {\n  browse: '/',\n  comparison: '/comparison',\n  quiver: '/quiver/:quiverId',\n  terms: '/terms',\n  privacy: '/privacy',\n  contact: '/contact',\n} as const;\n\n// Add a helper function to clean routes for navigation\nexport const cleanRoute = (route: string) => route.slice(1); // Remove leading slash \n\nexport const getRouteFromPath = (path: string) => {\n  return path.startsWith('/') ? path : `/${path}`;\n}; ","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { logger } from './logger';\nimport { FilterOptions } from '../types/filters';\nimport { SortField } from '../hooks/useSortedFoils';\n\nconst STORAGE_KEYS = {\n  FILTERS: '@foilquiver/filters',\n  COLUMNS: '@foilquiver/columns',\n  THEME: '@foilquiver/theme',\n  SORT: '@foilquiver/sort',\n} as const;\n\nexport interface StoredFilters {\n  brands: string[];\n  series: string[];\n  types: string[];\n}\n\nexport interface StoredColumns {\n  [key: string]: boolean;\n}\n\nexport interface StoredSort {\n  field: SortField;\n  ascending: boolean;\n}\n\nclass Storage {\n  async set(key: string, value: any): Promise<void> {\n    try {\n      const jsonValue = JSON.stringify(value);\n      await AsyncStorage.setItem(key, jsonValue);\n    } catch (error) {\n      logger.error('Error setting storage item:', error);\n      throw error;\n    }\n  }\n\n  async get<T>(key: string): Promise<T | null> {\n    try {\n      const jsonValue = await AsyncStorage.getItem(key);\n      return jsonValue != null ? JSON.parse(jsonValue) : null;\n    } catch (error) {\n      logger.error('Error getting storage item:', error);\n      throw error;\n    }\n  }\n\n  async remove(key: string): Promise<void> {\n    try {\n      await AsyncStorage.removeItem(key);\n    } catch (error) {\n      logger.error('Error removing storage item:', error);\n      throw error;\n    }\n  }\n\n  async clear(): Promise<void> {\n    try {\n      await AsyncStorage.clear();\n    } catch (error) {\n      logger.error('Error clearing storage:', error);\n      throw error;\n    }\n  }\n\n  async getAllKeys(): Promise<readonly string[]> {\n    try {\n      return await AsyncStorage.getAllKeys();\n    } catch (error) {\n      logger.error('Error getting all storage keys:', error);\n      throw error;\n    }\n  }\n}\n\nexport const storage = new Storage();\n\nexport const saveFilters = async (filters: StoredFilters) => {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEYS.FILTERS, JSON.stringify(filters));\n  } catch (error) {\n    console.error('Error saving filters:', error);\n  }\n};\n\nexport const loadFilters = async (): Promise<StoredFilters | null> => {\n  try {\n    const savedFilters = await AsyncStorage.getItem(STORAGE_KEYS.FILTERS);\n    return savedFilters ? JSON.parse(savedFilters) : null;\n  } catch (error) {\n    console.error('Error loading filters:', error);\n    return null;\n  }\n};\n\nexport const saveColumns = async (columns: StoredColumns) => {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEYS.COLUMNS, JSON.stringify(columns));\n  } catch (error) {\n    console.error('Error saving columns:', error);\n  }\n};\n\nexport const loadColumns = async (): Promise<StoredColumns | null> => {\n  try {\n    const savedColumns = await AsyncStorage.getItem(STORAGE_KEYS.COLUMNS);\n    return savedColumns ? JSON.parse(savedColumns) : null;\n  } catch (error) {\n    console.error('Error loading columns:', error);\n    return null;\n  }\n};\n\nexport const saveSortOption = async (sort: StoredSort) => {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEYS.SORT, JSON.stringify(sort));\n  } catch (error) {\n    console.error('Error saving sort option:', error);\n  }\n};\n\nexport const loadSortOption = async (): Promise<StoredSort | null> => {\n  try {\n    const savedSort = await AsyncStorage.getItem(STORAGE_KEYS.SORT);\n    return savedSort ? JSON.parse(savedSort) : null;\n  } catch (error) {\n    console.error('Error loading sort option:', error);\n    return null;\n  }\n};\n\nexport const clearAllSettings = async () => {\n  try {\n    const keys = Object.values(STORAGE_KEYS);\n    await AsyncStorage.multiRemove(keys);\n  } catch (error) {\n    console.error('Error clearing settings:', error);\n  }\n}; ","import { createClient } from '@supabase/supabase-js';\nimport { Platform } from 'react-native';\nimport { SUPABASE_URL, SUPABASE_ANON_KEY } from '../config/env';\nimport { getEnvironmentConfig } from '../config/environment';\n\n// Get the site URL based on the environment\nconst getSiteUrl = () => {\n  if (Platform.OS !== 'web') return undefined;\n  \n  const { webUrl } = getEnvironmentConfig();\n  const hostname = window.location.hostname;\n  if (hostname === 'localhost' || hostname.includes('127.0.0.1')) {\n    return webUrl;\n  }\n  return window.location.origin;\n};\n\n// Initialize the Supabase client\nexport const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {\n  auth: {\n    flowType: 'pkce',\n    detectSessionInUrl: true,\n    autoRefreshToken: true,\n    persistSession: true,\n    storage: typeof window !== 'undefined' ? window.localStorage : {\n      getItem: () => null,\n      setItem: () => {},\n      removeItem: () => {},\n    },\n    storageKey: 'sb-auth-token',\n    ...(Platform.OS === 'web' && {\n      redirectTo: getSiteUrl(),\n      cookieOptions: {\n        name: 'sb-auth-token',\n        lifetime: 60 * 60 * 24 * 365,\n        domain: typeof window !== 'undefined' ? window.location.hostname : undefined,\n        sameSite: 'lax',\n        secure: false,\n        path: '/',\n        httpOnly: false\n      }\n    }),\n  },\n  global: {\n    headers: {\n      'X-Client-Info': 'supabase-js-web'\n    },\n  },\n}); "],"names":["ErrorBoundary","React","constructor","props","super","this","state","hasError","error","getDerivedStateFromError","componentDidCatch","errorInfo","handleRetry","setState","render","_jsx","ErrorView","onRetry","children","colors","useTheme","View","style","styles","container","backgroundColor","background","primary","_jsxs","content","Text","title","color","message","text","secondary","TouchableOpacity","button","onPress","buttonText","inverse","__DEV__","StyleSheet","create","flex","alignItems","justifyContent","padding","spacing","LARGE","maxWidth","width","fontSize","fontWeight","marginBottom","MEDIUM","textAlign","Object","assign","paddingHorizontal","paddingVertical","borderRadius","Platform","OS","cursor","stack","fontFamily","marginTop","SearchBar","value","onChangeText","onClear","placeholder","autoFocus","mode","onFocus","useWindowDimensions","isMobile","MOBILE_BREAKPOINT","searchIcon","Ionicons","name","size","TextInput","input","getPlaceholder","placeholderTextColor","tertiary","autoCapitalize","autoCorrect","clearButtonMode","returnKeyType","maxFontSizeMultiplier","spellCheck","autoComplete","keyboardType","clearButton","clearIcon","flexDirection","height","gap","SMALL","outlineStyle","border","lineHeight","aspectRatio","GoogleSignIn","onSuccess","useEffect","initializeGoogleSignIn","window","google","accounts","id","initialize","client_id","GOOGLE_CLIENT_ID","callback","async","data","supabase","auth","signInWithIdToken","provider","token","response","credential","use_fedcm_for_prompt","buttonContainer","document","getElementById","renderButton","type","theme","shape","script","createElement","src","onload","body","appendChild","removeChild","minHeight","TableSettings","filterOptions","selectedBrands","selectedSeries","selectedTypes","onFilterChange","onClearFilters","columns","onColumnVisibilityChange","onResetColumns","foils","isOpen","setIsOpen","useState","activeTab","setActiveTab","isDark","toggleTheme","session","setSession","user","setUser","isQuiversModalVisible","setIsQuiversModalVisible","getSession","then","subscription","onAuthStateChange","_event","unsubscribe","savedFilters","loadFilters","brands","forEach","brand","series","types","savedColumns","loadColumns","currentColumns","fromEntries","map","col","isVisible","entries","columnId","loadSavedSettings","filters","saveFilters","saveFilterSettings","columnSettings","column","saveColumns","saveColumnSettings","handleSignOut","signOut","Alert","alert","availableSeries","useMemo","length","seriesSet","Set","foil","includes","add","Array","from","sort","_Fragment","Pressable","iconButton","MaterialIcons","Modal","visible","transparent","animationType","onRequestClose","modalOverlay","modalContent","e","stopPropagation","modalHeader","borderBottomColor","modalTitle","closeButton","tabs","tab","tabText","activeTabText","some","contentWrapper","ScrollView","scrollView","contentContainerStyle","scrollContent","headerWithAction","contentTitle","clearButtonText","section","sectionTitle","chipContainer","chip","chipSelected","chipText","chipTextSelected","noSeriesText","columnList","columnItem","handleColumnVisibilityChange","columnLabel","label","checkbox","borderColor","checkboxChecked","menuButton","menuButtonContent","menuButtonText","userInfo","user_metadata","avatar_url","Image","source","uri","avatarImage","userTextInfo","userName","full_name","email","userEmail","menuDivider","signOutButton","onStartShouldSetResponder","QuiverManager","selectedFoils","onClose","initialTab","standalone","position","XSMALL","maxHeight","overflow","borderBottomWidth","buttonGroup","columnGroup","filterGroup","filterList","flexGrow","flexWrap","borderWidth","BrowseScreen","ComparisonScreen","QuiverScreen","PrivacyPolicy","TermsOfService","Contact","Stack","createNativeStackNavigator","ICON_NAMES","home","browse","compare","settings","quiver","TabBarIcon","webIcons","getEnvironmentConfig","webUrl","routes","comparison","terms","privacy","contact","ScreenWrapper","_ref","_objectWithoutPropertiesLoose","_excluded","Suspense","fallback","LoadingIndicator","AppHeader","navigation","useNavigation","useFoils","searchQuery","setSearchQuery","setFilters","setColumns","setCurrentScreen","useApp","useFilteredFoils","showQuiverManager","useContext","QuiverContext","handleLogoPress","navigate","handleSearch","setParams","getViewMode","route","getSearchPlaceholder","handleSearchFocus","showSearchDropdown","handleFilterChangeWrapper","handleFilterChange","prev","filter","item","handleClearFilters","handleResetColumns","DEFAULT_COLUMNS","tableWidth","getTableWidth","getContentWidth","Math","min","CONTAINER_PADDING","updatedColumns","loadSavedColumnSettings","headerMainContainerStyle","containerWidth","alignSelf","renderHeaderRight","headerRightContainerMobile","headerButton","headerRightContainerWeb","headerButtonText","Navigator","screenOptions","headerStyle","headerShadowVisible","Screen","options","headerTitle","params","headerLeft","headerOuterContainer","headerMainContainerMobile","headerTopRowMobile","pressed","logoContainerMobile","logoPressed","headerTitleMobile","searchBarContainerMobile","headerMainContainerWeb","headerContentWeb","logoContainer","searchBarContainerWeb","currentQuiverFoils","foil_ids","isArray","f","foilId","generateFoilId","searchProps","tableSettingsProps","headerShown","minWidth","zIndex","opacity","paddingRight","userSelect","hideQuiverManager","registerRootComponent","navigationRef","createNavigationContainerRef","isQuiverManagerVisible","setIsQuiverManagerVisible","linking","prefixes","getPrefixes","config","screens","Browse","path","parse","stringify","Comparison","exact","quiverName","JSON","Quiver","quiverId","undefined","Terms","Privacy","getStateFromPath","getPathFromState","ThemeProvider","AppProvider","Provider","HelmetProvider","SafeAreaProvider","NavigationContainer","ref","isModalVisible","fullScreen","ActivityIndicator","hideStandaloneButton","onQuiverSaved","setSelectedFoils","isModalVisibleInternal","setIsModalVisibleInternal","modalVisible","setName","description","setDescription","editingQuiverId","setEditingQuiverId","editingName","setEditingName","quivers","isLoading","createQuiver","deleteQuiver","reloadQuivers","updateQuiver","useQuivers","handleSaveRename","trim","trackAction","ANALYTICS_EVENTS","UPDATE_QUIVER","action","getFoilCount","tabContainer","modalBody","form","formField","textArea","multiline","numberOfLines","createButton","result","Error","SAVE_QUIVER","foilCount","isNewQuiver","fromComparison","quiverList","centerContent","quiverItem","quiverInfo","handleViewQuiver","renameContainer","renameInput","renameButton","renameButtonText","quiverNameContainer","handleStartRename","renameIcon","quiverDescription","quiverMeta","Date","updated_at","toLocaleDateString","onClick","confirm","success","catch","borderStyle","display","pointerEvents","deleteButton","Promise","resolve","cancelable","DELETE_QUIVER","handleDeleteQuiver","createButtonContainer","createEmptyButton","saveButton","marginRight","standaloneOverlay","activeOpacity","modalContentMobile","preventDefault","boxShadow","top","left","right","bottom","paddingTop","textAlignVertical","deleteIcon","borderTopWidth","paddingBottom","SUPABASE_URL","SUPABASE_ANON_KEY","ENV","process","EXPO_PUBLIC_ENV","configs","development","apiUrl","appScheme","staging","production","COLUMN_WIDTHS","model","area","wingspan","price","link","reduce","total","screenWidth","AppContext","createContext","currentScreen","find","defaultCol","context","foilsByBrand","acc","push","groupFoilsByBrand","filteredFoils","flatMap","brandMatch","seriesMatch","typeMatch","ProductService","getBaseUrl","getAllProducts","isWeb","baseUrl","fetch","DATA_PATH","ok","json","allProducts","CACHE_DIR","products","cached","AsyncStorage","getItem","setFoils","loading","setLoading","setError","loadFoils","err","refreshFoils","STORAGE_KEYS","getEnvironment","location","hostname","getTableName","storage","localStorage","key","setItem","removeItem","setQuivers","setIsLoading","loadQuivers","supabaseError","select","eq","order","ascending","storedQuivers","event","localQuivers","parsedQuivers","env","insertData","is_public","user_id","environment","insert","syncQuiversToSupabase","tableName","insertError","logger","details","hint","code","newData","selectError","limit","single","newQuiver","generateUUID","created_at","toISOString","updatedQuivers","updates","update","delete","ThemeContext","THEME_STORAGE_KEY","systemColorScheme","useColorScheme","setIsDark","savedTheme","loadTheme","getColors","newTheme","MAGENTA_DYE","SUNGLOW","NEUTRAL","lightColors","warning","darkColors","colorScheme","XLARGE","XXLARGE","BUTTON_PADDING_H","BUTTON_PADDING_V","BUTTON_GAP","CONTROLS_BOTTOM","SCREEN_PADDING","TABLE_CONTAINER_PADDING","HEADER_PADDING","CONTENT_PADDING","CONTROLS_CONTAINER_BOTTOM","CONTROLS_CONTAINER_PADDING","trackEvent","plausible","trackPageView","screenName","page","VIEW_COMPARISON","VIEW_QUIVER","COMPARE_FOILS","FILTER_FOILS","SORT_FOILS","SEARCH_FOILS","toLowerCase","replace","crypto","randomUUID","c","r","random","toString","Logger","isDevelopment","getInstance","instance","log","level","args","toUpperCase","debug","info","warn","FILTERS","COLUMNS","THEME","SORT","set","jsonValue","get","remove","clear","getAllKeys","saveSortOption","loadSortOption","savedSort","createClient","flowType","detectSessionInUrl","autoRefreshToken","persistSession","storageKey","redirectTo","getSiteUrl","origin","cookieOptions","lifetime","domain","sameSite","secure","httpOnly","global","headers"],"sourceRoot":""}