{"version":3,"file":"static/js/main.320e2801.js","mappings":"0NAcO,MAAMA,UAAsBC,EAAAA,UACjCC,WAAAA,CAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CAAEC,UAAU,EAAOC,MAAO,KACzC,CAEA,+BAAOC,CAAyBD,GAC9B,MAAO,CAAED,UAAU,EAAMC,QAC3B,CAEAE,iBAAAA,CAAkBF,EAAcG,GAGhC,CAEAC,YAAcA,KACZP,KAAKQ,SAAS,CAAEN,UAAU,EAAOC,MAAO,MAAO,EAGjDM,MAAAA,GACE,OAAIT,KAAKC,MAAMC,UACNQ,EAAAA,EAAAA,KAACC,EAAS,CAACR,MAAOH,KAAKC,MAAME,MAAOS,QAASZ,KAAKO,cAGpDP,KAAKF,MAAMe,QACpB,EAQF,MAAMF,EAAsCA,EAAGR,QAAOS,cACpD,MAAM,OAAEE,IAAWC,EAAAA,EAAAA,KAEnB,OACEL,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAO,CAACC,EAAOC,UAAW,CAAEC,gBAAiBN,EAAOO,WAAWC,UAAWT,UAC9EU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOM,QAAQX,SAAA,EAC1BH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOQ,MAAO,CAAEC,MAAOb,EAAOX,QAASU,SAAC,0BAGtDH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOU,QAAS,CAAED,MAAOb,EAAOe,KAAKC,YAAajB,SAC7DV,GAAOyB,SAAW,kCAErBlB,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CACfd,MAAO,CAACC,EAAOc,OAAQ,CAAEZ,gBAAiBN,EAAOQ,UACjDW,QAASrB,EAAQC,UAEjBH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOgB,WAAY,CAAEP,MAAOb,EAAOe,KAAKM,UAAWtB,SAAC,iBAInEuB,MAME,EAILlB,EAASmB,EAAAA,EAAWC,OAAO,CAC/BnB,UAAW,CACToB,KAAM,EACNC,WAAY,SACZC,eAAgB,SAChBC,QAASC,EAAAA,EAAQC,OAEnBpB,QAAS,CACPqB,SAAU,IACVC,MAAO,OACPN,WAAY,UAEdd,MAAO,CACLqB,SAAU,GACVC,WAAY,OACZC,aAAcN,EAAAA,EAAQO,OACtBC,UAAW,UAEbvB,QAAS,CACPmB,SAAU,GACVE,aAAcN,EAAAA,EAAQC,MACtBO,UAAW,UAEbnB,OAAMoB,OAAAC,OAAA,CACJC,kBAAmBX,EAAAA,EAAQC,MAC3BW,gBAAiBZ,EAAAA,EAAQO,OACzBM,aAAc,EACdP,aAAcN,EAAAA,EAAQC,OACF,QAAhBa,EAAAA,EAASC,IAAgB,CAC3BC,OAAQ,YAGZzB,WAAY,CACVa,SAAU,GACVC,WAAY,OAEdY,MAAO,CACLb,SAAU,GACVc,WAA4B,QAAhBJ,EAAAA,EAASC,GAAe,QAAU,YAC9CI,UAAWnB,EAAAA,EAAQC,MACnBF,QAASC,EAAAA,EAAQO,OACjBJ,MAAO,U,qGCtGJ,MAAMiB,EAAsCA,EACjDC,QACAC,eACAC,UACAC,cAAc,kBACdC,aAAY,EACZC,OAAO,SACPC,cAEA,MAAM,OAAExD,IAAWC,EAAAA,EAAAA,KAanB,OACEQ,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAO,CAACC,EAAOC,UAAW,CAAEC,gBAAiBN,EAAOO,WAAWS,YAAajB,SAAA,CAC/D,QAAhB4C,EAAAA,EAASC,IACRhD,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOqD,WAAY,CAAE5C,MAAOb,EAAOe,KAAKC,YAAajB,SAAC,kBAEpEH,EAAAA,EAAAA,KAAC8D,EAAAA,EAAQ,CAACC,KAAK,SAASC,KAAM,GAAI/C,MAAOb,EAAOe,KAAKC,aAEvDpB,EAAAA,EAAAA,KAACiE,EAAAA,EAASvB,OAAAC,OAAA,CACRpC,MAAO,CAACC,EAAO0D,MAAO,CAAEjD,MAAOb,EAAOe,KAAKP,UAC3C0C,MAAOA,EACPC,aAAcA,EACdE,YAtBiBU,MACrB,OAAQR,GACN,IAAK,aACH,MAAO,uCACT,IAAK,SACH,MAAO,mCACT,QACE,MAAO,kBACX,EAciBQ,GACbC,qBAAsBhE,EAAOe,KAAKkD,SAClCX,UAAWA,EACXE,QAASA,EACTU,eAAe,OACfC,aAAa,EACbC,gBAAgB,QAChBC,cAAc,SACdC,sBAAuB,GACF,QAAhB3B,EAAAA,EAASC,GAAe,CAC3B2B,YAAY,EACZC,aAAc,OACZ,CACFC,aAAc,gBAGP,KAAVvB,IACCtD,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CAACE,QAASiC,EAASjD,MAAOC,EAAOsE,YAAY3E,SAC3C,QAAhB4C,EAAAA,EAASC,IACRhD,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOuE,UAAW,CAAE9D,MAAOb,EAAOe,KAAKC,YAAajB,SAAC,YAEnEH,EAAAA,EAAAA,KAAC8D,EAAAA,EAAQ,CAACC,KAAK,eAAeC,KAAM,GAAI/C,MAAOb,EAAOe,KAAKC,gBAI5D,EAILZ,EAASmB,EAAAA,EAAWC,OAAO,CAC/BnB,UAAW,CACTuE,cAAe,MACflD,WAAY,SACZc,kBAAmBX,EAAAA,EAAQO,OAC3ByC,OAAQ,GACRnC,aAAc,EACdoC,IAAKjD,EAAAA,EAAQkD,OAEfjB,MAAKxB,OAAAC,OAAA,CACHd,KAAM,EACNQ,SAAU,GACV4C,OAAQ,QACY,QAAhBlC,EAAAA,EAASC,IAAgB,CAC3BoC,aAAc,OACdC,OAAQ,OACR1E,WAAY,cACZ2E,WAAY,KAGhBR,YAAWpC,OAAAC,OAAA,CACTsC,OAAQ,OACRM,YAAa,EACbzD,WAAY,SACZC,eAAgB,UACI,QAAhBgB,EAAAA,EAASC,IAAgB,CAC3BC,OAAQ,YAGZY,WAAY,CACVxB,SAAU,GACVD,MAAO,GACP6C,OAAQ,GACRxC,UAAW,SACX6C,WAAY,IAEdP,UAAW,CACT1C,SAAU,GACVD,MAAO,GACP6C,OAAQ,GACRxC,UAAW,SACX6C,WAAY,M,kFCjHhB,MA6BaE,EAAgBA,KAC3B,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAmC3C,MAAO,CACLC,iBAlCuBC,UACvB,IAEE,GADAH,GAAa,GACO,QAAhB3C,EAAAA,EAASC,GAEX,MAAO,CAAE8C,KAAM,KAAMrG,MAAO,IAAIsG,MAAM,8CAGxC,MAAMC,EAxCWC,MACrB,GAAoB,QAAhBlD,EAAAA,EAASC,GAAc,OAE3B,MAAMkD,EAASC,OAAOC,SAASF,OACzBG,EAAWF,OAAOC,SAASC,SAGjC,MAAiB,cAAbA,GAA4BA,EAASC,SAAS,aACzC,yBAKFJ,CAAM,EA2BUD,IACb,KAAEH,EAAI,MAAErG,SAAgB8G,EAAAA,EAASC,KAAKC,gBAAgB,CAC1DC,SAAU,SACVC,QAAS,CACPX,aACAY,YAAa,CACXC,YAAa,UACbC,OAAQ,cASd,MAAO,CAAEhB,OAAMrG,QACjB,CAAE,MAAOA,GAEP,MAAO,CAAEqG,KAAM,KAAMrG,QACvB,CAAC,QACCiG,GAAa,EACf,GAKAD,YACD,E,cC/DI,MAAMsB,EAAeA,EAAGC,gBAC7B,MAAM,iBAAEpB,EAAgB,UAAEH,GAAcD,IAkBxC,OACExF,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CACfd,MAAOC,EAAOc,OACdC,QAnBiBsE,UACnB,IACE,MAAM,MAAEpG,SAAgBmG,IAExB,GAAInG,EAEF,YADAwH,EAAAA,EAAMC,MAAM,gBAAiBzH,aAAiB0H,EAAAA,GAAY1H,EAAMyB,QAAU,qBAI5E8F,KACF,CAAE,MAAOvH,GACPwH,EAAAA,EAAMC,MAAM,QAAS,+CAEvB,GAOEE,SAAU3B,EAAUtF,SAEnBsF,GACCzF,EAAAA,EAAAA,KAACqH,EAAAA,EAAiB,CAACpG,MAAOb,EAAAA,EAAOe,KAAKM,WAEtCZ,EAAAA,EAAAA,MAAAyG,EAAAA,SAAA,CAAAnH,SAAA,CACmB,QAAhB4C,EAAAA,EAASC,IACRhD,EAAAA,EAAAA,KAAA,OACEuH,IAAI,2DACJC,IAAI,cACJjH,MAAO,CAAE6B,MAAO,GAAI6C,OAAQ,GAAIwC,YAAa,MAG/CzH,EAAAA,EAAAA,KAAC8D,EAAAA,EAAQ,CAACC,KAAK,cAAcC,KAAM,GAAI/C,MAAOb,EAAAA,EAAOe,KAAKM,QAASlB,MAAOC,EAAOkH,QAEnF1H,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAOC,EAAOgB,WAAWrB,SAAC,4BAGnB,EAIjBK,EAASmB,EAAAA,EAAWC,OAAO,CAC/BN,OAAQ,CACN0D,cAAe,MACflD,WAAY,SACZC,eAAgB,SAChBrB,gBAAiBN,EAAAA,EAAOQ,QACxBoB,QAAS,GACTc,aAAc,EACd6E,SAAU,KAEZnG,WAAY,CACVP,MAAOb,EAAAA,EAAOe,KAAKM,QACnBY,SAAU,GACVC,WAAY,OAEdoF,KAAM,CACJD,YAAa,KClCV,SAASG,GAAc,cAC5BC,EAAa,eACbC,EAAc,eACdC,EAAc,cACdC,EAAa,eACbC,EAAc,eACdC,EAAc,QACdC,EAAO,yBACPC,EAAwB,eACxBC,EAAc,MACdC,IAEA,MAAOC,EAAQC,IAAa7C,EAAAA,EAAAA,WAAS,IAC9B8C,EAAWC,IAAgB/C,EAAAA,EAAAA,UAA2D,YACvF,OAAEvF,EAAM,OAAEuI,EAAM,YAAEC,IAAgBvI,EAAAA,EAAAA,MACjCwI,EAAuBC,IAA4BnD,EAAAA,EAAAA,WAAS,IAC7D,QAAEoD,EAAO,KAAEC,IAASC,EAAAA,EAAAA,KAGpBC,EAAgBrD,UACpB,IACE,MAAM,MAAEpG,SAAgB8G,EAAAA,EAASC,KAAK2C,UACtC,GAAI1J,EAAO,MAAMA,EACjB+I,GAAU,EACZ,CAAE,MAAO/I,GACPwH,EAAAA,EAAMC,MAAM,QAAS,qBAEvB,GAIIkC,GAAkBC,EAAAA,EAAAA,UAAQ,KAC9B,GAA8B,IAA1BvB,EAAewB,OACjB,OAAOzB,EAAc0B,OAIvB,MAAMC,EAAY,IAAIC,IAOtB,OANAnB,EAAMoB,SAAQC,IACR7B,EAAexB,SAASqD,EAAKC,QAAUD,EAAKJ,QAC9CC,EAAUK,IAAIF,EAAKJ,OACrB,IAGKO,MAAMC,KAAKP,GAAWQ,MAAM,GAClC,CAACnC,EAAc0B,OAAQzB,EAAgBQ,IAgF1C,OACEzH,EAAAA,EAAAA,MAAAyG,EAAAA,SAAA,CAAAnH,SAAA,EACEH,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1I,QAASA,IAAMiH,GAAU,GACzBjI,MAAO,CAACC,EAAO0J,WAAY,CAAExJ,gBAAiBN,EAAOO,WAAWS,YAAajB,UAE7EH,EAAAA,EAAAA,KAACmK,EAAAA,EAAa,CAACpG,KAAK,WAAWC,KAAM,GAAI/C,MAAOb,EAAOe,KAAKP,aAG9DZ,EAAAA,EAAAA,KAACoK,EAAAA,EAAK,CACJC,QAAS9B,EACT+B,aAAW,EACXC,cAAc,OACdC,eAAgBA,IAAMhC,GAAU,GAAOrI,UAEvCH,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1J,MAAO,CAACC,EAAOiK,aAAc,CAAE/J,gBAAiBiI,EAAS,qBAAuB,uBAChFpH,QAASA,IAAMiH,GAAU,GAAOrI,UAEhCU,EAAAA,EAAAA,MAACoJ,EAAAA,EAAS,CACR1J,MAAO,CAACC,EAAOkK,aAAc,CAAEhK,gBAAiBN,EAAOO,WAAWC,UAClEW,QAASoJ,GAAKA,EAAEC,kBAAkBzK,SAAA,EAElCU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAO,CAACC,EAAOqK,YAAa,CAAEC,kBAAmB1K,EAAOiF,SAAUlF,SAAA,EACtEH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOuK,WAAY,CAAE9J,MAAOb,EAAOe,KAAKP,UAAWT,SAAC,cAClEH,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1I,QAASA,IAAMiH,GAAU,GACzBjI,MAAOC,EAAOwK,YAAY7K,UAE1BH,EAAAA,EAAAA,KAACmK,EAAAA,EAAa,CAACpG,KAAK,QAAQC,KAAM,GAAI/C,MAAOb,EAAOe,KAAKC,kBAI7DP,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAO,CAACC,EAAOyK,KAAM,CAAEH,kBAAmB1K,EAAOiF,SAAUlF,SAAA,EAC/DH,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1J,MAAO,CAACC,EAAO0K,IAAmB,YAAdzC,GAA2B,CAACjI,EAAOiI,UAAW,CAAEqC,kBAAmB1K,EAAOQ,WAC9FW,QAASA,IAAMmH,EAAa,WAAWvI,UAEvCU,EAAAA,EAAAA,MAACE,EAAAA,EAAI,CAACR,MAAO,CACXC,EAAO2K,QACP,CAAElK,MAAOb,EAAOe,KAAKC,WACP,YAAdqH,GAA2B,CAACjI,EAAO4K,cAAe,CAAEnK,MAAOb,EAAOQ,WAClET,SAAA,CAAC,YACS2H,EAAewB,OAAS,GAAKvB,EAAeuB,OAAS,GAAKtB,EAAcsB,OAAS,IAAM,eAGrGtJ,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1J,MAAO,CAACC,EAAO0K,IAAmB,YAAdzC,GAA2B,CAACjI,EAAOiI,UAAW,CAAEqC,kBAAmB1K,EAAOQ,WAC9FW,QAASA,IAAMmH,EAAa,WAAWvI,UAEvCU,EAAAA,EAAAA,MAACE,EAAAA,EAAI,CAACR,MAAO,CACXC,EAAO2K,QACP,CAAElK,MAAOb,EAAOe,KAAKC,WACP,YAAdqH,GAA2B,CAACjI,EAAO4K,cAAe,CAAEnK,MAAOb,EAAOQ,WAClET,SAAA,CAAC,WACQgI,EAAQkD,MAAKC,IAAQA,EAAIC,aAAc,eAGpDvL,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1J,MAAO,CAACC,EAAO0K,IAAmB,eAAdzC,GAA8B,CAACjI,EAAOiI,UAAW,CAAEqC,kBAAmB1K,EAAOQ,WACjGW,QAASA,IAAMmH,EAAa,cAAcvI,UAE1CH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CACXC,EAAO2K,QACP,CAAElK,MAAOb,EAAOe,KAAKC,WACP,eAAdqH,GAA8B,CAACjI,EAAO4K,cAAe,CAAEnK,MAAOb,EAAOQ,WACrET,SAAC,kBAILH,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1J,MAAO,CAACC,EAAO0K,IAAmB,YAAdzC,GAA2B,CAACjI,EAAOiI,UAAW,CAAEqC,kBAAmB1K,EAAOQ,WAC9FW,QAASA,IAAMmH,EAAa,WAAWvI,UAEvCH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CACXC,EAAO2K,QACP,CAAElK,MAAOb,EAAOe,KAAKC,WACP,YAAdqH,GAA2B,CAACjI,EAAO4K,cAAe,CAAEnK,MAAOb,EAAOQ,WAClET,SAAC,iBAMQ,YAAdsI,GACCzI,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,EAAOgL,eAAerL,UACjCH,EAAAA,EAAAA,KAACyL,EAAAA,EAAU,CAAClL,MAAOC,EAAOkL,WAAYC,sBAAuBnL,EAAOoL,cAAczL,UAChFU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOM,QAAQX,SAAA,EAC1BU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOqL,iBAAiB1L,SAAA,EACnCH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOsL,aAAc,CAAE7K,MAAOb,EAAOe,KAAKP,UAAWT,SAAC,oBAClE2H,EAAewB,OAAS,GAAKvB,EAAeuB,OAAS,GAAKtB,EAAcsB,OAAS,KACjFtJ,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1I,QAAS2G,EACT3H,MAAO,CAACC,EAAOsE,YAAa,CAAEpE,gBAAiBN,EAAOO,WAAWS,YAAajB,UAE9EH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOuL,gBAAiB,CAAE9K,MAAOb,EAAOe,KAAKC,YAAajB,SAAC,oBAI/EU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOwL,QAAQ7L,SAAA,EAC1BH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOyL,aAAc,CAAEhL,MAAOb,EAAOe,KAAKP,UAAWT,SAAC,WACpEH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,EAAO0L,cAAc/L,SAC/B0H,EAAcsE,OAAOC,KAAKxC,IACzB5J,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CAER1J,MAAO,CACLC,EAAO6L,KACP,CAAE3L,gBAAiBN,EAAOO,WAAWS,WACrC0G,EAAexB,SAASsD,IAAU,CAACpJ,EAAO8L,aAAc,CAAE5L,gBAAiBN,EAAOQ,WAEpFW,QAASA,IAAM0G,EAAe,SAAU2B,GAAOzJ,UAE/CH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CACHR,MAAO,CACLC,EAAO+L,SACP,CAAEtL,MAAOb,EAAOe,KAAKC,WACrB0G,EAAexB,SAASsD,IAAU,CAACpJ,EAAOgM,iBAAkB,CAAEvL,MAAOb,EAAOe,KAAKM,WACjFtB,SAEDyJ,KAfEA,WAsBb/I,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOwL,QAAQ7L,SAAA,EAC1BH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOyL,aAAc,CAAEhL,MAAOb,EAAOe,KAAKP,UAAWT,SAAC,UACpEH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,EAAO0L,cAAc/L,SAC/B0H,EAAc4E,MAAML,KAAKM,IACxB1M,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CAER1J,MAAO,CACLC,EAAO6L,KACP,CAAE3L,gBAAiBN,EAAOO,WAAWS,WACrC4G,EAAc1B,SAASoG,IAAS,CAAClM,EAAO8L,aAAc,CAAE5L,gBAAiBN,EAAOQ,WAElFW,QAASA,IAAM0G,EAAe,OAAQyE,GAAMvM,UAE5CH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CACHR,MAAO,CACLC,EAAO+L,SACP,CAAEtL,MAAOb,EAAOe,KAAKC,WACrB4G,EAAc1B,SAASoG,IAAS,CAAClM,EAAOgM,iBAAkB,CAAEvL,MAAOb,EAAOe,KAAKM,WAC/EtB,SAEDuM,KAfEA,WAsBb7L,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOwL,QAAQ7L,SAAA,EAC1BH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOyL,aAAc,CAAEhL,MAAOb,EAAOe,KAAKP,UAAWT,SAAC,YACpEH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,EAAO0L,cAAc/L,SAC/BiJ,EAAgBE,OAAS,EACxBF,EAAgBgD,KAAK7C,IACnBvJ,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CAER1J,MAAO,CACLC,EAAO6L,KACP,CAAE3L,gBAAiBN,EAAOO,WAAWS,WACrC2G,EAAezB,SAASiD,IAAW,CAAC/I,EAAO8L,aAAc,CAAE5L,gBAAiBN,EAAOQ,WAErFW,QAASA,IAAM0G,EAAe,SAAUsB,GAAQpJ,UAEhDH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CACHR,MAAO,CACLC,EAAO+L,SACP,CAAEtL,MAAOb,EAAOe,KAAKC,WACrB2G,EAAezB,SAASiD,IAAW,CAAC/I,EAAOgM,iBAAkB,CAAEvL,MAAOb,EAAOe,KAAKM,WAClFtB,SAEDoJ,KAfEA,MAoBTvJ,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOmM,aAAc,CAAE1L,MAAOb,EAAOe,KAAKC,YAAajB,SAAC,wDASlE,YAAdsI,GACFzI,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,EAAOgL,eAAerL,UACjCH,EAAAA,EAAAA,KAACyL,EAAAA,EAAU,CAAClL,MAAOC,EAAOkL,WAAYC,sBAAuBnL,EAAOoL,cAAczL,UAChFU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOM,QAAQX,SAAA,EAC1BU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOqL,iBAAiB1L,SAAA,EACnCH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOsL,aAAc,CAAE7K,MAAOb,EAAOe,KAAKP,UAAWT,SAAC,oBACnEgI,EAAQkD,MAAKC,IAAQA,EAAIC,cACxBvL,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1I,QAAS8G,EACT9H,MAAO,CAACC,EAAOsE,YAAa,CAAEpE,gBAAiBN,EAAOO,WAAWS,YAAajB,UAE9EH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOuL,gBAAiB,CAAE9K,MAAOb,EAAOe,KAAKC,YAAajB,SAAC,gBAI/EH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,EAAOoM,WAAWzM,SAC5BgI,EAAQiE,KAAIS,IACXhM,EAAAA,EAAAA,MAACoJ,EAAAA,EAAS,CAER1J,MAAOC,EAAOsM,WACdvL,QAASA,IAAM6G,EAAyByE,EAAOE,IAAI5M,SAAA,EAEnDH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOwM,YAAa,CAAE/L,MAAOb,EAAOe,KAAKP,UAAWT,SAAE0M,EAAOI,SAC3EjN,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAO,CACXC,EAAO0M,SACP,CAAEC,YAAa/M,EAAOiF,QACtBwH,EAAOtB,WAAa,CAAC/K,EAAO4M,gBAAiB,CAAE1M,gBAAiBN,EAAOQ,QAASuM,YAAa/M,EAAOQ,WACpGT,SACC0M,EAAOtB,YACNvL,EAAAA,EAAAA,KAACmK,EAAAA,EAAa,CAACpG,KAAK,QAAQC,KAAM,GAAI/C,MAAOb,EAAOe,KAAKM,cAXxDoL,EAAOE,eAoBR,eAAdtE,GACFzI,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,EAAOgL,eAAerL,UACjCH,EAAAA,EAAAA,KAACyL,EAAAA,EAAU,CAAClL,MAAOC,EAAOkL,WAAYC,sBAAuBnL,EAAOoL,cAAczL,UAChFU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOM,QAAQX,SAAA,EAC1BH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOsL,aAAc,CAAE7K,MAAOb,EAAOe,KAAKP,UAAWT,SAAC,oBACpEH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,EAAOwL,QAAQ7L,UAC1BH,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1J,MAAO,CAACC,EAAO6M,WAAY,CAAE3M,gBAAiBN,EAAOO,WAAWS,YAChEG,QAASqH,EAAYzI,UAErBU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAO8M,kBAAkBnN,SAAA,EACpCH,EAAAA,EAAAA,KAACmK,EAAAA,EAAa,CACZpG,KAAM4E,EAAS,YAAc,aAC7B3E,KAAM,GACN/C,MAAOb,EAAOe,KAAKP,WAErBZ,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAO+M,eAAgB,CAAEtM,MAAOb,EAAOe,KAAKP,UAAWT,SAClEwI,EAAS,YAAc,6BAhU3CI,GAcH/I,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,EAAOgL,eAAerL,UACjCH,EAAAA,EAAAA,KAACyL,EAAAA,EAAU,CAAClL,MAAOC,EAAOkL,WAAYC,sBAAuBnL,EAAOoL,cAAczL,UAChFU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOM,QAAQX,SAAA,EAC1BU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOgN,SAASrN,SAAA,CAC1B6I,GAAMyE,eAAeC,aACpB1N,EAAAA,EAAAA,KAAC2N,EAAAA,EAAK,CACJC,OAAQ,CAAEC,IAAK7E,EAAKyE,cAAcC,YAClCnN,MAAOC,EAAOsN,eAGlBjN,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOuN,aAAa5N,SAAA,EAC/BH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOwN,SAAU,CAAE/M,MAAOb,EAAOe,KAAKP,UAAWT,SAC5D6I,GAAMyE,eAAeQ,WAAajF,GAAMkF,SAE3ClO,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAO2N,UAAW,CAAElN,MAAOb,EAAOe,KAAKC,YAAajB,SAC/D6I,GAAMkF,eAKblO,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAO,CAACC,EAAO4N,YAAa,CAAE1N,gBAAiBN,EAAOiF,YAE5DxE,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOwL,QAAQ7L,SAAA,EAC1BH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOyL,aAAc,CAAEhL,MAAOb,EAAOe,KAAKP,UAAWT,SAAC,aACpEU,EAAAA,EAAAA,MAACoJ,EAAAA,EAAS,CACR1J,MAAO,CAACC,EAAO6M,WAAY,CAAE3M,gBAAiBN,EAAOO,WAAWS,YAChEG,QAASA,KACPuH,GAAyB,EAAK,EAC9B3I,SAAA,EAEFU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAO8M,kBAAkBnN,SAAA,CACnB,QAAhB4C,EAAAA,EAASC,IACRhD,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAAE8B,SAAU,GAAIpB,MAAOb,EAAOe,KAAKP,SAAUT,SAAC,kBAE3DH,EAAAA,EAAAA,KAAC8D,EAAAA,EAAQ,CAACC,KAAK,mBAAmBC,KAAM,GAAI/C,MAAOb,EAAOe,KAAKP,WAEjEZ,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAO+M,eAAgB,CAAEtM,MAAOb,EAAOe,KAAKP,UAAWT,SAAC,uBAExEH,EAAAA,EAAAA,KAACmK,EAAAA,EAAa,CAACpG,KAAK,gBAAgBC,KAAM,GAAI/C,MAAOb,EAAOe,KAAKC,mBAIrEpB,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,EAAOwL,QAAQ7L,UAC1BH,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1J,MAAO,CAACC,EAAO6N,cAAe,CAAE3N,gBAAiBN,EAAOO,WAAWS,YACnEG,QAAS2H,EAAc/I,UAEvBU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAO8M,kBAAkBnN,SAAA,CACnB,QAAhB4C,EAAAA,EAASC,IACRhD,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAAE8B,SAAU,GAAIpB,MAAOb,EAAOe,KAAKP,SAAUT,SAAC,YAE3DH,EAAAA,EAAAA,KAAC8D,EAAAA,EAAQ,CAACC,KAAK,kBAAkBC,KAAM,GAAI/C,MAAOb,EAAOe,KAAKP,WAEhEZ,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAO+M,eAAgB,CAAEtM,MAAOb,EAAOe,KAAKP,UAAWT,SAAC,4BAjEhFH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,EAAOgL,eAAerL,UACjCU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOM,QAAQX,SAAA,EAC1BH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOsL,aAAc,CAAE7K,MAAOb,EAAOe,KAAKP,QAAS2B,aAAc,KAAMpC,SAAC,aACtFH,EAAAA,EAAAA,KAAC+G,EAAY,CAACC,UAAWA,KACvBwB,GAAU,EAAM,iBAyUxBxI,EAAAA,EAAAA,KAACoK,EAAAA,EAAK,CACJC,QAASxB,EACTyB,aAAW,EACXC,cAAc,OACdC,eAAgBA,IAAM1B,GAAyB,GAAO3I,UAEtDH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CACHC,MAAO,CACLC,EAAOiK,aACP,CAAE/J,gBAAiB,uBAErB4N,0BAA2BA,KAAM,EAAKnO,UAEtCH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CACHC,MAAO,CACLC,EAAOkK,aACP,CAAEhK,gBAAiBN,EAAOO,WAAWC,UACrCT,UAEFH,EAAAA,EAAAA,KAACuO,EAAAA,EAAa,CACZC,cAAe,GACfC,QAASA,IAAM3F,GAAyB,GACxC4F,WAAW,QACXC,YAAY,YAO1B,CAEA,MAAMnO,EAASmB,EAAAA,EAAWC,OAAO,CAC/BnB,UAAW,CACTmO,SAAU,YAEZtN,OAAQ,CACNU,QAASC,EAAAA,EAAQO,QAEnB0H,WAAY,CACVlI,QAASC,EAAAA,EAAQ4M,OACjB/L,aAAc,GAEhB4H,aAAc,CACZtI,MAAO,OACPD,SAAU,IACVW,aAAc,GACdgM,UAAW,MACXC,SAAU,UAEZlE,YAAa,CACX7F,cAAe,MACfjD,eAAgB,gBAChBD,WAAY,SACZE,QAASC,EAAAA,EAAQC,MACjB8M,kBAAmB,GAErBC,YAAa,CACXjK,cAAe,MACflD,WAAY,SACZoD,IAAKjD,EAAAA,EAAQkD,OAEf+J,YAAa,CACXlK,cAAe,SACfE,IAAKjD,EAAAA,EAAQO,QAEf2M,YAAa,CACXnN,QAASC,EAAAA,EAAQO,QAEnB4M,WAAY,CACVlK,IAAKjD,EAAAA,EAAQO,QAEfiI,aAAc,CACZ5I,KAAM,EACNE,eAAgB,SAChBD,WAAY,SACZE,QAASC,EAAAA,EAAQC,OAEnB6I,WAAY,CACV1I,SAAU,GACVC,WAAY,OAEd0I,YAAa,CACXhJ,QAAS,GAEXiJ,KAAM,CACJjG,cAAe,MACfgK,kBAAmB,GAErB9D,IAAK,CACHrJ,KAAM,EACNG,QAAS,GACTF,WAAY,UAEd2G,UAAW,CACTuG,kBAAmB,GAErB7D,QAAS,CACP9I,SAAU,GACVC,WAAY,OAEd8I,cAAe,CAEf,EACAtK,QAAS,CACPkB,QAAS,GACTI,MAAO,QAEToJ,eAAgB,CACd3J,KAAM,GAER6J,WAAY,CACV7J,KAAM,GAER+J,cAAe,CACbyD,SAAU,GAEZrD,QAAS,CACPzJ,aAAc,IAEhB0J,aAAc,CACZ5J,SAAU,GACVC,WAAY,MACZC,aAAc,IAEhB2J,cAAe,CACblH,cAAe,MACfsK,SAAU,OACVpK,IAAK,GAEPmH,KAAM,CACJvJ,aAAc,GACdF,kBAAmB,GACnBC,gBAAiB,GAEnByJ,aAAc,CAAC,EACfC,SAAU,CACRlK,SAAU,IAEZmK,iBAAkB,CAAC,EACnBI,WAAY,CACV1H,IAAK,IAEP4H,WAAY,CACV9H,cAAe,MACfjD,eAAgB,gBAChBD,WAAY,SACZe,gBAAiB,GAEnBmK,YAAa,CACX3K,SAAU,IAEZ6K,SAAU,CACR9K,MAAO,GACP6C,OAAQ,GACRnC,aAAc,EACdyM,YAAa,EACbzN,WAAY,SACZC,eAAgB,UAElBqL,gBAAiB,CAAC,EAClBvB,iBAAkB,CAChB7G,cAAe,MACfjD,eAAgB,gBAChBD,WAAY,SACZS,aAAc,IAEhBuJ,aAAc,CACZzJ,SAAU,GACVC,WAAY,OAEdwC,YAAa,CACXlC,kBAAmB,GACnBC,gBAAiB,EACjBC,aAAc,IAEhBiJ,gBAAiB,CACf1J,SAAU,IAEZsK,aAAc,CACZtK,SAAU,GACVC,WAAY,OAGdkL,SAAU,CACRxI,cAAe,MACflD,WAAY,SACZoD,IAAK,GACL3C,aAAc,IAEhBwL,aAAc,CACZlM,KAAM,GAERiM,YAAa,CACX1L,MAAO,GACP6C,OAAQ,GACRnC,aAAc,IAEhBkL,SAAU,CACR3L,SAAU,GACVC,WAAY,MACZC,aAAc,GAEhB4L,UAAW,CACT9L,SAAU,IAEZ+L,YAAa,CACXnJ,OAAQ,EACR1C,aAAc,IAEhB8K,WAAU3K,OAAAC,OAAA,CACRqC,cAAe,MACflD,WAAY,SACZC,eAAgB,gBAChBC,QAAS,GACTc,aAAc,GACM,QAAhBC,EAAAA,EAASC,IAAgB,CAC3BC,OAAQ,YAGZqK,kBAAmB,CACjBtI,cAAe,MACflD,WAAY,SACZoD,IAAK,IAEPqI,eAAgB,CACdlL,SAAU,GACVC,WAAY,OAEd+L,cAAa3L,OAAAC,OAAA,CACXqC,cAAe,MACflD,WAAY,SACZE,QAAS,GACTc,aAAc,GACM,QAAhBC,EAAAA,EAASC,IAAgB,CAC3BC,OAAQ,c,mFCznBRuM,EAAetQ,EAAAA,MAAW,IAAM,gCAChCuQ,GAAmBvQ,EAAAA,MAAW,IAAM,gCACpCwQ,GAAexQ,EAAAA,MAAW,IAAM,gCAChCyQ,GAAgBzQ,EAAAA,MAAW,IAAM,gCACjC0Q,GAAiB1Q,EAAAA,MAAW,IAAM,+BAClC2Q,GAAU3Q,EAAAA,MAAW,IAAM,gCAE3B4Q,IAAQC,EAAAA,EAAAA,KAERC,GAAa,CACjBC,KAAM,eACNC,OAAQ,iBACRC,QAAS,sBACTC,SAAU,mBACVC,OAAQ,oBAGV,SAASC,IAAW,KAAEvM,EAAI,MAAE9C,IAC1B,GAAoB,QAAhB8B,EAAAA,EAASC,GAAc,CAEzB,MAAMuN,EAAoD,CACxDN,KAAM,eACNC,OAAQ,eACRC,QAAS,eACTC,SAAU,eACVC,OAAQ,gBAEV,OAAOrQ,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAAE8B,SAAU,GAAIpB,SAAQd,SAAEoQ,EAASxM,IACzD,CACA,OAAO/D,EAAAA,EAAAA,KAAC8D,EAAAA,EAAQ,CAACC,KAAMiM,GAAWjM,GAAOC,KAAM,GAAI/C,MAAOA,GAC5D,EAIauP,EAAAA,EAAAA,MAAuBC,OAItBC,EAAAA,GAAOR,OAKHQ,EAAAA,GAAOC,WACXD,EAAAA,GAAOL,OACRK,EAAAA,GAAOE,MACLF,EAAAA,GAAOG,QACPH,EAAAA,GAAOI,QAdtB,MAoBMC,GAAgBC,IAAA,IAAC,SACrB7Q,GAKD6Q,EAJI5R,GAAK6R,EAAAA,EAAAA,GAAAD,EAAAE,GAAA,OAKRlR,EAAAA,EAAAA,KAACmR,EAAAA,SAAQ,CAACC,UAAUpR,EAAAA,EAAAA,KAACqR,EAAAA,EAAgB,IAAIlR,SACtCjB,EAAAA,aAAmBiB,EAAUf,IACrB,EAGAkS,GAAYA,KACvB,MAAMC,GAAaC,EAAAA,EAAAA,OACb,OAAEpR,IAAWC,EAAAA,EAAAA,MACb,MAAE+B,IAAUqP,EAAAA,EAAAA,KACZC,EAAWtP,EAAQuP,EAAAA,IACnB,MAAErJ,IAAUsJ,EAAAA,EAAAA,MACZ,YACJC,EAAW,eACXC,EAAc,QACdC,EAAO,WACPC,EAAU,QACV7J,EAAO,WACP8J,EAAU,iBACVC,IACEjJ,EAAAA,EAAAA,MACE,cAAEpB,IAAkBsK,EAAAA,EAAAA,GAAiB7J,EAAOyJ,IAC5C,kBAAEK,IAAsBC,EAAAA,EAAAA,YAAWC,IAGnCnG,EAASjN,EAAAA,SAAc,IACtBoJ,GAAOgB,OACL,IAAI,IAAIG,IAAInB,EAAM8D,KAAIzC,GAAQA,EAAKC,UAASI,OADxB,IAE1B,CAAC1B,IAGEiK,EAAkBA,KACtBhB,EAAWiB,SAAS,SAAU,CAAC,EAAE,EAG7BC,EAAgBtR,IACpB2Q,EAAe3Q,GACfoQ,EAAWmB,UAAU,CAAEb,YAAa1Q,GAAO,EAGvCwR,EAAeC,GACA,eAAfA,EAAM7O,KAA8B,aACrB,WAAf6O,EAAM7O,KAA0B,SAC7B,SAGH8O,EAAwBD,IAC5B,OAAQA,EAAM7O,MACZ,IAAK,aACH,MAAO,uCACT,IAAK,SACH,MAAO,mCACT,QACE,MAAO,kBACX,EAGI+O,EAAqBF,IACN,WAAfA,EAAM7O,MACRwN,EAAWmB,UAAU,CAAEK,oBAAoB,GAC7C,EAYIC,EAA4BA,CAACtG,EAAcpJ,KATtB2P,EAACvG,EAA2BpJ,KACrD0O,GAAWkB,GAAIxQ,OAAAC,OAAA,GACVuQ,EAAK,CACR,CAACxG,GAAOwG,EAAKxG,GAAMpG,SAAShD,GACxB4P,EAAKxG,GAAMyG,QAAOC,GAAQA,IAAS9P,IACnC,IAAI4P,EAAKxG,GAAOpJ,MACnB,EAIH2P,CAAmBvG,EAA6BpJ,EAAM,EAGlD+P,EAAqBA,KACzBrB,EAAW,CACT7F,OAAQ,GACR5C,OAAQ,GACRmD,KAAM,IACN,EAGE4G,EAAgCC,IACpCtB,GAAWiB,GACTA,EAAK9G,KAAId,GACPA,EAAIyB,KAAOwG,EAAQ7Q,OAAAC,OAAA,GAAQ2I,EAAI,CAACC,WAAYD,EAAIC,YAAcD,KAEjE,EAGGkI,EAAqBA,KACzBvB,EAAWwB,EAAAA,GAAgB,EAIvBC,EAAaxU,EAAAA,SAAc,KAAMyU,EAAAA,EAAAA,IAAcxL,IAAU,CAACA,IAG3CjJ,EAAAA,SAAc,KACjC0U,EAAAA,EAAAA,IAAgBF,EAAYtR,EAAOsP,IACnC,CAACgC,EAAYtR,EAAOsP,IAICxS,EAAAA,SAAc,IAC/BwS,EACK,OAGFmC,KAAKC,IAAIJ,EAAkC,EAApBK,EAAAA,GAAwB3R,IACrD,CAACsR,EAAYtR,EAAOsP,KAGvBsC,EAAAA,EAAAA,YAAU,KACwBnO,WAC9B,IACE,MAAMoO,QAAqBC,EAAAA,EAAAA,MAC3B,GAAID,EAAc,CAChB,MAAME,EAAiBV,EAAAA,GAAgBrH,KAAId,GAAG5I,OAAAC,OAAA,GACzC2I,EAAI,CACPC,UAA2C,mBAAzB0I,EAAa3I,EAAIyB,IAAoBkH,EAAa3I,EAAIyB,IAAMzB,EAAIC,cAEpF0G,EAAWkC,EACb,CACF,CAAE,MAAO1U,GAET,GAGF2U,EAAyB,GACxB,KAGHJ,EAAAA,EAAAA,YAAU,KACkBnO,WACxB,IACE,MAAMwO,QAAqBC,EAAAA,EAAAA,MACvBD,GACFrC,EAAW,CACT7F,OAAQkI,EAAalI,QAAU,GAC/B5C,OAAQ8K,EAAa9K,QAAU,GAC/BmD,KAAM2H,EAAa5H,OAAS,IAGlC,CAAE,MAAOhN,GAET,GAGF8U,EAAmB,GAClB,IAEH,MAAMC,EAA2BtV,EAAAA,SAAc,KAC7C,GAAIwS,EACF,MAAO,CACLtP,MAAO,OACPQ,kBAAmBmR,EAAAA,IAKvB,MAAMU,GAAiBd,EAAAA,EAAAA,IAAcxL,GACrC,MAAO,CACL/F,MAAOqS,EACPtS,UAAUyR,EAAAA,EAAAA,IAAgBa,EAAgBrS,GAAO,GACjDsS,UAAW,SACZ,GACA,CAACvM,EAAS/F,EAAOsP,IAEdiD,EAAqB/B,IAEvB/R,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,GAAOoU,wBAAwBzU,SAAA,EAC1CU,EAAAA,EAAAA,MAACQ,EAAAA,EAAgB,CACfd,MAAO,CAACC,GAAOqU,cACftT,QAAS6Q,EAAkBjS,SAAA,EAE3BH,EAAAA,EAAAA,KAACsQ,GAAU,CAACvM,KAAK,SAAS9C,MAAOb,EAAOe,KAAKP,WAC3C8Q,IACA1R,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,GAAOsU,iBAAkB,CAAE7T,MAAOb,EAAOe,KAAKP,UAAWT,SAAC,mBAK5EH,EAAAA,EAAAA,KAAC4H,EAAa,CACZC,cAAeA,EACfC,eAAgBiK,EAAQ5F,OACxBpE,eAAgBgK,EAAQxI,OACxBvB,cAAe+J,EAAQrF,KACvBzE,eAAgB+K,EAChB9K,eAAgBmL,EAChBlL,QAASA,EACTC,yBAA0BkL,EAC1BjL,eAAgBmL,EAChBlL,MAAOA,OAMf,OACEzH,EAAAA,EAAAA,MAACiP,GAAMiF,UAAS,CACdC,cAAe,CACbC,YAAa,CACXvU,gBAAiBN,EAAOO,WAAWC,SAErCsU,qBAAqB,GACrB/U,SAAA,EAEFH,EAAAA,EAAAA,KAAC8P,GAAMqF,OAAM,CACXpR,KAAK,SACL4C,QAASA,EAAGiM,YAAO,CACjBwC,YAAaxC,EAAMyC,QAAQrU,OAAS,GACpCsU,WAAYA,KACVtV,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAO,CACXC,GAAO+U,qBACP,CAAE7U,gBAAiBN,EAAOO,WAAWC,UACpC8Q,GAAY,CAAE5P,WAAY,WAC3B3B,SACCuR,GAEC1R,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,GAAOgV,0BAA0BrV,UAC5CH,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1I,QAASgR,EACThS,MAAOA,EAAGkV,aAAc,CACtBjV,GAAOkV,cACPD,GAAWjV,GAAOmV,aAClBxV,UAEFH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,GAAO4U,YAAa,CAAEnU,MAAOb,EAAOQ,UAAWT,SAAC,oBAKlEH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAO,CACXC,GAAOoV,uBACPpB,GACArU,UACAU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAO,CACXC,GAAOqV,iBACP,CACEzT,MAAO,OACPN,WAAY,SACZC,eAAgB,kBAElB5B,SAAA,EACAH,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1I,QAASgR,EACThS,MAAOA,EAAGkV,aAAc,CACtBjV,GAAOkV,cACPD,GAAWjV,GAAOmV,aAClBxV,UAEFH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,GAAO4U,YAAa,CAAEnU,MAAOb,EAAOQ,UAAWT,SAAC,kBAEhEH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAO,CAACC,GAAOsV,sBAAuB,CAAEjU,KAAM,IAAK1B,UACvDH,EAAAA,EAAAA,KAACqD,EAAS,CACRC,MAAOuO,EACPtO,aAAepC,GAASsR,EAAatR,GACrCqC,QAASA,IAAMiP,EAAa,IAC5B9O,KAAMgP,EAAYC,GAClBnP,YAAaoP,EAAqBD,GAClChP,QAASA,IAAMkP,EAAkBF,OAGpC+B,aAMVxU,SAEDf,IACAY,EAAAA,EAAAA,KAAC+Q,GAAa,CAAA5Q,UACZH,EAAAA,EAAAA,KAACwP,EAAY9M,OAAAC,OAAA,GACPvD,EAAK,CACT2S,QAASA,EACT9J,eAAgB+K,EAChB7K,QAASA,EACTgE,OAAQA,UAMhBnM,EAAAA,EAAAA,KAAC8P,GAAMqF,OAAM,CACXpR,KAAK,aACL4C,QAASA,EAAGiM,YAAO,CACjBwC,YAAaxC,EAAMyC,QAAQrU,OAAS,GACpCsU,WAAYA,KACVtV,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAO,CACXC,GAAO+U,qBACP,CAAE7U,gBAAiBN,EAAOO,WAAWC,UACpC8Q,GAAY,CAAE5P,WAAY,WAC3B3B,SACCuR,GAEC1R,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,GAAOgV,0BAA0BrV,UAC5CH,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1I,QAASgR,EACThS,MAAOA,EAAGkV,aAAc,CACtBjV,GAAOkV,cACPD,GAAWjV,GAAOmV,aAClBxV,UAEFH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,GAAO4U,YAAa,CAAEnU,MAAOb,EAAOQ,UAAWT,SAAC,oBAKlEH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAO,CACXC,GAAOoV,uBACPpB,GACArU,UACAU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAO,CACXC,GAAOqV,iBACP,CACEzT,MAAO,OACPN,WAAY,SACZC,eAAgB,kBAElB5B,SAAA,EACAH,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1I,QAASgR,EACThS,MAAOA,EAAGkV,aAAc,CACtBjV,GAAOkV,cACPD,GAAWjV,GAAOmV,aAClBxV,UAEFH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,GAAO4U,YAAa,CAAEnU,MAAOb,EAAOQ,UAAWT,SAAC,kBAEhEH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAO,CAACC,GAAOsV,sBAAuB,CAAEjU,KAAM,IAAK1B,UACvDH,EAAAA,EAAAA,KAACqD,EAAS,CACRC,MAAOuO,EACPtO,aAAepC,GAASsR,EAAatR,GACrCqC,QAASA,IAAMiP,EAAa,IAC5B9O,KAAMgP,EAAYC,GAClBnP,YAAaoP,EAAqBD,GAClChP,QAASA,IAAMkP,EAAkBF,OAGpC+B,aAMVxU,SAEDf,IACAY,EAAAA,EAAAA,KAAC+Q,GAAa,CAAA5Q,UACZH,EAAAA,EAAAA,KAACyP,GAAgB/M,OAAAC,OAAA,GAAKvD,SAK5BY,EAAAA,EAAAA,KAAC8P,GAAMqF,OAAM,CACXpR,KAAK,SACL4C,QAASA,EAAGiM,YAAO,CACjBwC,YAAa,GACbE,WAAYA,KACVtV,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAO,CACXC,GAAO+U,qBACP,CAAE7U,gBAAiBN,EAAOO,WAAWC,UACpC8Q,GAAY,CAAE5P,WAAY,WAC3B3B,SACCuR,GAEC1R,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,GAAOgV,0BAA0BrV,UAC5CH,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1I,QAASgR,EACThS,MAAOA,EAAGkV,aAAc,CACtBjV,GAAOkV,cACPD,GAAWjV,GAAOmV,aAClBxV,UAEFH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,GAAO4U,YAAa,CAAEnU,MAAOb,EAAOQ,UAAWT,SAAC,oBAKlEH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAO,CACXC,GAAOoV,uBACPpB,GACArU,UACAU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAO,CACXC,GAAOqV,iBACP,CACEzT,MAAO,OACPN,WAAY,SACZC,eAAgB,kBAElB5B,SAAA,EACAH,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CACR1I,QAASgR,EACThS,MAAOA,EAAGkV,aAAc,CACtBjV,GAAOkV,cACPD,GAAWjV,GAAOmV,aAClBxV,UAEFH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,GAAO4U,YAAa,CAAEnU,MAAOb,EAAOQ,UAAWT,SAAC,kBAEhEH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAO,CAACC,GAAOsV,sBAAuB,CAAEjU,KAAM,IAAK1B,UACvDH,EAAAA,EAAAA,KAACqD,EAAS,CACRC,MAAOuO,EACPtO,aAAepC,GAASsR,EAAatR,GACrCqC,QAASA,IAAMiP,EAAa,IAC5B9O,KAAMgP,EAAYC,GAClBnP,YAAaoP,EAAqBD,GAClChP,QAASA,IAAMkP,EAAkBF,OAGpC+B,aAMVxU,SAEDf,IACA,MAAM2W,EAAqB7W,EAAAA,SAAc,IAClCE,EAAMwT,MAAMyC,QAAQW,UAAalM,MAAMmM,QAAQ3N,GAC7CA,EAAM6K,QAAO+C,IAClB,IAAKA,EAAG,OAAO,EACf,MAAMC,GAASC,EAAAA,EAAAA,GAAeF,GAC9B,OAAO9W,EAAMwT,MAAMyC,OAAOW,SAAS1P,SAAS6P,EAAO,IAJc,IAMlE,CAAC/W,EAAMwT,MAAMyC,QAAQW,SAAU1N,IAElC,OACEtI,EAAAA,EAAAA,KAAC+Q,GAAa,CAAA5Q,UACZH,EAAAA,EAAAA,KAAC0P,GAAYhN,OAAAC,OAAA,GAAKvD,EAAK,CACrBiX,YAAa,CACX/S,MAAOuO,EACPtO,aAAckP,EACdjP,QAASA,IAAMsO,EAAe,IAC9BnO,KAAM,SACNF,YAAa,6BAEf6S,mBAAoB,CAClBzO,gBACAC,eAAgBiK,EAAQ5F,OACxBpE,eAAgBgK,EAAQxI,OACxBvB,cAAe+J,EAAQrF,KACvBzE,eAAgB+K,EAChB9K,eAAgBmL,EAChBlL,UACAC,yBAA0BkL,EAC1BjL,eAAgBmL,EAChBlL,MAAOyN,OAGG,KAKtB/V,EAAAA,EAAAA,KAAC8P,GAAMqF,OAAM,CACXpR,KAAK,QACL4C,QAAS,CACP4P,aAAa,GACbpW,SAEAf,IACAY,EAAAA,EAAAA,KAAC+Q,GAAa,CAAA5Q,UACZH,EAAAA,EAAAA,KAAC4P,GAAclN,OAAAC,OAAA,GAAKvD,SAK1BY,EAAAA,EAAAA,KAAC8P,GAAMqF,OAAM,CACXpR,KAAK,UACL4C,QAAS,CACP4P,aAAa,GACbpW,SAEAf,IACAY,EAAAA,EAAAA,KAAC+Q,GAAa,CAAA5Q,UACZH,EAAAA,EAAAA,KAAC2P,GAAajN,OAAAC,OAAA,GAAKvD,SAKzBY,EAAAA,EAAAA,KAAC8P,GAAMqF,OAAM,CACXpR,KAAK,UACL4C,QAAS,CACP4P,aAAa,GACbpW,SAEAf,IACAY,EAAAA,EAAAA,KAAC+Q,GAAa,CAAA5Q,UACZH,EAAAA,EAAAA,KAAC6P,GAAOnN,OAAAC,OAAA,GAAKvD,UAIH,EAIhBoB,GAASmB,EAAAA,EAAWC,OAAO,CAC/B2T,qBAAsB,CACpB1T,KAAM,EACNe,kBAAmBmR,EAAAA,IAGrByB,0BAA2B,CACzBxQ,cAAe,MACflD,WAAY,SACZmD,OAAQ,GACR7C,MAAO,QAEToU,2BAA4B,CAC1BxR,cAAe,MACflD,WAAY,SACZoD,IAAK,EACLuR,aAAc,GACdC,OAAQ,KAEVC,yBAA0B,CACxBvU,MAAO,IACP6C,OAAQ,IAGV2Q,uBAAwB,CACtB3Q,OAAQ,GACR7C,MAAO,QAETyT,iBAAkB,CAChB7Q,cAAe,MACflD,WAAY,SACZoD,IAAK,GACLD,OAAQ,OACR7C,MAAO,QAET0T,sBAAuB,CACrBjU,KAAM,EACNoD,OAAQ,IAGVyQ,cAAe,CACbzQ,OAAQ,OACRlD,eAAgB,SAChB4F,SAAU,KAEZgO,YAAa,CACXiB,QAAS,IAEXxB,YAAa,CACX/S,SAAU,GACVC,WAAY,QAEdsS,wBAAyB,CACvB5P,cAAe,MACflD,WAAY,SACZoD,IAAK,GACLuR,aAAc1C,EAAAA,GACd2C,OAAQ,KAEV7B,aAAYnS,OAAAC,OAAA,CACVqC,cAAe,MACflD,WAAY,SACZoD,IAAK,EACLlD,QAAS,EACTc,aAAc,GACM,QAAhBC,EAAAA,EAASC,IAAgB,CAC3BC,OAAQ,UACR4T,WAAY,SAGhB/B,iBAAkB,CAChBzS,SAAU,GACVC,WAAY,SC/nBHgQ,GAAgBpT,EAAAA,cAG1B,CACDkT,kBAAmBA,OACnB0E,kBAAmBA,UCfrBC,EAAAA,EAAAA,IDkBe,WACb,MAAMC,GAAgBC,EAAAA,EAAAA,OACfC,EAAwBC,IAA6BxR,EAAAA,EAAAA,WAAS,GAG/DmR,EAAoBA,IAAMK,GAA0B,GAEpDC,EAA8C,CAClDC,UAAUC,EAAAA,EAAAA,MACVC,OAAQ,CACNC,QAAS,CACPC,OAAQ,CACNC,KAAM,IACNC,MAAO,CACLhU,KAAOA,GAAiBA,GAE1BiU,UAAW,CACTjU,KAAOA,GAAiBA,IAG5BkU,WAAY,CACVH,KAAM,cACNI,OAAO,EACPF,UAAW,CACTG,WAAahU,GAAiBA,EAC9BuE,MAAQA,GAAiB0P,KAAKJ,UAAUtP,KAG5C2P,OAAQ,CACNP,KAAM,oBACNC,MAAO,CACLO,SAAWnL,GAAeA,EAC1BgL,WAAahU,GAAiBA,EAC9BuE,MAAQA,GAAkBA,EAAQ0P,KAAKL,MAAMrP,QAAS6P,GAExDP,UAAW,CACTM,SAAWnL,GAAeA,EAC1BgL,WAAahU,GAAiBA,EAC9BuE,MAAQA,GAAiB0P,KAAKJ,UAAUtP,KAG5C8P,MAAO,SACPC,QAAS,WACTxI,QAAS,aAGbyI,iBAAkBA,CAACZ,EAAM/Q,IAEV,gBAAT+Q,EACK,CACLhH,OAAQ,CACN,CACE3M,KAAM,aACNsR,OAAQ,CAAC,MAKViD,EAAAA,EAAAA,IAAiBZ,EAAM/Q,GAEhC4R,iBAAkBA,CAAChZ,EAAOgY,KAExB,GAAmD,eAA/ChY,EAAMmR,OAAOnR,EAAMmR,OAAOpH,OAAS,GAAGvF,KACxC,MAAO,cAGT,OADawU,EAAAA,EAAAA,IAAiBhZ,EAAOgY,IACtB,GAAG,GAItB,OACEvX,EAAAA,EAAAA,KAACwY,EAAAA,EAAa,CAAArY,UACZH,EAAAA,EAAAA,KAACyY,EAAAA,EAAW,CAAAtY,UACVH,EAAAA,EAAAA,KAACsS,GAAcoG,SAAQ,CAACpV,MAAO,CAAE8O,kBArEbA,IAAM+E,GAA0B,GAqEAL,qBAAoB3W,UACtEH,EAAAA,EAAAA,KAAC2Y,EAAAA,GAAc,CAAAxY,UACbH,EAAAA,EAAAA,KAACf,EAAa,CAAAkB,UACZH,EAAAA,EAAAA,KAAC4Y,EAAAA,GAAgB,CAAAzY,UACfH,EAAAA,EAAAA,KAAC6Y,EAAAA,EAAmB,CAClBC,IAAK9B,EACLI,QAASA,EACThG,UAAUpR,EAAAA,EAAAA,KAACqR,EAAAA,EAAgB,IAAIlR,UAE/BU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAO,CAAEsB,KAAM,GAAI1B,SAAA,EACvBH,EAAAA,EAAAA,KAACsR,GAAS,IACT4F,IACClX,EAAAA,EAAAA,KAACuO,EAAAA,EAAa,CACZI,YAAY,EACZoK,eAAgB7B,EAChBzI,QAASqI,EACTpI,WAAW,0BAYnC,G,kHEnHO,MAAM2C,EAAoDA,EAC/DnQ,UAAU,aACV8C,OAAO,QACPgV,cAAa,MAEb,MAAM,OAAE5Y,IAAWC,EAAAA,EAAAA,KAEnB,OACEQ,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CACHC,MAAO,CACLC,EAAOC,UACPuY,GAAcxY,EAAOwY,WACrB,CAAEtY,gBAAiBN,EAAOO,WAAWC,UACrCT,SAAA,EAEFH,EAAAA,EAAAA,KAACqH,EAAAA,EAAiB,CAACrD,KAAMA,EAAM/C,MAAOb,EAAOQ,UAC5CM,IACClB,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOU,QAAS,CAAED,MAAOb,EAAOe,KAAKC,YAAajB,SAC7De,MAGA,EAILV,EAASmB,EAAAA,EAAWC,OAAO,CAC/BnB,UAAW,CACTuB,QAASC,EAAAA,EAAQC,MACjBJ,WAAY,SACZC,eAAgB,UAElBiX,WAAY,CACVnX,KAAM,GAERX,QAAS,CACPkC,UAAWnB,EAAAA,EAAQO,OACnBH,SAAU,GACVI,UAAW,W,4OCZR,MAAM8L,EAA8CA,EACzDC,gBAAgB,GAChBC,UACAC,aAAa,OACbC,cAAa,EACboK,iBACAE,wBAAuB,EACvBC,oBAEA,MAAM,OAAE9Y,IAAWC,EAAAA,EAAAA,MACb,MAAE+B,IAAUqP,EAAAA,EAAAA,KACZC,EAAWtP,EAAQuP,EAAAA,GACnBJ,GAAaC,EAAAA,EAAAA,OACb,iBAAE2H,IAAqBlQ,EAAAA,EAAAA,MAEtBmQ,EAAwBC,IAA6B1T,EAAAA,EAAAA,WAAUgJ,GAChE2K,OAAkCnB,IAAnBY,EAA+BA,EAAiBK,GAE9DrV,EAAMwV,IAAW5T,EAAAA,EAAAA,UAAS,KAC1B6T,EAAaC,IAAkB9T,EAAAA,EAAAA,UAAS,KACxC+T,EAAUC,IAAehU,EAAAA,EAAAA,WAAS,IAClC8C,EAAWC,IAAgB/C,EAAAA,EAAAA,UAA2B+I,IACtDkL,EAAiBC,IAAsBlU,EAAAA,EAAAA,UAAwB,OAC/DmU,EAAaC,IAAkBpU,EAAAA,EAAAA,UAAS,KAEzC,QACJqU,EAAO,UACPvU,EAAS,MACThG,EAAK,aACLwa,EAAY,aACZC,EAAY,cACZC,EAAa,aACbC,IACEC,EAAAA,EAAAA,KA+GEC,EAAmBzU,UACvB,GAAK+T,GAAoBE,EAAYS,OAErC,UACwBH,EAAaR,EAAiB,CAAE7V,KAAM+V,EAAYS,YAEtEC,EAAAA,EAAAA,IAAYC,EAAAA,GAAiBC,cAAe,CAC1CxC,SAAU0B,EACVe,OAAQ,WAGU,QAAhB5X,EAAAA,EAASC,GACXmD,OAAOe,MAAM,+BAEbD,EAAAA,EAAMC,MAAM,UAAW,+BAEzB2S,EAAmB,MACnBE,EAAe,IACfI,IAEJ,CAAE,MAAO1a,GAEPwH,EAAAA,EAAMC,MAAM,QAAS,0BACvB,GAGI0T,GAAgBvK,GAChBA,EAAO2F,UAAYlM,MAAMmM,QAAQ5F,EAAO2F,UACjC3F,EAAO2F,SAAS1M,OAEpB,EA+KHxI,IACJD,EAAAA,EAAAA,MAAAyG,EAAAA,SAAA,CAAAnH,SAAA,EACEU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAO,CAACC,EAAOqK,YAAa,CAAEC,kBAAmB1K,EAAOiF,SAAUlF,SAAA,EACtEH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOuK,WAAY,CAAE9J,MAAOb,EAAOe,KAAKP,UAAWT,SAAC,mBAGjEsO,IACCzO,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CAACE,QAASkN,EAAQtO,SAChB,QAAhB4C,EAAAA,EAASC,IACRhD,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAAE8B,SAAU,GAAIpB,MAAOb,EAAOe,KAAKP,SAAUT,SAAC,UAE3DH,EAAAA,EAAAA,KAAC8D,EAAAA,EAAQ,CAACC,KAAK,QAAQC,KAAM,GAAI/C,MAAOb,EAAOe,KAAKP,eAM3D4N,EAAclF,OAAS,IACtBzI,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAO,CAACC,EAAOqa,aAAc,CAAE/P,kBAAmB1K,EAAOiF,SAAUlF,SAAA,EACvEH,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CACfd,MAAO,CACLC,EAAO0K,IACO,SAAdzC,GAAwB,CACtBjI,EAAOiI,UACP,CAAEqC,kBAAmB1K,EAAOQ,WAGhCW,QAASA,IAAMmH,EAAa,QAAQvI,UAEpCH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CACHR,MAAO,CACLC,EAAO2K,QACP,CAAElK,MAAqB,SAAdwH,EAAuBrI,EAAOQ,QAAUR,EAAOe,KAAKC,YAC7DjB,SACH,mBAIHH,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CACfd,MAAO,CACLC,EAAO0K,IACO,UAAdzC,GAAyB,CACvBjI,EAAOiI,UACP,CAAEqC,kBAAmB1K,EAAOQ,WAGhCW,QAASA,IAAMmH,EAAa,SAASvI,UAErCH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CACHR,MAAO,CACLC,EAAO2K,QACP,CAAElK,MAAqB,UAAdwH,EAAwBrI,EAAOQ,QAAUR,EAAOe,KAAKC,YAC9DjB,SACH,wBAOPH,EAAAA,EAAAA,KAACyL,EAAAA,EAAU,CAAClL,MAAOC,EAAOsa,UAAU3a,SACnB,SAAdsI,GAAwB+F,EAAclF,OAAS,GAC9CzI,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOua,KAAK5a,SAAA,EACvBU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOwa,UAAU7a,SAAA,EAC5BH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOyM,MAAO,CAAEhM,MAAOb,EAAOe,KAAKC,YAAajB,SAAC,UAG/DH,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACR1D,MAAO,CACLC,EAAO0D,MACP,CACEjD,MAAOb,EAAOe,KAAKP,QACnBuM,YAAa/M,EAAOiF,OACpB3E,gBAAiBN,EAAOO,WAAWS,YAGvCkC,MAAOS,EACPR,aAAcgW,EACd9V,YAAY,oBACZW,qBAAsBhE,EAAOe,KAAKkD,eAItCxD,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOwa,UAAU7a,SAAA,EAC5BH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOyM,MAAO,CAAEhM,MAAOb,EAAOe,KAAKC,YAAajB,SAAC,4BAG/DH,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACR1D,MAAO,CACLC,EAAO0D,MACP1D,EAAOya,SACP,CACEha,MAAOb,EAAOe,KAAKP,QACnBuM,YAAa/M,EAAOiF,OACpB3E,gBAAiBN,EAAOO,WAAWS,YAGvCkC,MAAOkW,EACPjW,aAAckW,EACdhW,YAAY,oBACZW,qBAAsBhE,EAAOe,KAAKkD,SAClC6W,WAAS,EACTC,cAAe,QAInBta,EAAAA,EAAAA,MAACQ,EAAAA,EAAgB,CACfd,MAAOC,EAAO4a,aACd7Z,QAASA,IAAMoY,GAAaD,GAAUvZ,SAAA,CAErB,QAAhB4C,EAAAA,EAASC,IACRhD,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CACX8B,SAAU,GACVpB,MAAOyY,EAAWtZ,EAAOQ,QAAUR,EAAOe,KAAKC,UAC/CqG,YAAa,GACbtH,SACCuZ,EAAW,SAAM,YAGpB1Z,EAAAA,EAAAA,KAAC8D,EAAAA,EAAQ,CACPC,KAAM2V,EAAW,WAAa,iBAC9B1V,KAAM,GACN/C,MAAOyY,EAAWtZ,EAAOQ,QAAUR,EAAOe,KAAKC,aAGnDpB,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAO6a,iBAAkB,CAAEpa,MAAOb,EAAOe,KAAKP,UAAWT,SAAC,gCAK1EH,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CACfd,MAAO,CACLC,EAAO8a,aACP,CAAE5a,gBAAiBN,EAAOQ,UAE5BW,QAjcesE,UACzB,GAAK9B,EAAKwW,OASV,IACE,MAAMgB,QAAetB,EAAa,CAChClW,KAAMA,EAAKwW,OACXf,YAAaA,EAAYe,OACzBjS,MAAOkG,EACPgN,UAAW9B,IAGb,IAAI6B,EAkBF,MAAM,IAAIxV,MAAM,iDAjBhByU,EAAAA,EAAAA,IAAYC,EAAAA,GAAiBgB,YAAa,CACxCC,UAAWlN,EAAclF,OACzBoQ,aAGkB,QAAhB3W,EAAAA,EAASC,GACXmD,OAAOe,MAAM,6BAEbD,EAAAA,EAAMC,MAAM,UAAW,6BAEzBqS,EAAQ,IACRE,EAAe,IACfE,GAAY,GACZN,GAA0B,GAC1B5K,MACAyK,IAAgBqC,EAAOxO,GAAIwO,EAAOxX,KAItC,CAAE,MAAOtE,GAEa,QAAhBsD,EAAAA,EAASC,GACXmD,OAAOe,MAAM,0BAA0BzH,aAAiBsG,MAAQtG,EAAMyB,QAAU,mBAEhF+F,EAAAA,EAAMC,MAAM,QAAS,0BAA0BzH,aAAiBsG,MAAQtG,EAAMyB,QAAU,kBAE5F,KA3CsB,QAAhB6B,EAAAA,EAASC,GACXmD,OAAOe,MAAM,uCAEbD,EAAAA,EAAMC,MAAM,QAAS,sCAwCzB,EAoZsC/G,UAE5BH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOgB,WAAY,CAAEP,MAAOb,EAAOe,KAAKM,UAAWtB,SAAC,sBAMtEH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,EAAOmb,WAAWxb,SA1TjCsF,GAEAzF,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,EAAOob,cAAczb,UAChCH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOU,QAAS,CAAED,MAAOb,EAAOe,KAAKC,YAAajB,SAAC,yBAOnEV,GAEAO,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,EAAOob,cAAczb,UAChCH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOU,QAAS,CAAED,MAAOb,EAAOX,QAASU,SACpDV,MAMc,IAAnBua,EAAQ1Q,QAERtJ,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,MAAOC,EAAOob,cAAczb,UAChCH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOU,QAAS,CAAED,MAAOb,EAAOe,KAAKC,YAAajB,SAAC,2BAOhE6Z,EAAQ5N,KAAKiE,IAEhBxP,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAEHC,MAAO,CACLC,EAAOqb,WACP,CAAE/Q,kBAAmB1K,EAAOiF,SAC5BlF,SAAA,EAEFH,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CACfd,MAAOC,EAAOsb,WACdva,QAASA,IAhGO8O,KAExBgJ,GAA0B,GAC1B5K,MAGA0K,EAAiB,IAGjB5H,EAAWiB,SAAS,SAAU,CAC1B0F,SAAU7H,EAAOtD,GACjBgL,WAAY1H,EAAOtM,KACnBiS,SAAU3F,EAAO2F,UAAY,IAC/B,EAmFqB+F,CAAiB1L,GAAQlQ,SAEvCyZ,IAAoBvJ,EAAOtD,IAC1BlM,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAOwb,gBAAgB7b,SAAA,EAClCH,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACR1D,MAAO,CACLC,EAAOyb,YACP,CACEhb,MAAOb,EAAOe,KAAKP,QACnBuM,YAAa/M,EAAOiF,OACpB3E,gBAAiBN,EAAOO,WAAWS,YAGvCkC,MAAOwW,EACPvW,aAAcwW,EACdtW,YAAY,iBACZW,qBAAsBhE,EAAOe,KAAKkD,SAClCX,WAAS,KAEX1D,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CACfd,MAAO,CAACC,EAAO0b,aAAc,CAAExb,gBAAiBN,EAAOX,QACvD8B,QAASA,KACPsY,EAAmB,MACnBE,EAAe,GAAG,EAClB5Z,UAEFH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAO2b,iBAAkB,CAAElb,MAAOb,EAAOe,KAAKM,UAAWtB,SAAC,cAE1EH,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CACfd,MAAO,CAACC,EAAO0b,aAAc,CAAExb,gBAAiBN,EAAOQ,UACvDW,QAAS+Y,EAAiBna,UAE1BH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAO2b,iBAAkB,CAAElb,MAAOb,EAAOe,KAAKM,UAAWtB,SAAC,eAI5EU,EAAAA,EAAAA,MAAAyG,EAAAA,SAAA,CAAAnH,SAAA,EACEU,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACC,MAAOC,EAAO4b,oBAAoBjc,SAAA,EACtCH,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOuX,WAAY,CAAE9W,MAAOb,EAAOe,KAAKP,UAAWT,SAC9DkQ,EAAOtM,QAEV/D,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CACfE,QAASA,IA1HA8O,KACzBwJ,EAAmBxJ,EAAOtD,IAC1BgN,EAAe1J,EAAOtM,KAAK,EAwHIsY,CAAkBhM,GACjC9P,MAAOC,EAAO8b,WAAWnc,SAER,QAAhB4C,EAAAA,EAASC,IACRhD,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAAEU,MAAOb,EAAOe,KAAKC,WAAYjB,SAAC,YAE/CH,EAAAA,EAAAA,KAAC8D,EAAAA,EAAQ,CAACC,KAAK,SAASC,KAAM,GAAI/C,MAAOb,EAAOe,KAAKC,iBAI1DiP,EAAOmJ,cACNxZ,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAO+b,kBAAmB,CAAEtb,MAAOb,EAAOe,KAAKC,YAAajB,SACvEkQ,EAAOmJ,eAGZ3Y,EAAAA,EAAAA,MAACE,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOgc,WAAY,CAAEvb,MAAOb,EAAOe,KAAKkD,WAAYlE,SAAA,CAC/Dya,GAAavK,GAAQ,iBAAU,IAAIoM,KAAKpM,EAAOqM,YAAYC,qBAC3DtM,EAAOmL,WAAa,yBAKZ,QAAhBzY,EAAAA,EAASC,IACRhD,EAAAA,EAAAA,KAAA,UACE0M,KAAK,SACLkQ,QAASA,KACP,IACoBzW,OAAO0W,QAAQ,+EAE/B3C,EAAa7J,EAAOtD,IAAI+P,MAAKC,IACvBA,EACF5C,IAEAhU,OAAOe,MAAM,0BACf,IACC8V,OAAMvd,IAEP0G,OAAOe,MAAM,wBAAwB,GAG3C,CAAE,MAAOzH,GAEP0G,OAAOe,MAAM,4BACf,GAEF3G,MAAO,CACLyB,QAAS,MACTuN,YAAa,MACb0N,YAAa,QACb9P,YAAa/M,EAAOX,MACpBqD,aAAc,MACd6E,SAAU,OACVjH,gBAAiBN,EAAOO,WAAWC,QACnCqC,OAAQ,UACRhC,MAAOb,EAAOX,MACd6C,WAAY,MACZD,SAAU,OACV6a,QAAS,OACTpb,WAAY,SACZC,eAAgB,SAChB2U,OAAQ,GACR9H,SAAU,WACVuO,cAAe,QACfhd,SACH,YAIDH,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CACfd,MAAO,CACLC,EAAO4c,aACP,CACEjQ,YAAa/M,EAAOX,MACpBiB,gBAAiBN,EAAOO,WAAWC,UAGvCW,QAASA,KA9PMsE,WACzB,IAqBE,UApB4B,IAAIwX,SAAkBC,IAChDrW,EAAAA,EAAMC,MACJ,gBACA,6EACA,CACE,CACE/F,KAAM,SACNZ,MAAO,SACPgB,QAASA,IAAM+b,GAAQ,IAEzB,CACEnc,KAAM,SACNZ,MAAO,cACPgB,QAASA,IAAM+b,GAAQ,KAG3B,CAAEC,YAAY,GACf,IAGiB,aAEErD,EAAahC,KAGjCsC,EAAAA,EAAAA,IAAYC,EAAAA,GAAiB+C,cAAe,CAC1CtF,aAEFjR,EAAAA,EAAMC,MAAM,UAAW,gCAEvBD,EAAAA,EAAMC,MAAM,QAAS,6CAEzB,CAAE,MAAOzH,GAEPwH,EAAAA,EAAMC,MAAM,QAAS,kDACvB,GA0NYuW,CAAmBpN,EAAOtD,GAAG,EAC7B5M,UAEFH,EAAAA,EAAAA,KAAC8D,EAAAA,EAAQ,CAACC,KAAK,gBAAgBC,KAAM,GAAI/C,MAAOb,EAAOX,YAlItD4Q,EAAOtD,aAiSpB,OAAI4B,EACK7N,IAIPD,EAAAA,EAAAA,MAAAyG,EAAAA,SAAA,CAAAnH,SAAA,CACGqO,EAAclF,OAAS,IAAMqF,IAAeoK,IAAmBE,IAC9DpY,EAAAA,EAAAA,MAACQ,EAAAA,EAAgB,CACfd,MAAO,CACLC,EAAOkd,WACP,CAAEhd,gBAAiBN,EAAOQ,UAE5BW,QAASA,IAAM8X,GAA0B,GAAMlZ,SAAA,CAE9B,QAAhB4C,EAAAA,EAASC,IACRhD,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAAE8B,SAAU,GAAIpB,MAAOb,EAAOe,KAAKM,QAASgG,YAAa,GAAItH,SAAC,OAE3EH,EAAAA,EAAAA,KAAC8D,EAAAA,EAAQ,CAACC,KAAK,mBAAmBC,KAAM,GAAI/C,MAAOb,EAAOe,KAAKM,WAEjEzB,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACR,MAAO,CAACC,EAAOgB,WAAY,CAAEP,MAAOb,EAAOe,KAAKM,UAAWtB,SAAC,oBAKtEH,EAAAA,EAAAA,KAACoK,EAAAA,EAAK,CACJC,QAASiP,EACThP,aAAW,EACXC,cAAc,OACdC,eAAgBA,KACd6O,GAA0B,GAC1B5K,KAAW,EACXtO,UAEFH,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CACfd,MAAO,CACLC,EAAOiK,aACPkE,GAAcnO,EAAOmd,mBAEvBC,cAAe,EACfrc,QAASA,KACP8X,GAA0B,GAC1B5K,KAAW,EACXtO,UAEFH,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CACfd,MAAO,CACLC,EAAOkK,aACP,CAAEhK,gBAAiBN,EAAOO,WAAWC,SACrC8Q,GAAYlR,EAAOqd,oBAErBD,cAAe,EACfrc,QAAUoJ,IACRA,EAAEmT,iBACFnT,EAAEC,iBAAiB,EACnBzK,SAEDW,WAIN,EAIDN,EAASmB,EAAAA,EAAWC,OAAO,CAC/B8b,WAAUhb,OAAAC,OAAA,CACRqC,cAAe,MACflD,WAAY,SACZC,eAAgB,SAChBa,kBAAmBX,EAAAA,EAAQC,MAC3BW,gBAAiBZ,EAAAA,EAAQO,OACzBM,aAAc,EACdoC,IAAK,EACL6Y,UAAW,GACXpW,SAAU,KACU,QAAhB5E,EAAAA,EAASC,IAAgB,CAC3BC,OAAQ,UACRka,cAAe,OACftG,WAAY,OACZmH,UAAW,gCAGfxc,WAAUkB,OAAAC,OAAA,CACRN,SAAU,GACVC,WAAY,MACZG,UAAW,UACS,QAAhBM,EAAAA,EAASC,IAAgB,CAC3B6T,WAAY,SAGhBpM,aAAY/H,OAAAC,OAAA,CACViM,SAAU,WACVqP,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACR1d,gBAAiB,qBACjBqB,eAAgB,SAChBD,WAAY,SACZE,QAAS+R,EAAAA,GACT2C,OAAQ,KACY,QAAhB3T,EAAAA,EAASC,IAAgB,CAC3B4L,SAAU,WACVuO,cAAe,SAGnBzS,aAAYhI,OAAAC,OAAA,CACVP,MAAO,OACPD,SAAU,IACVW,aAAc,GACdgM,UAAW,MACX4H,OAAQ,MACY,QAAhB3T,EAAAA,EAASC,IAAgB,CAC3Bma,cAAe,OACftG,WAAY,SAGhBgH,mBAAoB,CAClB1b,SAAU,QAEZ0I,YAAa,CACX7F,cAAe,MACfjD,eAAgB,gBAChBD,WAAY,SACZE,QAASC,EAAAA,EAAQC,MACjB8M,kBAAmB,GAErBjE,WAAY,CACV1I,SAAU,GACVC,WAAY,OAEdwY,UAAW,CACTjZ,KAAM,GAERgZ,aAAc,CACZ7V,cAAe,MACfgK,kBAAmB,GAErB9D,IAAK,CACHrJ,KAAM,EACNgB,gBAAiBZ,EAAAA,EAAQO,OACzBV,WAAY,UAEd2G,UAAW,CACTuG,kBAAmB,GAErB7D,QAAS,CACP9I,SAAU,GACVC,WAAY,OAEdyY,KAAM,CACJ/Y,QAASC,EAAAA,EAAQC,OAEnB8Y,UAAW,CACTzY,aAAcN,EAAAA,EAAQC,OAExB+K,MAAO,CACL5K,SAAU,GACVE,aAAcN,EAAAA,EAAQkD,OAExBjB,MAAKxB,OAAAC,OAAA,CACHsC,OAAQ,GACRsK,YAAa,EACbzM,aAAc,EACdF,kBAAmBX,EAAAA,EAAQO,OAC3BH,SAAU,IACU,QAAhBU,EAAAA,EAASC,IAAgB,CAC3BoC,aAAc,SAGlB6V,SAAU,CACRhW,OAAQ,GACRoZ,WAAYpc,EAAAA,EAAQO,OACpB8b,kBAAmB,OAErBlD,aAAc,CACZpW,cAAe,MACflD,WAAY,SACZoD,IAAKjD,EAAAA,EAAQkD,MACb5C,aAAcN,EAAAA,EAAQC,OAExBmZ,iBAAkB,CAChBhZ,SAAU,IAEZiZ,aAAc,CACZzY,gBAAiBZ,EAAAA,EAAQO,OACzBM,aAAc,EACdhB,WAAY,UAEd6Z,WAAY,CACV3Z,QAASC,EAAAA,EAAQC,OAEnB2Z,WAAY,CACV7W,cAAe,MACfjD,eAAgB,gBAChBD,WAAY,SACZe,gBAAiBZ,EAAAA,EAAQO,OACzBwM,kBAAmB,GAErB8M,WAAUpZ,OAAAC,OAAA,CACRd,KAAM,EACN4F,YAAaxF,EAAAA,EAAQO,QACD,QAAhBO,EAAAA,EAASC,IAAgB,CAC3BC,OAAQ,YAGZ8U,WAAY,CACV1V,SAAU,GACVC,WAAY,MACZC,aAAc,GAEhBga,kBAAmB,CACjBla,SAAU,GACVE,aAAc,GAEhBia,WAAY,CACVna,SAAU,IAEZ+a,aAAY1a,OAAAC,OAAA,CACVX,QAASC,EAAAA,EAAQkD,MACjBoK,YAAa,EACbzM,aAAc,EACd6E,SAA0B,QAAhB5E,EAAAA,EAASC,GAAe,GAAK,GACvClB,WAAY,SACZC,eAAgB,SAChB2U,OAAQ,IACY,QAAhB3T,EAAAA,EAASC,IAAgB,CAC3BC,OAAQ,UACRka,cAAe,OACftG,WAAY,OACZjI,SAAU,aAGd2P,WAAY,CACVlc,SAAU,GACVC,WAAY,OAEdsZ,cAAe,CACb5Z,QAASC,EAAAA,EAAQC,MACjBJ,WAAY,UAEdZ,QAAS,CACPmB,SAAU,IAEZsb,kBAAmB,CACjB/O,SAAU,WACVlO,gBAAiB,eAEnBsb,gBAAiB,CACfhX,cAAe,MACflD,WAAY,SACZoD,IAAKjD,EAAAA,EAAQkD,OAEf8W,YAAa,CACXpa,KAAM,EACNoD,OAAQ,GACRsK,YAAa,EACbzM,aAAc,EACdF,kBAAmBX,EAAAA,EAAQkD,MAC3B9C,SAAU,IAEZ6Z,aAAc,CACZtZ,kBAAmBX,EAAAA,EAAQO,OAC3BK,gBAAiBZ,EAAAA,EAAQkD,MACzBrC,aAAc,GAEhBqZ,iBAAkB,CAChB9Z,SAAU,GACVC,WAAY,OAEd8Z,oBAAqB,CACnBpX,cAAe,MACflD,WAAY,SACZoD,IAAKjD,EAAAA,EAAQkD,OAEfmX,WAAU5Z,OAAAC,OAAA,CACRX,QAASC,EAAAA,EAAQkD,OACG,QAAhBpC,EAAAA,EAASC,IAAgB,CAC3BC,OAAQ,a,0DCpyBd,MAAMub,EAAmBC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,aAAAA,CAAAA,KAAAA,aAAAA,KAAAA,aAAAA,QAAAA,QAAAA,YAAAA,WAAAA,KAAAA,oBAAAA,mBAAAA,QAAAA,OAAAA,CAAAA,MAAAA,2BAAAA,WAAAA,UAAAA,gBAAAA,WAAAA,IAAAA,CAAAA,EAAAA,MAAAA,CAAAA,WAAAA,CAAAA,QAAAA,0BAAAA,QAAAA,CAAAA,QAAAA,mCAAAA,WAAAA,SAAAA,UAAAA,CAAAA,MAAAA,UAAAA,QAAAA,YAAAA,EAAAA,SAAAA,MAAAA,gBAAAA,aAAYC,iBAAkC,cAEjEC,EAAkD,CACtDC,YAAa,CACXC,OAAQ,wBACRpO,OAAQ,yBACRqO,UAAW,kBAEbC,QAAS,CACPF,OAAQ,qCACRpO,OAAQ,iCACRqO,UAAW,sBAEbE,WAAY,CACVH,OAAQ,6BACRpO,OAAQ,yBACRqO,UAAW,eAIFtO,EAAuBA,IAC3BmO,EAAQH,GAGJlH,EAAcA,KACzB,MAAMC,EAAS/G,IACf,MAAoB,QAAhBzN,EAAAA,EAASC,GACJ,CAACuU,EAAO9G,QAEV,CAAC,GAAG8G,EAAOuH,eAAe,C,gFCtC5B,MAAM/K,EAAoB,GAEpBpC,EAAoB,IAGpBsN,EAAgB,CAC3BrV,MAAO,IACPL,OAAQ,IACR2V,MAAO,IACPC,KAAM,GACNC,SAAU,GACV7Z,YAAa,GACbmH,KAAM,GACN2S,MAAO,IACPC,KAAM,IAUK7L,EAA4B,CACvC,CAAE1G,GAAI,QAASE,MAAO,QAAS1B,WAAW,GAC1C,CAAEwB,GAAI,SAAUE,MAAO,SAAU1B,WAAW,GAC5C,CAAEwB,GAAI,QAASE,MAAO,QAAS1B,WAAW,GAC1C,CAAEwB,GAAI,OAAQE,MAAO,OAAQ1B,WAAW,GACxC,CAAEwB,GAAI,WAAYE,MAAO,OAAQ1B,WAAW,GAC5C,CAAEwB,GAAI,cAAeE,MAAO,KAAM1B,WAAW,GAC7C,CAAEwB,GAAI,OAAQE,MAAO,OAAQ1B,WAAW,GACxC,CAAEwB,GAAI,QAASE,MAAO,QAAS1B,WAAW,GAC1C,CAAEwB,GAAI,OAAQE,MAAO,OAAQ1B,WAAW,IAI7BoI,EAAiBxL,GACrBA,EAAQoX,QAAO,CAACC,EAAO3S,IACxBA,EAAOtB,UACFiU,GAASP,EAAcpS,EAAOE,KAAO,KAEvCyS,GACN,GAGQ5L,EAAkBA,CAACF,EAAoB+L,EAAqB/N,IACnEA,EACK+N,EAEF5L,KAAKC,IAAIJ,EAAY+L,EAAc,G,+FChB5C,MAAMC,GAAaC,EAAAA,EAAAA,oBAA0CxH,GAEhDM,EAAuDA,EAAGtY,eAErE,MAAO4I,EAAS6W,IAAcja,EAAAA,EAAAA,UAAyB,OAChDqD,EAAM6W,IAAWla,EAAAA,EAAAA,UAAsB,OAGvCkM,EAAaC,IAAkBnM,EAAAA,EAAAA,UAAS,KAGxCoM,EAASC,IAAcrM,EAAAA,EAAAA,UAAwB,CACpDwG,OAAQ,GACR5C,OAAQ,GACRmD,KAAM,MAIDvE,EAAS8J,IAActM,EAAAA,EAAAA,UAAmB8N,EAAAA,KAG1CjF,EAAe2K,IAAoBxT,EAAAA,EAAAA,UAAwB,KAG3Dma,EAAe5N,IAAoBvM,EAAAA,EAAAA,UAAwB,OAGlEqO,EAAAA,EAAAA,YAAU,KAERzN,EAAAA,EAASC,KAAKuZ,aAAajD,MAAK,EAAGhX,MAAQiD,eAEzC6W,EAAW7W,GACX8W,EAAQ9W,GAASC,MAAQ,KAAK,IAIhC,MAAQlD,MAAM,aAAEka,IAAmBzZ,EAAAA,EAASC,KAAKyZ,mBAAkB,CAACC,EAAQnX,KAE1E6W,EAAW7W,GACX8W,EAAQ9W,GAASC,MAAQ,KAAK,IAGhC,MAAO,IAAMgX,EAAaG,aAAa,GACtC,KAGHnM,EAAAA,EAAAA,YAAU,KACkBnO,WACxB,IACE,MAAMwO,QAAqBC,EAAAA,EAAAA,MACvBD,GACFrC,EAAW,CACT7F,OAAQkI,EAAalI,QAAU,GAC/B5C,OAAQ8K,EAAa9K,QAAU,GAC/BmD,KAAM2H,EAAa5H,OAAS,KAIhC,MAAMwH,QAAqBC,EAAAA,EAAAA,MACvBD,GAAgBnK,MAAMmM,QAAQhC,IAChChC,EAAWgC,EAAa7H,KAAKd,GAAoB5I,OAAAC,OAAA,GAC5C8Q,EAAAA,GAAgB2M,MAAKC,GAAcA,EAAWtT,KAAOzB,EAAIyB,KACzDzB,KAGT,CAAE,MAAO7L,GAET,GAGF8U,EAAmB,GAClB,KAGHP,EAAAA,EAAAA,YAAU,MACRsM,EAAAA,EAAAA,IAAY,CACVnU,OAAQ4F,EAAQ5F,OAChB5C,OAAQwI,EAAQxI,OAChBkD,MAAOsF,EAAQrF,MACf,GACD,CAACqF,KAGJiC,EAAAA,EAAAA,YAAU,KACJ8L,GACF9N,EAAW,CAAE7F,OAAQ,GAAI5C,OAAQ,GAAImD,KAAM,IAC7C,GACC,CAACoT,IAEJ,MAAMxc,EAAQ,CACZyF,UACAC,OACA6I,cACAC,iBACAC,UACAC,aACA7J,UACA8J,aACAzD,gBACA2K,mBACA2G,gBACA5N,oBAGF,OACElS,EAAAA,EAAAA,KAAC0f,EAAWhH,SAAQ,CAACpV,MAAOA,EAAMnD,SAC/BA,GACmB,EAIb8I,EAASA,KACpB,MAAMsX,GAAUlO,EAAAA,EAAAA,YAAWqN,GAC3B,QAAgBvH,IAAZoI,EACF,MAAM,IAAIxa,MAAM,6CAElB,OAAOwa,CAAO,C,gDClJT,SAASpO,EAAiB7J,EAAsByJ,GACrD,MAAMlK,GAAgBwB,EAAAA,EAAAA,UAAQ,KAC5B,MAAM8C,EAASrC,MAAMC,KAAK,IAAIN,IAAInB,EAAM8D,KAAIzC,GAAQA,EAAKC,UAASI,OAG5DwW,ECIH,SAA2BlY,GAChC,OAAOA,EAAMiX,QAAO,CAACkB,EAAK9W,KACnB8W,EAAI9W,EAAKC,SACZ6W,EAAI9W,EAAKC,OAAS,IAEpB6W,EAAI9W,EAAKC,OAAO8W,KAAK/W,GACd8W,IACN,CAAC,EACN,CDZyBE,CAAkBrY,GAGvC,IAAIc,EAA4B,GAChC,GAA8B,IAA1B2I,EAAQ5F,OAAO7C,OAEjBF,EAAkBU,MAAMC,KAAK,IAAIN,IAAInB,EAAM8D,KAAIzC,GAAQA,EAAKJ,WAAUS,WACjE,CAEL,MAAM4W,EAAgB7O,EAAQ5F,OAAO0U,SAAQjX,GAAS4W,EAAa5W,IAAU,KAC7ER,EAAkBU,MAAMC,KAAK,IAAIN,IAAImX,EAAcxU,KAAIzC,GAAQA,EAAKJ,WAAUS,MAChF,CAIA,MAAO,CAAEmC,SAAQ5C,OAAQH,EAAiBqD,MAF5B,CAAC,QAAS,QAEyB,GAChD,CAACnE,EAAOyJ,EAAQ5F,SAYnB,MAAO,CACLyU,eAXoBvX,EAAAA,EAAAA,UAAQ,IACrBf,EAAM6K,QAAOxJ,IAClB,MAAMmX,EAAuC,IAA1B/O,EAAQ5F,OAAO7C,QAAgByI,EAAQ5F,OAAO7F,SAASqD,EAAKC,OACzEmX,EAAwC,IAA1BhP,EAAQxI,OAAOD,QAAgByI,EAAQxI,OAAOjD,SAASqD,EAAKJ,QAC1EyX,EAAoC,IAAxBjP,EAAQrF,KAAKpD,QAAgByI,EAAQrF,KAAKpG,SAASqD,EAAK+C,MAE1E,OAAOoU,GAAcC,GAAeC,CAAS,KAE9C,CAAC1Y,EAAOyJ,EAAQ5F,OAAQ4F,EAAQxI,OAAQwI,EAAQrF,OAIjD7E,gBAEJ,C,mEEtCO,MAAMoZ,EACX,aAAuC,QAAhBle,EAAAA,EAASC,GAChC,iBAA2B,mBAC3B,iBAA2B,SAG3B,iBAAeke,GAIb,MAEI,wBACN,CAEA,2BAAaC,GACX,IACE,GAAI7hB,KAAK8hB,MAAO,CACd,MAAMC,EAAU/hB,KAAK4hB,aAGrB,IACE,MAAMI,QAAiBC,MAAM,GAAGF,IAAU/hB,KAAKkiB,aAC/C,GAAIF,EAASG,GAAI,CAGf,aAFuBH,EAASI,MAGlC,CAGF,CAAE,MAAOjiB,GAET,CAGA,IAEE,MAAM0M,EAAS,CAAC,YAAa,aAAc,aAAc,aAAc,WAAY,YAC7EwV,EAA6B,GAEnC,IAAK,MAAM/X,KAASuC,EAClB,IACE,MAAMmV,QAAiBC,MAAM,GAAGF,KAAW/hB,KAAKsiB,aAAahY,UAC7D,GAAI0X,EAASG,GAAI,CACf,MAAMI,QAAiBP,EAASI,OAEhCC,EAAYjB,QAAQmB,EACtB,CACF,CAAE,MAAOpiB,GAET,CAGF,GAAIkiB,EAAYrY,OAAS,EACvB,OAAOqY,CAEX,CAAE,MAAOliB,GAET,CACF,KAAO,CAEL,MAAMqiB,QAAeC,EAAAA,EAAaC,QAAQ,SAC1C,GAAIF,EAAQ,CAGV,OAFiB9J,KAAKL,MAAMmK,EAG9B,CACF,CACF,CAAE,MAAOriB,GAET,CAGA,MAAO,EACT,EC1EK,SAASmS,IACd,MAAOtJ,EAAO2Z,IAAYtc,EAAAA,EAAAA,UAAwB,KAC3Cuc,EAASC,IAAcxc,EAAAA,EAAAA,WAAS,IAChClG,EAAO2iB,IAAYzc,EAAAA,EAAAA,UAAwB,MAE5C0c,EAAYxc,UAChB,IACEsc,GAAW,GACXC,EAAS,MACT,MAAMP,QAAiBZ,EAAeE,iBACtCc,EAASJ,EACX,CAAE,MAAOS,GACPF,EAASE,aAAevc,MAAQuc,EAAIphB,QAAU,uBAEhD,CAAC,QACCihB,GAAW,EACb,IAGFnO,EAAAA,EAAAA,YAAU,KACRqO,GAAW,GACV,IAMH,MAAO,CACL/Z,QACA4Z,UACAziB,QACA8iB,aARmBA,KACnBF,GAAW,EASf,C,iGC3BA,MAAMG,EACK,sBAILC,EAAiBA,IAEjBtc,OAAOC,SAASC,SAASC,SAAS,WAAmB,UAClD,OAIHoc,EAAeA,IAEZ,GADKD,cAKRE,EACK9c,SACa,QAAhB9C,EAAAA,EAASC,GACJ4f,aAAaZ,QAAQa,GAEvBd,EAAAA,EAAaC,QAAQa,GAL1BF,EAOK9c,MAAOgd,EAAavf,KAC3B,GAAoB,QAAhBP,EAAAA,EAASC,GAIb,OAAO+e,EAAAA,EAAae,QAAQD,EAAKvf,GAH/Bsf,aAAaE,QAAQD,EAAKvf,EAGW,EAZrCqf,EAcQ9c,UACV,GAAoB,QAAhB9C,EAAAA,EAASC,GAIb,OAAO+e,EAAAA,EAAagB,WAAWF,GAH7BD,aAAaG,WAAWF,EAGS,EAsB1BxI,EAAaA,KACxB,MAAOL,EAASgJ,IAAcrd,EAAAA,EAAAA,UAAmB,KAC1CF,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpClG,EAAO2iB,IAAYzc,EAAAA,EAAAA,UAAwB,MAE5Csd,EAAcpd,UAClB,IACEH,GAAa,GACb0c,EAAS,MACT,MAAQtc,MAAM,QAAEiD,UAAoBxC,EAAAA,EAASC,KAAKuZ,aAElD,GAAIhX,GAASC,KAAM,CACjB,MAAM,KAAElD,EAAMrG,MAAOyjB,SAAwB3c,EAAAA,EAC1CwD,KAAK2Y,KACLS,OAAO,KACPC,GAAG,cAAeX,KAClBW,GAAG,UAAWra,EAAQC,KAAK+D,IAC3BsW,MAAM,aAAc,CAAEC,WAAW,IAEpC,GAAIJ,EAAe,MAAMA,EACzBF,EAAWld,GAAQ,GACrB,KAAO,CACL,MAAMyd,QAAsBZ,EAAgBH,GAE1CQ,EADEO,EACSvL,KAAKL,MAAM4L,GAEX,GAEf,CACF,CAAE,MAAOjB,GAEPF,EAASE,aAAevc,MAAQuc,EAAIphB,QAAU,0BAC9C8hB,EAAW,GACb,CAAC,QACCtd,GAAa,EACf,GAoNF,OAhBAsO,EAAAA,EAAAA,YAAU,KACRiP,IAGA,MAAQnd,MAAM,aAAEka,IAAmBzZ,EAAAA,EAASC,KAAKyZ,mBAAkBpa,UACnD,cAAV2d,QA3CsB3d,WAC5B,IACE,MAAQC,MAAM,QAAEiD,UAAoBxC,EAAAA,EAASC,KAAKuZ,aAClD,IAAKhX,GAASC,KAAM,OAEpB,MAAMya,QAAqBd,EAAgBH,GAC3C,IAAKiB,EAAc,OAEnB,MAAMC,EAAmC1L,KAAKL,MAAM8L,GAC9CE,EAAMlB,IAGZ,IAAK,MAAMpS,KAAUqT,EAAe,CAClC,MAAM1N,EAAW3F,EAAO/H,MAAM8D,KAAIzC,IAAQyM,EAAAA,EAAAA,GAAezM,KACnDia,EAAa,CACjB7f,KAAMsM,EAAOtM,KACbyV,YAAanJ,EAAOmJ,aAAe,GACnCxD,WACAwF,UAAWnL,EAAOmL,YAAa,EAC/BqI,QAAS9a,EAAQC,KAAK+D,GACtB+W,YAAaH,SAETpd,EAAAA,EACHwD,KAAK2Y,KACLqB,OAAO,CAACH,GACb,OAGMjB,EAAmBH,SAGnBS,GACR,CAAE,MAAOX,GAET,GAUU0B,SAEFf,GAAa,IAGrB,MAAO,KACLjD,EAAaG,aAAa,CAC3B,GACA,IAEI,CACLnG,UACAvU,YACAhG,QACAwa,aArNmBpU,UACnB,IACEuc,EAAS,MACT,MAAQtc,MAAM,QAAEiD,UAAoBxC,EAAAA,EAASC,KAAKuZ,aAElD,GAAIhX,GAASC,KAAM,CACjB,MAAMib,EAAYvB,IACZiB,EAAMlB,IAENzM,EAAW9R,EAAMoE,MAAM8D,KAAIzC,IAAQyM,EAAAA,EAAAA,GAAezM,KAElDia,EAAa,CACjB7f,KAAMG,EAAMH,KACZyV,YAAatV,EAAMsV,aAAe,GAClCqK,QAAS9a,EAAQC,KAAK+D,GACtB+W,YAAaH,EACb3N,WACAwF,UAAWtX,EAAMsX,YAAa,IAGxB/b,MAAOykB,SAAsB3d,EAAAA,EAClCwD,KAAKka,GACLF,OAAOH,GAEV,GAAIM,EAOF,MANAC,EAAAA,EAAO1kB,MAAM,gBAAiB,CAC5ByB,QAASgjB,EAAYhjB,QACrBkjB,QAASF,EAAYE,QACrBC,KAAMH,EAAYG,KAClBC,KAAMJ,EAAYI,OAEdJ,EAGR,MAAQpe,KAAMye,EAAS9kB,MAAO+kB,SAAsBje,EAAAA,EACjDwD,KAAKka,GACLd,OAAO,KACPC,GAAG,UAAWra,EAAQC,KAAK+D,IAC3BqW,GAAG,OAAQlf,EAAMH,MACjBsf,MAAM,aAAc,CAAEC,WAAW,IACjCmB,MAAM,GACNC,SAEH,GAAIF,EAAa,MAAMA,EACvB,IAAKD,EAAS,MAAM,IAAIxe,MAAM,qCAE9B,MAAM4e,EAASjiB,OAAAC,OAAA,GACV4hB,EAAQ,CACXjc,MAAOpE,EAAMoE,QAIf,OADA0a,GAAW9P,GAAQ,CAACyR,KAAczR,KAC3ByR,CACT,CAAO,CACL,MAAMhB,EAAMlB,IACNzM,EAAW9R,EAAMoE,MAAM8D,KAAIzC,IAAQyM,EAAAA,EAAAA,GAAezM,KAElDgb,EAAoB,CACxB5X,GAAI6X,OAAOC,aACXhB,QAAS,GACT9f,KAAMG,EAAMH,KACZyV,YAAatV,EAAMsV,aAAe,GAClCxD,WACA8O,YAAY,IAAIrI,MAAOsI,cACvBrI,YAAY,IAAID,MAAOsI,cACvBvJ,UAAWtX,EAAMsX,YAAa,EAC9BsI,YAAaH,GAGTqB,EAAiB,CAACL,KAAc3K,GAGtC,aAFM2I,EAAgBH,EAAsBxK,KAAKJ,UAAUoN,IAC3DhC,EAAWgC,GACJL,CACT,CACF,CAAE,MAAOrC,GAEP,MAAMA,CACR,GAyIAlI,aAtGmBvU,MAAOqS,EAAkB+M,KAC5C7C,EAAS,MACT,IACE,MAAQtc,MAAM,QAAEiD,UAAoBxC,EAAAA,EAASC,KAAKuZ,aAElD,GAAIhX,GAASC,KAAM,CACjB,MAAM,MAAEvJ,SAAgB8G,EAAAA,EACrBwD,KAAK2Y,KACLwC,OAAOD,GACP7B,GAAG,KAAMlL,GAEZ,GAAIzY,EAAO,MAAMA,EAEjB,aADMwjB,KACC,CACT,CAAO,CAEL,MAAMM,QAAsBZ,EAAgBH,GAC5C,IAAKe,EAAe,OAAO,EAE3B,MACMyB,EAD0BhN,KAAKL,MAAM4L,GACNnX,KAAIiE,GACnCA,EAAOtD,KAAOmL,EAChBxV,OAAAC,OAAA,GACK0N,EACA4U,EAAQ,CACXvI,YAAY,IAAID,MAAOsI,gBAGpB1U,IAKT,aAFMsS,EAAgBH,EAAsBxK,KAAKJ,UAAUoN,IAC3DhC,EAAWgC,IACJ,CACT,CACF,CAAE,MAAOvlB,GAGP,OADA2iB,EAAS,4BACF,CACT,GAgEAlI,aAvImBrU,UACnB,IACEuc,EAAS,MACT,MAAQtc,MAAM,QAAEiD,UAAoBxC,EAAAA,EAASC,KAAKuZ,aAElD,GAAIhX,GAASC,KAAM,CACjB,MAAQvJ,MAAOyjB,SAAwB3c,EAAAA,EACpCwD,KAAK2Y,KACLyC,SACA/B,GAAG,KAAMrW,GACTqW,GAAG,UAAWra,EAAQC,KAAK+D,IAC3BqW,GAAG,cAAeX,KAErB,GAAIS,EAAe,MAAMA,CAC3B,CAEA,MAAM8B,EAAiBhL,EAAQ7G,QAAO9C,GAAUA,EAAOtD,KAAOA,IAO9D,OANAiW,EAAWgC,GAENjc,GAASC,YACN2Z,EAAgBH,EAAsBxK,KAAKJ,UAAUoN,KAGtD,CACT,CAAE,MAAO1C,GAGP,OADAF,EAASE,aAAevc,MAAQuc,EAAIphB,QAAU,4BACvC,CACT,GA4GAiZ,cAAe8I,EAChB,C,+FCzTH,MAAMmC,GAAezF,EAAAA,EAAAA,oBAA4CxH,GAE3DkN,EAAoB,oBAEb7M,EAAyDA,EAAGrY,eACvE,MAAMmlB,GAAoBC,EAAAA,EAAAA,MACnB5c,EAAQ6c,IAAa7f,EAAAA,EAAAA,UAAwC,SAAtB2f,IAE9CtR,EAAAA,EAAAA,YAAU,KAEUnO,WAChB,IACE,MAAM4f,QAAmB1D,EAAAA,EAAaC,QAAQqD,GAC3B,OAAfI,GACFD,EAAyB,SAAfC,EAEd,CAAE,MAAOhmB,GAET,GAGFimB,EAAW,GACV,IAEH,MAUMtlB,GAASulB,EAAAA,EAAAA,GAAUhd,EAAS,OAAS,SAE3C,OACE3I,EAAAA,EAAAA,KAAColB,EAAa1M,SAAQ,CAACpV,MAAO,CAAEqF,SAAQvI,SAAQwI,YAb9B/C,UAClB,IACE,MAAM+f,GAAYjd,EAClB6c,EAAUI,SACJ7D,EAAAA,EAAae,QAAQuC,EAAmBO,EAAW,OAAS,QACpE,CAAE,MAAOnmB,GAET,IAM8DU,SAC3DA,GACqB,EAIfE,EAAWA,KACtB,MAAMkgB,GAAUlO,EAAAA,EAAAA,YAAW+S,GAC3B,QAAgBjN,IAAZoI,EACF,MAAM,IAAIxa,MAAM,gDAElB,OAAOwa,CAAO,C,0CCrChB,MAEMsF,EAAc,UAEdC,EAAU,UAGVC,EACA,UADAA,EAGC,UAHDA,EAQC,UARDA,EAUC,UAGDC,EAA2B,CAC/BrlB,WAAY,CACVC,QAASmlB,EACT3kB,UAdG,UAeHiD,SAAU0hB,GAEZ5kB,KAAM,CACJP,QAASmlB,EACT3kB,UAAW2kB,EACX1hB,SAhBG,UAiBH5C,QAASskB,GAEX1gB,OAAQ0gB,EACRnlB,QAASilB,EACTpmB,MAAO,UACPsd,QAAS,UACTkJ,QAASH,GAGLI,EAA0B,CAC9BvlB,WAAY,CACVC,QAASmlB,EACT3kB,UA1BG,UA2BHiD,SAAU0hB,GAEZ5kB,KAAM,CACJP,QAASmlB,EACT3kB,UAAW2kB,EACX1hB,SApCG,UAqCH5C,QAASskB,GAEX1gB,OAAQ0gB,EACRnlB,QAASilB,EACTpmB,MAAO,UACPsd,QAAS,UACTkJ,QAASH,GAGEH,EAAaQ,GACD,SAAhBA,EAAyBD,EAAaF,EAIlC5lB,EAAS4lB,C,kCCrFf,MAAM/jB,EAAU,CACrB4M,OAAQ,EACR1J,MAAO,EACP3C,OAAQ,GACRN,MAAO,GACPkkB,OAAQ,GACRC,QAAS,GAGTtS,kBAAmB,GACnBuS,iBAAkB,GAClBC,iBAAkB,EAClBC,WAAY,GACZC,gBAAiB,GAGjBC,eAAgB,GAChBC,wBAAyB,GACzBC,eAAgB,GAChBC,gBAAiB,GAGjBC,0BAA2B,GAC3BC,2BAA4B,G,mECVvB,MAAMC,EAAcxD,IACL,QAAhBzgB,EAAAA,EAASC,IAAgBmD,OAAO8gB,WAClC9gB,OAAO8gB,UAAUzD,EAAMzf,KAAMyf,EAAMpkB,MAAQ,CAAEA,MAAOokB,EAAMpkB,YAAU+Y,EACtE,EAGW+O,EAAgBA,CAACC,EAAoB/nB,KAChD4nB,EAAW,CACTjjB,KAAM,WACN3E,MAAKsD,OAAAC,OAAA,CACHykB,KAAMD,GACH/nB,IAEL,EAGSob,EAAcA,CAACG,EAAgBvb,KAC1C4nB,EAAW,CACTjjB,KAAM4W,EACNvb,SACA,EAISqb,EAAmB,CAE9B4M,gBAAiB,kBACjBC,YAAa,cAGbC,cAAe,gBACf9L,YAAa,cACb+B,cAAe,gBACf9C,cAAe,gBACf8M,aAAc,eACdC,WAAY,aACZC,aAAc,e,iCCjDT,MAAMtR,EAAkBzM,GACtB,GAAGA,EAAKC,MAAM+d,iBAAiBhe,EAAKuV,MAAMyI,cAAcC,QAAQ,OAAQ,M,kCCCjF,MAAMC,EAEIC,eAA0DpmB,EAE1DvC,WAAAA,GAEFG,KAAKwoB,aAIX,CAEA,kBAAOC,GAIL,OAHKF,EAAOG,WACVH,EAAOG,SAAW,IAAIH,GAEjBA,EAAOG,QAChB,CAEQC,GAAAA,CAAIC,EAAiBhnB,KAAoBinB,GAE/C,GAAI7oB,KAAKwoB,eAA2B,UAAVI,EAAmB,EACzB,IAAIzL,MAAOsI,cACemD,EAAME,cAE1CF,CAcV,CACF,CAEAG,KAAAA,CAAMnnB,KAAoBinB,GACxB7oB,KAAK2oB,IAAI,QAAS/mB,KAAYinB,EAChC,CAEAG,IAAAA,CAAKpnB,KAAoBinB,GACvB7oB,KAAK2oB,IAAI,OAAQ/mB,KAAYinB,EAC/B,CAEAI,IAAAA,CAAKrnB,KAAoBinB,GACvB7oB,KAAK2oB,IAAI,OAAQ/mB,KAAYinB,EAC/B,CAEA1oB,KAAAA,CAAMyB,KAAoBinB,GACxB7oB,KAAK2oB,IAAI,QAAS/mB,KAAYinB,EAChC,EAGK,MAAMhE,EAAS0D,EAAOE,a,mCC7DtB,MAAMrX,EAAS,CACpBR,OAAQ,IACRS,WAAY,cACZN,OAAQ,oBACRO,MAAO,SACPC,QAAS,WACTC,QAAS,W,+FCDX,MAAM0R,EAAe,CACnBgG,QAAS,sBACTC,QAAS,sBACTC,MAAO,oBACPC,KAAM,oBAmEe,IAjDvB,MACE,SAAMC,CAAI/F,EAAavf,GACrB,IACE,MAAMulB,EAAY7Q,KAAKJ,UAAUtU,SAC3Bye,EAAAA,EAAae,QAAQD,EAAKgG,EAClC,CAAE,MAAOppB,GAEP,MADA0kB,EAAAA,EAAO1kB,MAAM,8BAA+BA,GACtCA,CACR,CACF,CAEA,SAAMqpB,CAAOjG,GACX,IACE,MAAMgG,QAAkB9G,EAAAA,EAAaC,QAAQa,GAC7C,OAAoB,MAAbgG,EAAoB7Q,KAAKL,MAAMkR,GAAa,IACrD,CAAE,MAAOppB,GAEP,MADA0kB,EAAAA,EAAO1kB,MAAM,8BAA+BA,GACtCA,CACR,CACF,CAEA,YAAMspB,CAAOlG,GACX,UACQd,EAAAA,EAAagB,WAAWF,EAChC,CAAE,MAAOpjB,GAEP,MADA0kB,EAAAA,EAAO1kB,MAAM,+BAAgCA,GACvCA,CACR,CACF,CAEA,WAAMupB,GACJ,UACQjH,EAAAA,EAAaiH,OACrB,CAAE,MAAOvpB,GAEP,MADA0kB,EAAAA,EAAO1kB,MAAM,0BAA2BA,GAClCA,CACR,CACF,CAEA,gBAAMwpB,GACJ,IACE,aAAalH,EAAAA,EAAakH,YAC5B,CAAE,MAAOxpB,GAEP,MADA0kB,EAAAA,EAAO1kB,MAAM,kCAAmCA,GAC1CA,CACR,CACF,GAGK,MAEM6gB,EAAcza,UACzB,UACQkc,EAAAA,EAAae,QAAQN,EAAagG,QAASxQ,KAAKJ,UAAU7F,GAClE,CAAE,MAAOtS,GAET,GAGW6U,EAAczO,UACzB,IACE,MAAMwO,QAAqB0N,EAAAA,EAAaC,QAAQQ,EAAagG,SAC7D,OAAOnU,EAAe2D,KAAKL,MAAMtD,GAAgB,IACnD,CAAE,MAAO5U,GAEP,OAAO,IACT,GAWWyU,EAAcrO,UACzB,IACE,MAAMoO,QAAqB8N,EAAAA,EAAaC,QAAQQ,EAAaiG,SAC7D,OAAOxU,EAAe+D,KAAKL,MAAM1D,GAAgB,IACnD,CAAE,MAAOxU,GAEP,OAAO,IACT,GAGWypB,EAAiBrjB,UAC5B,UACQkc,EAAAA,EAAae,QAAQN,EAAamG,KAAM3Q,KAAKJ,UAAU5N,GAC/D,CAAE,MAAOvK,GAET,GAGW0pB,EAAiBtjB,UAC5B,IACE,MAAMujB,QAAkBrH,EAAAA,EAAaC,QAAQQ,EAAamG,MAC1D,OAAOS,EAAYpR,KAAKL,MAAMyR,GAAa,IAC7C,CAAE,MAAO3pB,GAEP,OAAO,IACT,E,kEC3HF,MAQa8G,GAAW8iB,EAAAA,EAAAA,ICbI,2CACK,mNDYqC,CACpE7iB,KAAM,CACJ8iB,oBAAoB,EACpBC,SAAU,OACVC,kBAAkB,EAClBC,gBAAgB,EAChB9G,QAAS,CACPX,QAAUa,IACR,GAAoB,QAAhB9f,EAAAA,EAASC,GAAc,CACzB,MAAMoQ,EAAOwP,aAAaZ,QAAQa,GAClC,OAAOxF,QAAQC,QAAQlK,EACzB,CACA,OAAO,IAAI,EAEb0P,QAASA,CAACD,EAAavf,IACD,QAAhBP,EAAAA,EAASC,IACX4f,aAAaE,QAAQD,EAAKvf,GACnB+Z,QAAQC,WAEVD,QAAQC,UAEjByF,WAAaF,GACS,QAAhB9f,EAAAA,EAASC,IACX4f,aAAaG,WAAWF,GACjBxF,QAAQC,WAEVD,QAAQC,a","sources":["src/components/ErrorBoundary.tsx","src/components/SearchBar.tsx","src/hooks/useGoogleAuth.ts","src/components/GoogleSignIn.tsx","src/components/TableSettings.tsx","src/navigation/AppHeader.tsx","App.tsx","index.ts","src/components/LoadingIndicator.tsx","src/components/QuiverManager.tsx","src/config/environment.ts","src/constants/layout.ts","src/context/AppContext.tsx","src/hooks/useFilteredFoils.ts","src/utils/dataTransform.ts","src/services/productService.ts","src/hooks/useFoils.ts","src/hooks/useQuivers.ts","src/theme/ThemeContext.tsx","src/theme/colors.ts","src/theme/spacing.ts","src/utils/analytics.ts","src/utils/foilUtils.ts","src/utils/logger.ts","src/utils/routes.ts","src/utils/storage.ts","src/utils/supabase.ts","src/config/env.ts"],"sourcesContent":["import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Platform } from 'react-native';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    // Log error to your error reporting service\n    console.error('Error caught by boundary:', error, errorInfo);\n  }\n\n  handleRetry = () => {\n    this.setState({ hasError: false, error: null });\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorView error={this.state.error} onRetry={this.handleRetry} />;\n    }\n\n    return this.props.children;\n  }\n}\n\ninterface ErrorViewProps {\n  error: Error | null;\n  onRetry: () => void;\n}\n\nconst ErrorView: React.FC<ErrorViewProps> = ({ error, onRetry }) => {\n  const { colors } = useTheme();\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.primary }]}>\n      <View style={styles.content}>\n        <Text style={[styles.title, { color: colors.error }]}>\n          Something went wrong\n        </Text>\n        <Text style={[styles.message, { color: colors.text.secondary }]}>\n          {error?.message || 'An unexpected error occurred'}\n        </Text>\n        <TouchableOpacity\n          style={[styles.button, { backgroundColor: colors.primary }]}\n          onPress={onRetry}\n        >\n          <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n            Try Again\n          </Text>\n        </TouchableOpacity>\n        {__DEV__ && error && (\n          <Text style={[styles.stack, { color: colors.text.tertiary }]}>\n            {error.stack}\n          </Text>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: spacing.LARGE,\n  },\n  content: {\n    maxWidth: 600,\n    width: '100%',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: spacing.MEDIUM,\n    textAlign: 'center',\n  },\n  message: {\n    fontSize: 16,\n    marginBottom: spacing.LARGE,\n    textAlign: 'center',\n  },\n  button: {\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    marginBottom: spacing.LARGE,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  stack: {\n    fontSize: 12,\n    fontFamily: Platform.OS === 'ios' ? 'Menlo' : 'monospace',\n    marginTop: spacing.LARGE,\n    padding: spacing.MEDIUM,\n    width: '100%',\n  },\n}); ","import React, { useState, useEffect, useRef } from 'react';\nimport { View, TextInput, StyleSheet, TouchableOpacity, Platform, Text } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\ninterface SearchBarProps {\n  value: string;\n  onChangeText: (text: string) => void;\n  onClear: () => void;\n  placeholder?: string;\n  autoFocus?: boolean;\n  mode?: 'browse' | 'comparison' | 'quiver';\n  onFocus?: () => void;\n}\n\nexport const SearchBar: React.FC<SearchBarProps> = ({\n  value,\n  onChangeText,\n  onClear,\n  placeholder = 'Search foils...',\n  autoFocus = false,\n  mode = 'browse',\n  onFocus,\n}) => {\n  const { colors } = useTheme();\n\n  const getPlaceholder = () => {\n    switch (mode) {\n      case 'comparison':\n        return 'Search foils to add to comparison...';\n      case 'quiver':\n        return 'Search foils to add to quiver...';\n      default:\n        return 'Search foils...';\n    }\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.secondary }]}>\n      {Platform.OS === 'web' ? (\n        <Text style={[styles.searchIcon, { color: colors.text.secondary }]}>🔍</Text>\n      ) : (\n        <Ionicons name=\"search\" size={20} color={colors.text.secondary} />\n      )}\n      <TextInput\n        style={[styles.input, { color: colors.text.primary }]}\n        value={value}\n        onChangeText={onChangeText}\n        placeholder={getPlaceholder()}\n        placeholderTextColor={colors.text.tertiary}\n        autoFocus={autoFocus}\n        onFocus={onFocus}\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n        clearButtonMode=\"never\"\n        returnKeyType=\"search\"\n        maxFontSizeMultiplier={1}\n        {...(Platform.OS === 'web' ? {\n          spellCheck: false,\n          autoComplete: 'off',\n        } : {\n          keyboardType: 'web-search',\n        })}\n      />\n      {value !== '' && (\n        <TouchableOpacity onPress={onClear} style={styles.clearButton}>\n          {Platform.OS === 'web' ? (\n            <Text style={[styles.clearIcon, { color: colors.text.secondary }]}>✕</Text>\n          ) : (\n            <Ionicons name=\"close-circle\" size={20} color={colors.text.secondary} />\n          )}\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: spacing.MEDIUM,\n    height: 40,\n    borderRadius: 8,\n    gap: spacing.SMALL,\n  },\n  input: {\n    flex: 1,\n    fontSize: 16,\n    height: '100%',\n    ...(Platform.OS === 'web' && {\n      outlineStyle: 'none',\n      border: 'none',\n      background: 'transparent',\n      lineHeight: 40,\n    }),\n  },\n  clearButton: {\n    height: '100%',\n    aspectRatio: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  searchIcon: {\n    fontSize: 16,\n    width: 20,\n    height: 20,\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n  clearIcon: {\n    fontSize: 16,\n    width: 20,\n    height: 20,\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n}); ","import { useState } from 'react';\nimport { Platform } from 'react-native';\nimport { supabase } from '../utils/supabase';\nimport { GOOGLE_CLIENT_ID } from '../config/env';\n\n// Get the Google OAuth redirect URL for web\nconst getRedirectUrl = () => {\n  if (Platform.OS !== 'web') return undefined;\n\n  const origin = window.location.origin;\n  const hostname = window.location.hostname;\n  \n  // For localhost development\n  if (hostname === 'localhost' || hostname.includes('127.0.0.1')) {\n    return 'http://localhost:19006';\n  }\n  \n  // For staging and production, use the actual origin\n  // Supabase will append the necessary path\n  return origin;\n};\n\n// Make sure to configure these URLs in Google Cloud Console:\n// Development:\n// - Origins: http://localhost:19006, http://localhost:3000\n// - Redirect: http://localhost:3000/auth/callback\n//\n// Staging:\n// - Origin: https://staging.foilquiver.com\n// - Redirect: https://staging.foilquiver.com/auth/callback\n//\n// Production:\n// - Origin: https://foilquiver.com\n// - Redirect: https://foilquiver.com/auth/callback\n\nexport const useGoogleAuth = () => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const signInWithGoogle = async () => {\n    try {\n      setIsLoading(true);\n      if (Platform.OS !== 'web') {\n        console.warn('Mobile authentication not yet implemented');\n        return { data: null, error: new Error('Mobile authentication not yet implemented') };\n      }\n\n      const redirectTo = getRedirectUrl();\n      const { data, error } = await supabase.auth.signInWithOAuth({\n        provider: 'google',\n        options: {\n          redirectTo,\n          queryParams: {\n            access_type: 'offline',\n            prompt: 'consent',\n          },\n        },\n      });\n\n      if (error) {\n        console.error('Google OAuth error:', error);\n      }\n\n      return { data, error };\n    } catch (error) {\n      console.error('Unexpected error during Google sign in:', error);\n      return { data: null, error };\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    signInWithGoogle,\n    isLoading,\n  };\n}; ","import React from 'react';\nimport { TouchableOpacity, StyleSheet, Text, ActivityIndicator, Alert, Platform } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { colors } from '../theme/colors';\nimport { useGoogleAuth } from '../hooks/useGoogleAuth';\nimport { AuthError } from '@supabase/supabase-js';\n\ninterface GoogleSignInProps {\n  onSuccess?: () => void;\n}\n\nexport const GoogleSignIn = ({ onSuccess }: GoogleSignInProps) => {\n  const { signInWithGoogle, isLoading } = useGoogleAuth();\n\n  const handleSignIn = async () => {\n    try {\n      const { error } = await signInWithGoogle();\n      \n      if (error) {\n        Alert.alert('Sign In Error', error instanceof AuthError ? error.message : 'Failed to sign in');\n        return;\n      }\n\n      onSuccess?.();\n    } catch (error) {\n      Alert.alert('Error', 'An unexpected error occurred during sign in.');\n      console.error('Sign in error:', error);\n    }\n  };\n\n  return (\n    <TouchableOpacity\n      style={styles.button}\n      onPress={handleSignIn}\n      disabled={isLoading}\n    >\n      {isLoading ? (\n        <ActivityIndicator color={colors.text.inverse} />\n      ) : (\n        <>\n          {Platform.OS === 'web' ? (\n            <img \n              src=\"https://developers.google.com/identity/images/g-logo.png\"\n              alt=\"Google Logo\"\n              style={{ width: 18, height: 18, marginRight: 8 }}\n            />\n          ) : (\n            <Ionicons name=\"logo-google\" size={24} color={colors.text.inverse} style={styles.icon} />\n          )}\n          <Text style={styles.buttonText}>Sign in with Google</Text>\n        </>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    minWidth: 220,\n  },\n  buttonText: {\n    color: colors.text.inverse,\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  icon: {\n    marginRight: 8,\n  },\n}); ","import React, { useState, useMemo, useEffect } from 'react';\nimport { View, Text, Pressable, StyleSheet, Modal, Platform, ScrollView, Image, Alert } from 'react-native';\nimport { MaterialIcons, Ionicons } from '@expo/vector-icons';\nimport { useTheme } from '../theme/ThemeContext';\nimport { FilterOptions } from '../types/filters';\nimport { BaseProduct } from '../types/scraper';\nimport { saveFilters, saveColumns, loadFilters, loadColumns, StoredFilters, StoredColumns } from '../utils/storage';\nimport { spacing } from '../theme/spacing';\nimport { supabase } from '../utils/supabase';\nimport { Session, User } from '@supabase/supabase-js';\nimport { GoogleSignIn } from './GoogleSignIn';\nimport { QuiversMenu } from './QuiversMenu';\nimport { QuiverManager } from './QuiverManager';\nimport { useApp } from '../context/AppContext';\n\ninterface Column {\n  id: string;\n  label: string;\n  isVisible: boolean;\n}\n\ninterface TableSettingsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n  onClearFilters: () => void;\n  columns: Column[];\n  onColumnVisibilityChange: (columnId: string) => void;\n  onResetColumns: () => void;\n  foils: BaseProduct[];\n}\n\nexport function TableSettings({\n  filterOptions,\n  selectedBrands,\n  selectedSeries,\n  selectedTypes,\n  onFilterChange,\n  onClearFilters,\n  columns,\n  onColumnVisibilityChange,\n  onResetColumns,\n  foils,\n}: TableSettingsProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [activeTab, setActiveTab] = useState<'filters' | 'columns' | 'account' | 'appearance'>('filters');\n  const { colors, isDark, toggleTheme } = useTheme();\n  const [isQuiversModalVisible, setIsQuiversModalVisible] = useState(false);\n  const { session, user } = useApp();\n\n  // Handle sign out\n  const handleSignOut = async () => {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n      setIsOpen(false);\n    } catch (error) {\n      Alert.alert('Error', 'Failed to sign out');\n      console.error('Sign out error:', error);\n    }\n  };\n\n  // Filter series based on selected brands\n  const availableSeries = useMemo(() => {\n    if (selectedBrands.length === 0) {\n      return filterOptions.series;\n    }\n\n    // Get all series from foils that match selected brands\n    const seriesSet = new Set<string>();\n    foils.forEach(foil => {\n      if (selectedBrands.includes(foil.brand) && foil.series) {\n        seriesSet.add(foil.series);\n      }\n    });\n\n    return Array.from(seriesSet).sort();\n  }, [filterOptions.series, selectedBrands, foils]);\n\n  const renderAccountTab = () => {\n    if (!session) {\n      return (\n        <View style={styles.contentWrapper}>\n          <View style={styles.content}>\n            <Text style={[styles.contentTitle, { color: colors.text.primary, marginBottom: 16 }]}>Sign In</Text>\n            <GoogleSignIn onSuccess={() => {\n              setIsOpen(false);\n            }} />\n          </View>\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.contentWrapper}>\n        <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n          <View style={styles.content}>\n            <View style={styles.userInfo}>\n              {user?.user_metadata?.avatar_url && (\n                <Image \n                  source={{ uri: user.user_metadata.avatar_url }} \n                  style={styles.avatarImage}\n                />\n              )}\n              <View style={styles.userTextInfo}>\n                <Text style={[styles.userName, { color: colors.text.primary }]}>\n                  {user?.user_metadata?.full_name || user?.email}\n                </Text>\n                <Text style={[styles.userEmail, { color: colors.text.secondary }]}>\n                  {user?.email}\n                </Text>\n              </View>\n            </View>\n\n            <View style={[styles.menuDivider, { backgroundColor: colors.border }]} />\n\n            <View style={styles.section}>\n              <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Quivers</Text>\n              <Pressable\n                style={[styles.menuButton, { backgroundColor: colors.background.secondary }]}\n                onPress={() => {\n                  setIsQuiversModalVisible(true);\n                }}\n              >\n                <View style={styles.menuButtonContent}>\n                  {Platform.OS === 'web' ? (\n                    <Text style={{ fontSize: 20, color: colors.text.primary }}>🎯</Text>\n                  ) : (\n                    <Ionicons name=\"bookmark-outline\" size={20} color={colors.text.primary} />\n                  )}\n                  <Text style={[styles.menuButtonText, { color: colors.text.primary }]}>Manage Quivers</Text>\n                </View>\n                <MaterialIcons name=\"chevron-right\" size={20} color={colors.text.secondary} />\n              </Pressable>\n            </View>\n\n            <View style={styles.section}>\n              <Pressable\n                style={[styles.signOutButton, { backgroundColor: colors.background.secondary }]}\n                onPress={handleSignOut}\n              >\n                <View style={styles.menuButtonContent}>\n                  {Platform.OS === 'web' ? (\n                    <Text style={{ fontSize: 20, color: colors.text.primary }}>⇥</Text>\n                  ) : (\n                    <Ionicons name=\"log-out-outline\" size={20} color={colors.text.primary} />\n                  )}\n                  <Text style={[styles.menuButtonText, { color: colors.text.primary }]}>Sign Out</Text>\n                </View>\n              </Pressable>\n            </View>\n          </View>\n        </ScrollView>\n      </View>\n    );\n  };\n\n  return (\n    <>\n      <Pressable \n        onPress={() => setIsOpen(true)}\n        style={[styles.iconButton, { backgroundColor: colors.background.secondary }]}\n      >\n        <MaterialIcons name=\"settings\" size={24} color={colors.text.primary} />\n      </Pressable>\n\n      <Modal\n        visible={isOpen}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => setIsOpen(false)}\n      >\n        <Pressable \n          style={[styles.modalOverlay, { backgroundColor: isDark ? 'rgba(0, 0, 0, 0.7)' : 'rgba(0, 0, 0, 0.5)' }]}\n          onPress={() => setIsOpen(false)}\n        >\n          <Pressable \n            style={[styles.modalContent, { backgroundColor: colors.background.primary }]}\n            onPress={e => e.stopPropagation()}\n          >\n            <View style={[styles.modalHeader, { borderBottomColor: colors.border }]}>\n              <Text style={[styles.modalTitle, { color: colors.text.primary }]}>Settings</Text>\n              <Pressable \n                onPress={() => setIsOpen(false)}\n                style={styles.closeButton}\n              >\n                <MaterialIcons name=\"close\" size={24} color={colors.text.secondary} />\n              </Pressable>\n            </View>\n\n            <View style={[styles.tabs, { borderBottomColor: colors.border }]}>\n              <Pressable\n                style={[styles.tab, activeTab === 'filters' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('filters')}\n              >\n                <Text style={[\n                  styles.tabText, \n                  { color: colors.text.secondary },\n                  activeTab === 'filters' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Filters {(selectedBrands.length > 0 || selectedSeries.length > 0 || selectedTypes.length > 0) && '•'}\n                </Text>\n              </Pressable>\n              <Pressable\n                style={[styles.tab, activeTab === 'columns' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('columns')}\n              >\n                <Text style={[\n                  styles.tabText,\n                  { color: colors.text.secondary },\n                  activeTab === 'columns' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Columns {columns.some(col => !col.isVisible) && '•'}\n                </Text>\n              </Pressable>\n              <Pressable\n                style={[styles.tab, activeTab === 'appearance' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('appearance')}\n              >\n                <Text style={[\n                  styles.tabText,\n                  { color: colors.text.secondary },\n                  activeTab === 'appearance' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Appearance\n                </Text>\n              </Pressable>\n              <Pressable\n                style={[styles.tab, activeTab === 'account' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('account')}\n              >\n                <Text style={[\n                  styles.tabText,\n                  { color: colors.text.secondary },\n                  activeTab === 'account' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Account\n                </Text>\n              </Pressable>\n            </View>\n\n            {activeTab === 'filters' ? (\n              <View style={styles.contentWrapper}>\n                <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n                  <View style={styles.content}>\n                    <View style={styles.headerWithAction}>\n                      <Text style={[styles.contentTitle, { color: colors.text.primary }]}>Active Filters</Text>\n                      {(selectedBrands.length > 0 || selectedSeries.length > 0 || selectedTypes.length > 0) && (\n                        <Pressable \n                          onPress={onClearFilters}\n                          style={[styles.clearButton, { backgroundColor: colors.background.secondary }]}\n                        >\n                          <Text style={[styles.clearButtonText, { color: colors.text.secondary }]}>Clear All</Text>\n                        </Pressable>\n                      )}\n                    </View>\n                    <View style={styles.section}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Brand</Text>\n                      <View style={styles.chipContainer}>\n                        {filterOptions.brands.map((brand) => (\n                          <Pressable\n                            key={brand}\n                            style={[\n                              styles.chip,\n                              { backgroundColor: colors.background.secondary },\n                              selectedBrands.includes(brand) && [styles.chipSelected, { backgroundColor: colors.primary }],\n                            ]}\n                            onPress={() => onFilterChange('brands', brand)}\n                          >\n                            <Text \n                              style={[\n                                styles.chipText,\n                                { color: colors.text.secondary },\n                                selectedBrands.includes(brand) && [styles.chipTextSelected, { color: colors.text.inverse }],\n                              ]}\n                            >\n                              {brand}\n                            </Text>\n                          </Pressable>\n                        ))}\n                      </View>\n                    </View>\n\n                    <View style={styles.section}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Type</Text>\n                      <View style={styles.chipContainer}>\n                        {filterOptions.types.map((type) => (\n                          <Pressable\n                            key={type}\n                            style={[\n                              styles.chip,\n                              { backgroundColor: colors.background.secondary },\n                              selectedTypes.includes(type) && [styles.chipSelected, { backgroundColor: colors.primary }],\n                            ]}\n                            onPress={() => onFilterChange('type', type)}\n                          >\n                            <Text \n                              style={[\n                                styles.chipText,\n                                { color: colors.text.secondary },\n                                selectedTypes.includes(type) && [styles.chipTextSelected, { color: colors.text.inverse }],\n                              ]}\n                            >\n                              {type}\n                            </Text>\n                          </Pressable>\n                        ))}\n                      </View>\n                    </View>\n\n                    <View style={styles.section}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Series</Text>\n                      <View style={styles.chipContainer}>\n                        {availableSeries.length > 0 ? (\n                          availableSeries.map((series) => (\n                            <Pressable\n                              key={series}\n                              style={[\n                                styles.chip,\n                                { backgroundColor: colors.background.secondary },\n                                selectedSeries.includes(series) && [styles.chipSelected, { backgroundColor: colors.primary }],\n                              ]}\n                              onPress={() => onFilterChange('series', series)}\n                            >\n                              <Text \n                                style={[\n                                  styles.chipText,\n                                  { color: colors.text.secondary },\n                                  selectedSeries.includes(series) && [styles.chipTextSelected, { color: colors.text.inverse }],\n                                ]}\n                              >\n                                {series}\n                              </Text>\n                            </Pressable>\n                          ))\n                        ) : (\n                          <Text style={[styles.noSeriesText, { color: colors.text.secondary }]}>\n                            No series available for selected brands\n                          </Text>\n                        )}\n                      </View>\n                    </View>\n                  </View>\n                </ScrollView>\n              </View>\n            ) : activeTab === 'columns' ? (\n              <View style={styles.contentWrapper}>\n                <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n                  <View style={styles.content}>\n                    <View style={styles.headerWithAction}>\n                      <Text style={[styles.contentTitle, { color: colors.text.primary }]}>Visible Columns</Text>\n                      {columns.some(col => !col.isVisible) && (\n                        <Pressable \n                          onPress={onResetColumns}\n                          style={[styles.clearButton, { backgroundColor: colors.background.secondary }]}\n                        >\n                          <Text style={[styles.clearButtonText, { color: colors.text.secondary }]}>Reset</Text>\n                        </Pressable>\n                      )}\n                    </View>\n                    <View style={styles.columnList}>\n                      {columns.map(column => (\n                        <Pressable\n                          key={column.id}\n                          style={styles.columnItem}\n                          onPress={() => onColumnVisibilityChange(column.id)}\n                        >\n                          <Text style={[styles.columnLabel, { color: colors.text.primary }]}>{column.label}</Text>\n                          <View style={[\n                            styles.checkbox,\n                            { borderColor: colors.border },\n                            column.isVisible && [styles.checkboxChecked, { backgroundColor: colors.primary, borderColor: colors.primary }]\n                          ]}>\n                            {column.isVisible && (\n                              <MaterialIcons name=\"check\" size={16} color={colors.text.inverse} />\n                            )}\n                          </View>\n                        </Pressable>\n                      ))}\n                    </View>\n                  </View>\n                </ScrollView>\n              </View>\n            ) : activeTab === 'appearance' ? (\n              <View style={styles.contentWrapper}>\n                <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n                  <View style={styles.content}>\n                    <Text style={[styles.contentTitle, { color: colors.text.primary }]}>Theme Settings</Text>\n                    <View style={styles.section}>\n                      <Pressable\n                        style={[styles.menuButton, { backgroundColor: colors.background.secondary }]}\n                        onPress={toggleTheme}\n                      >\n                        <View style={styles.menuButtonContent}>\n                          <MaterialIcons \n                            name={isDark ? 'dark-mode' : 'light-mode'} \n                            size={20} \n                            color={colors.text.primary} \n                          />\n                          <Text style={[styles.menuButtonText, { color: colors.text.primary }]}>\n                            {isDark ? 'Dark Mode' : 'Light Mode'}\n                          </Text>\n                        </View>\n                      </Pressable>\n                    </View>\n                  </View>\n                </ScrollView>\n              </View>\n            ) : (\n              renderAccountTab()\n            )}\n          </Pressable>\n        </Pressable>\n      </Modal>\n\n      <Modal\n        visible={isQuiversModalVisible}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => setIsQuiversModalVisible(false)}\n      >\n        <View \n          style={[\n            styles.modalOverlay,\n            { backgroundColor: 'rgba(0, 0, 0, 0.5)' }\n          ]}\n          onStartShouldSetResponder={() => true}\n        >\n          <View \n            style={[\n              styles.modalContent,\n              { backgroundColor: colors.background.primary }\n            ]}\n          >\n            <QuiverManager\n              selectedFoils={[]}\n              onClose={() => setIsQuiversModalVisible(false)}\n              initialTab=\"saved\"\n              standalone={true}\n            />\n          </View>\n        </View>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n  },\n  button: {\n    padding: spacing.MEDIUM,\n  },\n  iconButton: {\n    padding: spacing.XSMALL,\n    borderRadius: 8,\n  },\n  modalContent: {\n    width: '100%',\n    maxWidth: 600,\n    borderRadius: 12,\n    maxHeight: '90%',\n    overflow: 'hidden',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n    borderBottomWidth: 1,\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n  },\n  columnGroup: {\n    flexDirection: 'column',\n    gap: spacing.MEDIUM,\n  },\n  filterGroup: {\n    padding: spacing.MEDIUM,\n  },\n  filterList: {\n    gap: spacing.MEDIUM,\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n  },\n  closeButton: {\n    padding: 4,\n  },\n  tabs: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n  },\n  tab: {\n    flex: 1,\n    padding: 12,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n  },\n  tabText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  activeTabText: {\n    // Remove static color reference since we're applying it dynamically\n  },\n  content: {\n    padding: 16,\n    width: '100%',\n  },\n  contentWrapper: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 12,\n  },\n  chipContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  chip: {\n    borderRadius: 16,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n  },\n  chipSelected: {},\n  chipText: {\n    fontSize: 14,\n  },\n  chipTextSelected: {},\n  columnList: {\n    gap: 12,\n  },\n  columnItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n  },\n  columnLabel: {\n    fontSize: 14,\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderRadius: 4,\n    borderWidth: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  checkboxChecked: {},\n  headerWithAction: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  contentTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  clearButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n  },\n  clearButtonText: {\n    fontSize: 14,\n  },\n  noSeriesText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  // User Menu Styles\n  userInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n    marginBottom: 16,\n  },\n  userTextInfo: {\n    flex: 1,\n  },\n  avatarImage: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n  },\n  userName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  userEmail: {\n    fontSize: 14,\n  },\n  menuDivider: {\n    height: 1,\n    marginBottom: 16,\n  },\n  menuButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  menuButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n  },\n  menuButtonText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  signOutButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n}); ","import React, { lazy, Suspense, useEffect, useMemo, useContext } from 'react';\nimport { View, Text, StyleSheet, Pressable, Platform, useWindowDimensions, Alert, TouchableOpacity } from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackParamList, RootStackNavigationProp } from '../types/navigation';\nimport { SearchBar } from '../components/SearchBar';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { TableSettings } from '../components/TableSettings';\nimport { useTheme } from '../theme/ThemeContext';\nimport { useFoils } from '../hooks/useFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { FilterOptions } from '../types/filters';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT, DEFAULT_COLUMNS, getTableWidth, getContentWidth, Column } from '../constants/layout';\nimport { loadColumns, loadFilters, saveFilters } from '../utils/storage';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useApp } from '../context/AppContext';\nimport { routes } from '../utils/routes';\nimport { getEnvironmentConfig } from '../config/environment';\nimport { generateFoilId } from '../utils/foilUtils';\nimport { QuiverManager } from '../components/QuiverManager';\nimport { QuiverContext } from '../../App';\n\n// Lazy load screens with proper suspense boundaries\nconst BrowseScreen = React.lazy(() => import('../screens/BrowseScreen'));\nconst ComparisonScreen = React.lazy(() => import('../screens/ComparisonScreen'));\nconst QuiverScreen = React.lazy(() => import('../screens/QuiverScreen'));\nconst PrivacyPolicy = React.lazy(() => import('../screens/legal/PrivacyPolicy'));\nconst TermsOfService = React.lazy(() => import('../screens/legal/TermsOfService'));\nconst Contact = React.lazy(() => import('../screens/legal/Contact'));\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nconst ICON_NAMES = {\n  home: 'home-outline' as const,\n  browse: 'search-outline' as const,\n  compare: 'git-compare-outline' as const,\n  settings: 'settings-outline' as const,\n  quiver: 'bookmark-outline' as const,\n};\n\nfunction TabBarIcon({ name, color }: { name: keyof typeof ICON_NAMES; color: string }) {\n  if (Platform.OS === 'web') {\n    // Use text alternatives for web\n    const webIcons: Record<keyof typeof ICON_NAMES, string> = {\n      home: '🏠',\n      browse: '🔍',\n      compare: '⚖️',\n      settings: '⚙️',\n      quiver: '🔖'\n    };\n    return <Text style={{ fontSize: 20, color }}>{webIcons[name]}</Text>;\n  }\n  return <Ionicons name={ICON_NAMES[name]} size={24} color={color} />;\n}\n\n// Define linking configuration for web\nconst linking = {\n  prefixes: [getEnvironmentConfig().webUrl],\n  config: {\n    screens: {\n      Browse: {\n        path: routes.browse,\n        parse: {\n          mode: (mode: string) => mode,\n        },\n      },\n      Comparison: routes.comparison,\n      Quiver: routes.quiver,\n      Terms: routes.terms,\n      Privacy: routes.privacy,\n      Contact: routes.contact,\n    },\n  },\n};\n\n// Screen wrapper with suspense and navigation props\nconst ScreenWrapper = ({ \n  children, \n  ...props \n}: { \n  children: React.ReactElement; \n  [key: string]: any;\n}) => (\n  <Suspense fallback={<LoadingIndicator />}>\n    {React.cloneElement(children, props)}\n  </Suspense>\n);\n\nexport const AppHeader = () => {\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { colors } = useTheme();\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const { foils } = useFoils();\n  const { \n    searchQuery, \n    setSearchQuery, \n    filters, \n    setFilters, \n    columns, \n    setColumns,\n    setCurrentScreen \n  } = useApp();\n  const { filterOptions } = useFilteredFoils(foils, filters);\n  const { showQuiverManager } = useContext(QuiverContext);\n\n  // Calculate brands from foils\n  const brands = React.useMemo(() => {\n    if (!foils?.length) return [];\n    return [...new Set(foils.map(foil => foil.brand))].sort();\n  }, [foils]);\n\n  // Add missing function definitions\n  const handleLogoPress = () => {\n    navigation.navigate('Browse', {});\n  };\n\n  const handleSearch = (text: string) => {\n    setSearchQuery(text);\n    navigation.setParams({ searchQuery: text });\n  };\n\n  const getViewMode = (route: any) => {\n    if (route.name === 'Comparison') return 'comparison';\n    if (route.name === 'Quiver') return 'quiver';\n    return 'browse';\n  };\n\n  const getSearchPlaceholder = (route: any) => {\n    switch (route.name) {\n      case 'Comparison':\n        return 'Search foils to add to comparison...';\n      case 'Quiver':\n        return 'Search foils to add to quiver...';\n      default:\n        return 'Search foils...';\n    }\n  };\n\n  const handleSearchFocus = (route: any) => {\n    if (route.name === 'Browse') {\n      navigation.setParams({ showSearchDropdown: true });\n    }\n  };\n\n  const handleFilterChange = (type: keyof FilterOptions, value: string) => {\n    setFilters(prev => ({\n      ...prev,\n      [type]: prev[type].includes(value)\n        ? prev[type].filter(item => item !== value)\n        : [...prev[type], value]\n    }));\n  };\n\n  const handleFilterChangeWrapper = (type: string, value: string) => {\n    handleFilterChange(type as keyof FilterOptions, value);\n  };\n\n  const handleClearFilters = () => {\n    setFilters({\n      brands: [],\n      series: [],\n      type: []\n    });\n  };\n\n  const handleColumnVisibilityChange = (columnId: string) => {\n    setColumns(prev => \n      prev.map(col => \n        col.id === columnId ? { ...col, isVisible: !col.isVisible } : col\n      )\n    );\n  };\n\n  const handleResetColumns = () => {\n    setColumns(DEFAULT_COLUMNS);\n  };\n\n  // Calculate table width based on visible columns\n  const tableWidth = React.useMemo(() => getTableWidth(columns), [columns]);\n\n  // Calculate content width including padding\n  const contentWidth = React.useMemo(() => \n    getContentWidth(tableWidth, width, isMobile), \n    [tableWidth, width, isMobile]\n  );\n\n  // Calculate container width for header alignment\n  const containerWidth = React.useMemo(() => {\n    if (isMobile) {\n      return '100%';\n    }\n    // Match the table's container width exactly\n    return Math.min(tableWidth + (CONTAINER_PADDING * 2), width);\n  }, [tableWidth, width, isMobile]);\n\n  // Load saved column settings on mount\n  useEffect(() => {\n    const loadSavedColumnSettings = async () => {\n      try {\n        const savedColumns = await loadColumns();\n        if (savedColumns) {\n          const updatedColumns = DEFAULT_COLUMNS.map(col => ({\n            ...col,\n            isVisible: typeof savedColumns[col.id] === 'boolean' ? savedColumns[col.id] : col.isVisible\n          }));\n          setColumns(updatedColumns);\n        }\n      } catch (error) {\n        console.error('Error loading column settings:', error);\n      }\n    };\n\n    loadSavedColumnSettings();\n  }, []);\n\n  // Load saved filter settings on mount\n  useEffect(() => {\n    const loadSavedSettings = async () => {\n      try {\n        const savedFilters = await loadFilters();\n        if (savedFilters) {\n          setFilters({\n            brands: savedFilters.brands || [],\n            series: savedFilters.series || [],\n            type: savedFilters.types || []\n          });\n        }\n      } catch (error) {\n        console.error('Error loading filter settings:', error);\n      }\n    };\n\n    loadSavedSettings();\n  }, []);\n\n  const headerMainContainerStyle = React.useMemo(() => {\n    if (isMobile) {\n      return {\n        width: '100%' as const,\n        paddingHorizontal: CONTAINER_PADDING\n      };\n    }\n\n    // For web, match the table width exactly without additional padding\n    const containerWidth = getTableWidth(columns);\n    return {\n      width: containerWidth,\n      maxWidth: getContentWidth(containerWidth, width, false),\n      alignSelf: 'center' as const\n    };\n  }, [columns, width, isMobile]);\n\n  const renderHeaderRight = (route: any) => {\n    return (\n      <View style={styles.headerRightContainerWeb}>\n        <TouchableOpacity\n          style={[styles.headerButton]}\n          onPress={showQuiverManager}\n        >\n          <TabBarIcon name=\"quiver\" color={colors.text.primary} />\n          {!isMobile && (\n            <Text style={[styles.headerButtonText, { color: colors.text.primary }]}>\n              My Quivers\n            </Text>\n          )}\n        </TouchableOpacity>\n        <TableSettings\n          filterOptions={filterOptions}\n          selectedBrands={filters.brands}\n          selectedSeries={filters.series}\n          selectedTypes={filters.type}\n          onFilterChange={handleFilterChangeWrapper}\n          onClearFilters={handleClearFilters}\n          columns={columns}\n          onColumnVisibilityChange={handleColumnVisibilityChange}\n          onResetColumns={handleResetColumns}\n          foils={foils}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: colors.background.primary,\n        },\n        headerShadowVisible: false,\n      }}\n    >\n      <Stack.Screen \n        name=\"Browse\"\n        options={({ route }) => ({\n          headerTitle: route.params?.title || '',\n          headerLeft: () => (\n            <View style={[\n              styles.headerOuterContainer,\n              { backgroundColor: colors.background.primary },\n              !isMobile && { alignItems: 'center' }\n            ]}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <Pressable \n                    onPress={handleLogoPress}\n                    style={({ pressed }) => [\n                      styles.logoContainer,\n                      pressed && styles.logoPressed\n                    ]}\n                  >\n                    <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                  </Pressable>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  headerMainContainerStyle\n                ]}>\n                  <View style={[\n                    styles.headerContentWeb,\n                    { \n                      width: '100%',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }\n                  ]}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={[styles.searchBarContainerWeb, { flex: 1 }]}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n        })}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <BrowseScreen\n              {...props}\n              filters={filters}\n              onFilterChange={handleFilterChangeWrapper}\n              columns={columns}\n              brands={brands}\n            />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Comparison\"\n        options={({ route }) => ({\n          headerTitle: route.params?.title || '',\n          headerLeft: () => (\n            <View style={[\n              styles.headerOuterContainer,\n              { backgroundColor: colors.background.primary },\n              !isMobile && { alignItems: 'center' }\n            ]}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <Pressable \n                    onPress={handleLogoPress}\n                    style={({ pressed }) => [\n                      styles.logoContainer,\n                      pressed && styles.logoPressed\n                    ]}\n                  >\n                    <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                  </Pressable>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  headerMainContainerStyle\n                ]}>\n                  <View style={[\n                    styles.headerContentWeb,\n                    { \n                      width: '100%',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }\n                  ]}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={[styles.searchBarContainerWeb, { flex: 1 }]}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n        })}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <ComparisonScreen {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Quiver\"\n        options={({ route }) => ({\n          headerTitle: '',\n          headerLeft: () => (\n            <View style={[\n              styles.headerOuterContainer,\n              { backgroundColor: colors.background.primary },\n              !isMobile && { alignItems: 'center' }\n            ]}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <Pressable \n                    onPress={handleLogoPress}\n                    style={({ pressed }) => [\n                      styles.logoContainer,\n                      pressed && styles.logoPressed\n                    ]}\n                  >\n                    <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                  </Pressable>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  headerMainContainerStyle\n                ]}>\n                  <View style={[\n                    styles.headerContentWeb,\n                    { \n                      width: '100%',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }\n                  ]}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={[styles.searchBarContainerWeb, { flex: 1 }]}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n        })}\n      >\n        {(props) => {\n          const currentQuiverFoils = React.useMemo(() => {\n            if (!props.route.params?.foil_ids || !Array.isArray(foils)) return [];\n            return foils.filter(f => {\n              if (!f) return false;\n              const foilId = generateFoilId(f);\n              return props.route.params.foil_ids.includes(foilId);\n            });\n          }, [props.route.params?.foil_ids, foils]);\n\n          return (\n            <ScreenWrapper>\n              <QuiverScreen {...props}\n                searchProps={{\n                  value: searchQuery,\n                  onChangeText: handleSearch,\n                  onClear: () => setSearchQuery(''),\n                  mode: 'quiver',\n                  placeholder: 'Search foils in quiver...'\n                }}\n                tableSettingsProps={{\n                  filterOptions,\n                  selectedBrands: filters.brands,\n                  selectedSeries: filters.series,\n                  selectedTypes: filters.type,\n                  onFilterChange: handleFilterChangeWrapper,\n                  onClearFilters: handleClearFilters,\n                  columns,\n                  onColumnVisibilityChange: handleColumnVisibilityChange,\n                  onResetColumns: handleResetColumns,\n                  foils: currentQuiverFoils\n                }}\n              />\n            </ScreenWrapper>\n          );\n        }}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Terms\"\n        options={{\n          headerShown: false,\n        }}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <TermsOfService {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Privacy\"\n        options={{\n          headerShown: false,\n        }}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <PrivacyPolicy {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Contact\"\n        options={{\n          headerShown: false,\n        }}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <Contact {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n    </Stack.Navigator>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerOuterContainer: {\n    flex: 1,\n    paddingHorizontal: CONTAINER_PADDING,\n  },\n  // Mobile Styles\n  headerMainContainerMobile: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n  },\n  headerRightContainerMobile: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    paddingRight: 12,\n    zIndex: 2000,\n  },\n  searchBarContainerMobile: {\n    width: 160,\n    height: 36,\n  },\n  // Web Styles\n  headerMainContainerWeb: {\n    height: 72,\n    width: '100%',\n  },\n  headerContentWeb: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 24,\n    height: '100%',\n    width: '100%',\n  },\n  searchBarContainerWeb: {\n    flex: 1,\n    height: 40,\n  },\n  // Common Styles\n  logoContainer: {\n    height: '100%',\n    justifyContent: 'center',\n    minWidth: 120,\n  },\n  logoPressed: {\n    opacity: 0.7,\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  headerRightContainerWeb: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n    paddingRight: CONTAINER_PADDING,\n    zIndex: 2000,\n  },\n  headerButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    padding: 8,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      userSelect: 'none',\n    }),\n  },\n  headerButtonText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n}); ","import React, { useRef, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNavigationContainerRef, LinkingOptions, getStateFromPath, getPathFromState } from '@react-navigation/native';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { View } from 'react-native';\nimport { ErrorBoundary } from './src/components/ErrorBoundary';\nimport { ThemeProvider } from './src/theme/ThemeContext';\nimport { AppProvider } from './src/context/AppContext';\nimport { LoadingIndicator } from './src/components/LoadingIndicator';\nimport { QuiverManager } from './src/components/QuiverManager';\nimport { routes } from './src/utils/routes';\nimport { RootStackParamList } from './src/types/navigation';\nimport { getPrefixes } from './src/config/environment';\nimport { AppHeader } from './src/navigation/AppHeader';\nimport { Platform } from 'react-native';\n\nexport const QuiverContext = React.createContext<{\n  showQuiverManager: () => void;\n  hideQuiverManager: () => void;\n}>({\n  showQuiverManager: () => {},\n  hideQuiverManager: () => {},\n});\n\nexport default function App() {\n  const navigationRef = createNavigationContainerRef<RootStackParamList>();\n  const [isQuiverManagerVisible, setIsQuiverManagerVisible] = useState(false);\n  \n  const showQuiverManager = () => setIsQuiverManagerVisible(true);\n  const hideQuiverManager = () => setIsQuiverManagerVisible(false);\n\n  const linking: LinkingOptions<RootStackParamList> = {\n    prefixes: getPrefixes(),\n    config: {\n      screens: {\n        Browse: {\n          path: '/',\n          parse: {\n            mode: (mode: string) => mode,\n          },\n          stringify: {\n            mode: (mode: string) => mode,\n          },\n        },\n        Comparison: {\n          path: '/comparison',\n          exact: true,\n          stringify: {\n            quiverName: (name: string) => name,\n            foils: (foils: any[]) => JSON.stringify(foils),\n          },\n        },\n        Quiver: {\n          path: '/quiver/:quiverId',\n          parse: {\n            quiverId: (id: string) => id,\n            quiverName: (name: string) => name,\n            foils: (foils: string) => foils ? JSON.parse(foils) : undefined,\n          },\n          stringify: {\n            quiverId: (id: string) => id,\n            quiverName: (name: string) => name,\n            foils: (foils: any[]) => JSON.stringify(foils),\n          },\n        },\n        Terms: '/terms',\n        Privacy: '/privacy',\n        Contact: '/contact',\n      },\n    },\n    getStateFromPath: (path, options) => {\n      // Handle direct navigation to comparison\n      if (path === '/comparison') {\n        return {\n          routes: [\n            {\n              name: 'Comparison',\n              params: {},\n            },\n          ],\n        };\n      }\n      return getStateFromPath(path, options);\n    },\n    getPathFromState: (state, config) => {\n      // Handle comparison route specially\n      if (state.routes[state.routes.length - 1].name === 'Comparison') {\n        return '/comparison';\n      }\n      const path = getPathFromState(state, config);\n      return path || '/';\n    },\n  };\n\n  return (\n    <ThemeProvider>\n      <AppProvider>\n        <QuiverContext.Provider value={{ showQuiverManager, hideQuiverManager }}>\n          <HelmetProvider>\n            <ErrorBoundary>\n              <SafeAreaProvider>\n                <NavigationContainer \n                  ref={navigationRef}\n                  linking={linking}\n                  fallback={<LoadingIndicator />}\n                >\n                  <View style={{ flex: 1 }}>\n                    <AppHeader />\n                    {isQuiverManagerVisible && (\n                      <QuiverManager\n                        standalone={false}\n                        isModalVisible={isQuiverManagerVisible}\n                        onClose={hideQuiverManager}\n                        initialTab=\"saved\"\n                      />\n                    )}\n                  </View>\n                </NavigationContainer>\n              </SafeAreaProvider>\n            </ErrorBoundary>\n          </HelmetProvider>\n        </QuiverContext.Provider>\n      </AppProvider>\n    </ThemeProvider>\n  );\n} ","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import React from 'react';\nimport { View, Text, ActivityIndicator, StyleSheet } from 'react-native';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\ninterface LoadingIndicatorProps {\n  message?: string;\n  size?: 'small' | 'large';\n  fullScreen?: boolean;\n}\n\nexport const LoadingIndicator: React.FC<LoadingIndicatorProps> = ({\n  message = 'Loading...',\n  size = 'large',\n  fullScreen = true,\n}) => {\n  const { colors } = useTheme();\n\n  return (\n    <View\n      style={[\n        styles.container,\n        fullScreen && styles.fullScreen,\n        { backgroundColor: colors.background.primary },\n      ]}\n    >\n      <ActivityIndicator size={size} color={colors.primary} />\n      {message && (\n        <Text style={[styles.message, { color: colors.text.secondary }]}>\n          {message}\n        </Text>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: spacing.LARGE,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fullScreen: {\n    flex: 1,\n  },\n  message: {\n    marginTop: spacing.MEDIUM,\n    fontSize: 16,\n    textAlign: 'center',\n  },\n}); ","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Modal,\n  TextInput,\n  ScrollView,\n  Alert,\n  Platform,\n  useWindowDimensions,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { useQuivers } from '../hooks/useQuivers';\nimport { BaseProduct } from '../types/scraper';\nimport { Quiver } from '../types/quiver';\nimport { useTheme } from '../theme/ThemeContext';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT } from '../constants/layout';\nimport { spacing } from '../theme/spacing';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { trackAction, ANALYTICS_EVENTS } from '../utils/analytics';\nimport { logger } from '../utils/logger';\nimport { useApp } from '../context/AppContext';\n\ninterface QuiverManagerProps {\n  selectedFoils?: BaseProduct[];\n  onClose?: () => void;\n  initialTab?: 'save' | 'saved';\n  standalone?: boolean;\n  isModalVisible?: boolean;\n  hideStandaloneButton?: boolean;\n  onQuiverSaved?: (quiverId: string, quiverName: string) => void;\n}\n\nexport const QuiverManager: React.FC<QuiverManagerProps> = ({\n  selectedFoils = [],\n  onClose,\n  initialTab = 'save',\n  standalone = false,\n  isModalVisible,\n  hideStandaloneButton = false,\n  onQuiverSaved,\n}) => {\n  const { colors } = useTheme();\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { setSelectedFoils } = useApp();\n\n  const [isModalVisibleInternal, setIsModalVisibleInternal] = useState(!standalone);\n  const modalVisible = isModalVisible !== undefined ? isModalVisible : isModalVisibleInternal;\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n  const [activeTab, setActiveTab] = useState<'save' | 'saved'>(initialTab);\n  const [editingQuiverId, setEditingQuiverId] = useState<string | null>(null);\n  const [editingName, setEditingName] = useState('');\n\n  const {\n    quivers,\n    isLoading,\n    error,\n    createQuiver,\n    deleteQuiver,\n    reloadQuivers,\n    updateQuiver\n  } = useQuivers();\n\n  const handleCreateQuiver = async () => {\n    if (!name.trim()) {\n      if (Platform.OS === 'web') {\n        window.alert('Please enter a name for your quiver');\n      } else {\n        Alert.alert('Error', 'Please enter a name for your quiver');\n      }\n      return;\n    }\n\n    try {\n      const result = await createQuiver({\n        name: name.trim(),\n        description: description.trim(),\n        foils: selectedFoils,\n        is_public: isPublic,\n      });\n\n      if (result) {\n        trackAction(ANALYTICS_EVENTS.SAVE_QUIVER, {\n          foilCount: selectedFoils.length,\n          isPublic,\n        });\n        \n        if (Platform.OS === 'web') {\n          window.alert('Quiver saved successfully');\n        } else {\n          Alert.alert('Success', 'Quiver saved successfully');\n        }\n        setName('');\n        setDescription('');\n        setIsPublic(false);\n        setIsModalVisibleInternal(false);\n        onClose?.();\n        onQuiverSaved?.(result.id, result.name);\n      } else {\n        throw new Error('Failed to create quiver - no result returned');\n      }\n    } catch (error) {\n      console.error('Error creating quiver:', error);\n      if (Platform.OS === 'web') {\n        window.alert(`Failed to save quiver: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      } else {\n        Alert.alert('Error', `Failed to save quiver: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    }\n  };\n\n  const handleDeleteQuiver = async (quiverId: string) => {\n    try {\n      const userConfirmed = await new Promise<boolean>((resolve) => {\n        Alert.alert(\n          'Delete Quiver',\n          'Are you sure you want to delete this quiver? This action cannot be undone.',\n          [\n            {\n              text: 'Cancel',\n              style: 'cancel',\n              onPress: () => resolve(false),\n            },\n            {\n              text: 'Delete',\n              style: 'destructive',\n              onPress: () => resolve(true),\n            },\n          ],\n          { cancelable: false }\n        );\n      });\n\n      if (!userConfirmed) return;\n\n      const success = await deleteQuiver(quiverId);\n      \n      if (success) {\n        trackAction(ANALYTICS_EVENTS.DELETE_QUIVER, {\n          quiverId,\n        });\n        Alert.alert('Success', 'Quiver deleted successfully');\n      } else {\n        Alert.alert('Error', 'Failed to delete quiver. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error deleting quiver:', error);\n      Alert.alert('Error', 'An unexpected error occurred. Please try again.');\n    }\n  };\n\n  const handleViewQuiver = (quiver: Quiver) => {\n    // Close the modal first\n    setIsModalVisibleInternal(false);\n    onClose?.();\n\n    // Clear any existing selected foils before navigating\n    setSelectedFoils([]);\n\n    // Navigate to Quiver screen with the quiver's data\n    navigation.navigate('Quiver', {\n        quiverId: quiver.id,\n        quiverName: quiver.name,\n        foil_ids: quiver.foil_ids || []\n    });\n  };\n\n  const handleStartRename = (quiver: Quiver) => {\n    setEditingQuiverId(quiver.id);\n    setEditingName(quiver.name);\n  };\n\n  const handleSaveRename = async () => {\n    if (!editingQuiverId || !editingName.trim()) return;\n\n    try {\n      const success = await updateQuiver(editingQuiverId, { name: editingName.trim() });\n      if (success) {\n        trackAction(ANALYTICS_EVENTS.UPDATE_QUIVER, {\n          quiverId: editingQuiverId,\n          action: 'rename',\n        });\n        \n        if (Platform.OS === 'web') {\n          window.alert('Quiver renamed successfully');\n        } else {\n          Alert.alert('Success', 'Quiver renamed successfully');\n        }\n        setEditingQuiverId(null);\n        setEditingName('');\n        reloadQuivers();\n      }\n    } catch (error) {\n      console.error('Error renaming quiver:', error);\n      Alert.alert('Error', 'Failed to rename quiver');\n    }\n  };\n\n  const getFoilCount = (quiver: Quiver) => {\n    if (quiver.foil_ids && Array.isArray(quiver.foil_ids)) {\n        return quiver.foil_ids.length;\n    }\n    return 0;\n  };\n\n  const renderQuiverList = () => {\n    if (isLoading) {\n      return (\n        <View style={styles.centerContent}>\n          <Text style={[styles.message, { color: colors.text.secondary }]}>\n            Loading quivers...\n          </Text>\n        </View>\n      );\n    }\n\n    if (error) {\n      return (\n        <View style={styles.centerContent}>\n          <Text style={[styles.message, { color: colors.error }]}>\n            {error}\n          </Text>\n        </View>\n      );\n    }\n\n    if (quivers.length === 0) {\n      return (\n        <View style={styles.centerContent}>\n          <Text style={[styles.message, { color: colors.text.secondary }]}>\n            No saved quivers yet\n          </Text>\n        </View>\n      );\n    }\n\n    return quivers.map((quiver) => {\n      return (\n        <View\n          key={quiver.id}\n          style={[\n            styles.quiverItem,\n            { borderBottomColor: colors.border }\n          ]}\n        >\n          <TouchableOpacity \n            style={styles.quiverInfo}\n            onPress={() => handleViewQuiver(quiver)}\n          >\n            {editingQuiverId === quiver.id ? (\n              <View style={styles.renameContainer}>\n                <TextInput\n                  style={[\n                    styles.renameInput,\n                    { \n                      color: colors.text.primary,\n                      borderColor: colors.border,\n                      backgroundColor: colors.background.secondary\n                    }\n                  ]}\n                  value={editingName}\n                  onChangeText={setEditingName}\n                  placeholder=\"Enter new name\"\n                  placeholderTextColor={colors.text.tertiary}\n                  autoFocus\n                />\n                <TouchableOpacity\n                  style={[styles.renameButton, { backgroundColor: colors.error }]}\n                  onPress={() => {\n                    setEditingQuiverId(null);\n                    setEditingName('');\n                  }}\n                >\n                  <Text style={[styles.renameButtonText, { color: colors.text.inverse }]}>Cancel</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={[styles.renameButton, { backgroundColor: colors.primary }]}\n                  onPress={handleSaveRename}\n                >\n                  <Text style={[styles.renameButtonText, { color: colors.text.inverse }]}>Save</Text>\n                </TouchableOpacity>\n              </View>\n            ) : (\n              <>\n                <View style={styles.quiverNameContainer}>\n                  <Text style={[styles.quiverName, { color: colors.text.primary }]}>\n                    {quiver.name}\n                  </Text>\n                  <TouchableOpacity\n                    onPress={() => handleStartRename(quiver)}\n                    style={styles.renameIcon}\n                  >\n                    {Platform.OS === 'web' ? (\n                      <Text style={{ color: colors.text.secondary }}>✎</Text>\n                    ) : (\n                      <Ionicons name=\"pencil\" size={16} color={colors.text.secondary} />\n                    )}\n                  </TouchableOpacity>\n                </View>\n                {quiver.description && (\n                  <Text style={[styles.quiverDescription, { color: colors.text.secondary }]}>\n                    {quiver.description}\n                  </Text>\n                )}\n                <Text style={[styles.quiverMeta, { color: colors.text.tertiary }]}>\n                  {getFoilCount(quiver)} foils • {new Date(quiver.updated_at).toLocaleDateString()}\n                  {quiver.is_public && ' • Public'}\n                </Text>\n              </>\n            )}\n          </TouchableOpacity>\n          {Platform.OS === 'web' ? (\n            <button\n              type=\"button\"\n              onClick={() => {\n                try {\n                  const confirmed = window.confirm('Are you sure you want to delete this quiver? This action cannot be undone.');\n                  if (confirmed) {\n                    deleteQuiver(quiver.id).then(success => {\n                      if (success) {\n                        reloadQuivers();\n                      } else {\n                        window.alert('Failed to delete quiver');\n                      }\n                    }).catch(error => {\n                      console.error('Delete error:', error);\n                      window.alert('Error deleting quiver');\n                    });\n                  }\n                } catch (error) {\n                  console.error('Delete error:', error);\n                  window.alert('Error in delete operation');\n                }\n              }}\n              style={{\n                padding: '8px',\n                borderWidth: '1px',\n                borderStyle: 'solid',\n                borderColor: colors.error,\n                borderRadius: '8px',\n                minWidth: '70px',\n                backgroundColor: colors.background.primary,\n                cursor: 'pointer',\n                color: colors.error,\n                fontWeight: '600',\n                fontSize: '14px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                zIndex: 10,\n                position: 'relative',\n                pointerEvents: 'auto',\n              }}\n            >\n              Delete\n            </button>\n          ) : (\n            <TouchableOpacity\n              style={[\n                styles.deleteButton, \n                { \n                  borderColor: colors.error,\n                  backgroundColor: colors.background.primary \n                }\n              ]}\n              onPress={() => {\n                handleDeleteQuiver(quiver.id);\n              }}\n            >\n              <Ionicons name=\"trash-outline\" size={20} color={colors.error} />\n            </TouchableOpacity>\n          )}\n        </View>\n      );\n    });\n  };\n\n  const content = (\n    <>\n      <View style={[styles.modalHeader, { borderBottomColor: colors.border }]}>\n        <Text style={[styles.modalTitle, { color: colors.text.primary }]}>\n          Manage Quivers\n        </Text>\n        {onClose && (\n          <TouchableOpacity onPress={onClose}>\n            {Platform.OS === 'web' ? (\n              <Text style={{ fontSize: 24, color: colors.text.primary }}>×</Text>\n            ) : (\n              <Ionicons name=\"close\" size={24} color={colors.text.primary} />\n            )}\n          </TouchableOpacity>\n        )}\n      </View>\n\n      {selectedFoils.length > 0 && (\n        <View style={[styles.tabContainer, { borderBottomColor: colors.border }]}>\n          <TouchableOpacity\n            style={[\n              styles.tab,\n              activeTab === 'save' && [\n                styles.activeTab,\n                { borderBottomColor: colors.primary }\n              ]\n            ]}\n            onPress={() => setActiveTab('save')}\n          >\n            <Text\n              style={[\n                styles.tabText,\n                { color: activeTab === 'save' ? colors.primary : colors.text.secondary }\n              ]}\n            >\n              Save Quiver\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={[\n              styles.tab,\n              activeTab === 'saved' && [\n                styles.activeTab,\n                { borderBottomColor: colors.primary }\n              ]\n            ]}\n            onPress={() => setActiveTab('saved')}\n          >\n            <Text\n              style={[\n                styles.tabText,\n                { color: activeTab === 'saved' ? colors.primary : colors.text.secondary }\n              ]}\n            >\n              Saved Quivers\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n\n      <ScrollView style={styles.modalBody}>\n        {activeTab === 'save' && selectedFoils.length > 0 ? (\n          <View style={styles.form}>\n            <View style={styles.formField}>\n              <Text style={[styles.label, { color: colors.text.secondary }]}>\n                Name\n              </Text>\n              <TextInput\n                style={[\n                  styles.input,\n                  { \n                    color: colors.text.primary,\n                    borderColor: colors.border,\n                    backgroundColor: colors.background.secondary\n                  }\n                ]}\n                value={name}\n                onChangeText={setName}\n                placeholder=\"Enter quiver name\"\n                placeholderTextColor={colors.text.tertiary}\n              />\n            </View>\n\n            <View style={styles.formField}>\n              <Text style={[styles.label, { color: colors.text.secondary }]}>\n                Description (optional)\n              </Text>\n              <TextInput\n                style={[\n                  styles.input,\n                  styles.textArea,\n                  { \n                    color: colors.text.primary,\n                    borderColor: colors.border,\n                    backgroundColor: colors.background.secondary\n                  }\n                ]}\n                value={description}\n                onChangeText={setDescription}\n                placeholder=\"Enter description\"\n                placeholderTextColor={colors.text.tertiary}\n                multiline\n                numberOfLines={3}\n              />\n            </View>\n\n            <TouchableOpacity\n              style={styles.publicToggle}\n              onPress={() => setIsPublic(!isPublic)}\n            >\n              {Platform.OS === 'web' ? (\n                <Text style={{ \n                  fontSize: 24, \n                  color: isPublic ? colors.primary : colors.text.secondary,\n                  marginRight: 8\n                }}>\n                  {isPublic ? '☑' : '☐'}\n                </Text>\n              ) : (\n                <Ionicons\n                  name={isPublic ? 'checkbox' : 'square-outline'}\n                  size={24}\n                  color={isPublic ? colors.primary : colors.text.secondary}\n                />\n              )}\n              <Text style={[styles.publicToggleText, { color: colors.text.primary }]}>\n                Make this quiver public\n              </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              style={[\n                styles.createButton,\n                { backgroundColor: colors.primary }\n              ]}\n              onPress={handleCreateQuiver}\n            >\n              <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n                Save Quiver\n              </Text>\n            </TouchableOpacity>\n          </View>\n        ) : (\n          <View style={styles.quiverList}>\n            {renderQuiverList()}\n          </View>\n        )}\n      </ScrollView>\n    </>\n  );\n\n  if (standalone) {\n    return content;\n  }\n\n  return (\n    <>\n      {selectedFoils.length > 0 && !standalone && !isModalVisible && !hideStandaloneButton && (\n        <TouchableOpacity\n          style={[\n            styles.saveButton,\n            { backgroundColor: colors.primary }\n          ]}\n          onPress={() => setIsModalVisibleInternal(true)}\n        >\n          {Platform.OS === 'web' ? (\n            <Text style={{ fontSize: 20, color: colors.text.inverse, marginRight: 8 }}>+</Text>\n          ) : (\n            <Ionicons name=\"bookmark-outline\" size={20} color={colors.text.inverse} />\n          )}\n          <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n            Save Quiver\n          </Text>\n        </TouchableOpacity>\n      )}\n      <Modal\n        visible={modalVisible}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => {\n          setIsModalVisibleInternal(false);\n          onClose?.();\n        }}\n      >\n        <TouchableOpacity\n          style={[\n            styles.modalOverlay,\n            standalone && styles.standaloneOverlay\n          ]}\n          activeOpacity={1}\n          onPress={() => {\n            setIsModalVisibleInternal(false);\n            onClose?.();\n          }}\n        >\n          <TouchableOpacity\n            style={[\n              styles.modalContent,\n              { backgroundColor: colors.background.primary },\n              isMobile && styles.modalContentMobile\n            ]}\n            activeOpacity={1}\n            onPress={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          >\n            {content}\n          </TouchableOpacity>\n        </TouchableOpacity>\n      </Modal>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  saveButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    gap: 8,\n    minHeight: 40,\n    minWidth: 120,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n  buttonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    textAlign: 'center',\n    ...(Platform.OS === 'web' && {\n      userSelect: 'none',\n    }),\n  },\n  modalOverlay: {\n    position: 'absolute' as const,\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: CONTAINER_PADDING,\n    zIndex: 2000,\n    ...(Platform.OS === 'web' && {\n      position: 'absolute' as const,\n      pointerEvents: 'auto',\n    }),\n  },\n  modalContent: {\n    width: '100%',\n    maxWidth: 600,\n    borderRadius: 12,\n    maxHeight: '90%',\n    zIndex: 2001,\n    ...(Platform.OS === 'web' && {\n      pointerEvents: 'auto',\n      userSelect: 'none',\n    }),\n  },\n  modalContentMobile: {\n    maxWidth: '100%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n    borderBottomWidth: 1,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n  },\n  modalBody: {\n    flex: 1,\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: spacing.MEDIUM,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n  },\n  tabText: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  form: {\n    padding: spacing.LARGE,\n  },\n  formField: {\n    marginBottom: spacing.LARGE,\n  },\n  label: {\n    fontSize: 14,\n    marginBottom: spacing.SMALL,\n  },\n  input: {\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: spacing.MEDIUM,\n    fontSize: 16,\n    ...(Platform.OS === 'web' && {\n      outlineStyle: 'none',\n    }),\n  },\n  textArea: {\n    height: 80,\n    paddingTop: spacing.MEDIUM,\n    textAlignVertical: 'top',\n  },\n  publicToggle: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n    marginBottom: spacing.LARGE,\n  },\n  publicToggleText: {\n    fontSize: 16,\n  },\n  createButton: {\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  quiverList: {\n    padding: spacing.LARGE,\n  },\n  quiverItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: spacing.MEDIUM,\n    borderBottomWidth: 1,\n  },\n  quiverInfo: {\n    flex: 1,\n    marginRight: spacing.MEDIUM,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  quiverName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  quiverDescription: {\n    fontSize: 14,\n    marginBottom: 4,\n  },\n  quiverMeta: {\n    fontSize: 12,\n  },\n  deleteButton: {\n    padding: spacing.SMALL,\n    borderWidth: 1,\n    borderRadius: 8,\n    minWidth: Platform.OS === 'web' ? 70 : 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 10,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      position: 'relative',\n    }),\n  },\n  deleteIcon: {\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  centerContent: {\n    padding: spacing.LARGE,\n    alignItems: 'center',\n  },\n  message: {\n    fontSize: 16,\n  },\n  standaloneOverlay: {\n    position: 'relative',\n    backgroundColor: 'transparent',\n  },\n  renameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n  },\n  renameInput: {\n    flex: 1,\n    height: 32,\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: spacing.SMALL,\n    fontSize: 14,\n  },\n  renameButton: {\n    paddingHorizontal: spacing.MEDIUM,\n    paddingVertical: spacing.SMALL,\n    borderRadius: 4,\n  },\n  renameButtonText: {\n    fontSize: 12,\n    fontWeight: '500',\n  },\n  quiverNameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n  },\n  renameIcon: {\n    padding: spacing.SMALL,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n}); ","import { Platform } from 'react-native';\n\nexport type Environment = 'development' | 'staging' | 'production';\n\ninterface EnvironmentConfig {\n  apiUrl: string;\n  webUrl: string;\n  appScheme: string;\n}\n\nconst ENV: Environment = process.env.EXPO_PUBLIC_ENV as Environment || 'development';\n\nconst configs: Record<Environment, EnvironmentConfig> = {\n  development: {\n    apiUrl: 'http://localhost:3000',\n    webUrl: 'http://localhost:19006',\n    appScheme: 'foilquiver-dev',\n  },\n  staging: {\n    apiUrl: 'https://api.staging.foilquiver.com',\n    webUrl: 'https://staging.foilquiver.com',\n    appScheme: 'foilquiver-staging',\n  },\n  production: {\n    apiUrl: 'https://api.foilquiver.com',\n    webUrl: 'https://foilquiver.com',\n    appScheme: 'foilquiver',\n  },\n};\n\nexport const getEnvironmentConfig = (): EnvironmentConfig => {\n  return configs[ENV];\n};\n\nexport const getPrefixes = (): string[] => {\n  const config = getEnvironmentConfig();\n  if (Platform.OS === 'web') {\n    return [config.webUrl];\n  }\n  return [`${config.appScheme}://`];\n};\n\nexport const isProduction = () => ENV === 'production';\nexport const isDevelopment = () => ENV === 'development';\nexport const isStaging = () => ENV === 'staging'; ","// Layout constants\nexport const CONTAINER_PADDING = 16;\nexport const MAX_CONTENT_WIDTH = 1200;\nexport const MOBILE_BREAKPOINT = 768;\n\n// Column width constants\nexport const COLUMN_WIDTHS = {\n  brand: 100,\n  series: 120,\n  model: 150,\n  area: 80,\n  wingspan: 80,\n  aspectRatio: 80,\n  type: 80,\n  price: 105,\n  link: 80,\n} as const;\n\nexport type Column = {\n  id: keyof typeof COLUMN_WIDTHS;\n  label: string;\n  isVisible: boolean;\n};\n\n// Default column configuration\nexport const DEFAULT_COLUMNS: Column[] = [\n  { id: 'brand', label: 'Brand', isVisible: true },\n  { id: 'series', label: 'Series', isVisible: false },\n  { id: 'model', label: 'Model', isVisible: true },\n  { id: 'area', label: 'Area', isVisible: true },\n  { id: 'wingspan', label: 'Span', isVisible: true },\n  { id: 'aspectRatio', label: 'AR', isVisible: true },\n  { id: 'type', label: 'Type', isVisible: true },\n  { id: 'price', label: 'Price', isVisible: true },\n  { id: 'link', label: 'Link', isVisible: true },\n];\n\n// Helper functions for width calculations\nexport const getTableWidth = (columns: Column[]) => {\n  return columns.reduce((total, column) => {\n    if (column.isVisible) {\n      return total + (COLUMN_WIDTHS[column.id] || 100);\n    }\n    return total;\n  }, 0);\n};\n\nexport const getContentWidth = (tableWidth: number, screenWidth: number, isMobile: boolean) => {\n  if (isMobile) {\n    return screenWidth;\n  }\n  return Math.min(tableWidth, screenWidth - 48);\n}; ","import React, { createContext, useContext, useState, useEffect, Dispatch, SetStateAction } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\nimport { Column } from '../constants/layout';\nimport { loadColumns, loadFilters, saveFilters } from '../utils/storage';\nimport { DEFAULT_COLUMNS } from '../constants/layout';\nimport { Session, User } from '@supabase/supabase-js';\nimport { supabase } from '../utils/supabase';\n\ninterface AppContextType {\n  // Auth state\n  session: Session | null;\n  user: User | null;\n  \n  // Search state\n  searchQuery: string;\n  setSearchQuery: Dispatch<SetStateAction<string>>;\n  \n  // Filter state\n  filters: FilterOptions;\n  setFilters: Dispatch<SetStateAction<FilterOptions>>;\n  \n  // Column settings\n  columns: Column[];\n  setColumns: Dispatch<SetStateAction<Column[]>>;\n  \n  // Selected foils state\n  selectedFoils: BaseProduct[];\n  setSelectedFoils: Dispatch<SetStateAction<BaseProduct[]>>;\n  \n  // Navigation state\n  currentScreen: string | null;\n  setCurrentScreen: Dispatch<SetStateAction<string | null>>;\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nexport const AppProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  // Auth state\n  const [session, setSession] = useState<Session | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  \n  // Search state\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  // Filter state\n  const [filters, setFilters] = useState<FilterOptions>({\n    brands: [],\n    series: [],\n    type: []\n  });\n  \n  // Column settings\n  const [columns, setColumns] = useState<Column[]>(DEFAULT_COLUMNS);\n  \n  // Selected foils state\n  const [selectedFoils, setSelectedFoils] = useState<BaseProduct[]>([]);\n  \n  // Navigation state - initialize as null to prevent default routing\n  const [currentScreen, setCurrentScreen] = useState<string | null>(null);\n\n  // Initialize auth state and listen for changes\n  useEffect(() => {\n    // Get initial session\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      console.log('AppContext - Initial session:', session?.user?.id);\n      setSession(session);\n      setUser(session?.user ?? null);\n    });\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\n      console.log('AppContext - Auth state changed:', session?.user?.id);\n      setSession(session);\n      setUser(session?.user ?? null);\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  // Load saved filters and columns on mount\n  useEffect(() => {\n    const loadSavedSettings = async () => {\n      try {\n        const savedFilters = await loadFilters();\n        if (savedFilters) {\n          setFilters({\n            brands: savedFilters.brands || [],\n            series: savedFilters.series || [],\n            type: savedFilters.types || []\n          });\n        }\n\n        const savedColumns = await loadColumns();\n        if (savedColumns && Array.isArray(savedColumns)) {\n          setColumns(savedColumns.map((col: Partial<Column>) => ({\n            ...DEFAULT_COLUMNS.find(defaultCol => defaultCol.id === col.id)!,\n            ...col\n          })));\n        }\n      } catch (error) {\n        console.error('Error loading saved settings:', error);\n      }\n    };\n\n    loadSavedSettings();\n  }, []);\n\n  // Save filters when they change\n  useEffect(() => {\n    saveFilters({\n      brands: filters.brands,\n      series: filters.series,\n      types: filters.type\n    });\n  }, [filters]);\n\n  // Reset filters when screen changes\n  useEffect(() => {\n    if (currentScreen) {\n      setFilters({ brands: [], series: [], type: [] });\n    }\n  }, [currentScreen]);\n\n  const value = {\n    session,\n    user,\n    searchQuery,\n    setSearchQuery,\n    filters,\n    setFilters,\n    columns,\n    setColumns,\n    selectedFoils,\n    setSelectedFoils,\n    currentScreen,\n    setCurrentScreen,\n  };\n\n  return (\n    <AppContext.Provider value={value}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}; ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\nimport { groupFoilsByBrand, groupFoilsBySeries } from '../utils/dataTransform';\n\nexport function useFilteredFoils(foils: BaseProduct[], filters: FilterOptions) {\n  const filterOptions = useMemo(() => {\n    const brands = Array.from(new Set(foils.map(foil => foil.brand))).sort();\n    \n    // Group foils by brand\n    const foilsByBrand = groupFoilsByBrand(foils);\n    \n    // Get series based on selected brands\n    let availableSeries: string[] = [];\n    if (filters.brands.length === 0) {\n      // If no brands selected, show all series\n      availableSeries = Array.from(new Set(foils.map(foil => foil.series))).sort();\n    } else {\n      // If brands are selected, only show series from those brands\n      const filteredFoils = filters.brands.flatMap(brand => foilsByBrand[brand] || []);\n      availableSeries = Array.from(new Set(filteredFoils.map(foil => foil.series))).sort();\n    }\n\n    const types = ['front', 'tail'];\n\n    return { brands, series: availableSeries, types };\n  }, [foils, filters.brands]);\n\n  const filteredFoils = useMemo(() => {\n    return foils.filter(foil => {\n      const brandMatch = filters.brands.length === 0 || filters.brands.includes(foil.brand);\n      const seriesMatch = filters.series.length === 0 || filters.series.includes(foil.series);\n      const typeMatch = filters.type.length === 0 || filters.type.includes(foil.type);\n\n      return brandMatch && seriesMatch && typeMatch;\n    });\n  }, [foils, filters.brands, filters.series, filters.type]);\n\n  return {\n    filteredFoils,\n    filterOptions,\n  };\n} ","import { BaseProduct } from '../types/scraper';\n\nexport function formatMeasurement(value: number, unit: string): string {\n  return `${value}${unit}`;\n}\n\nexport function convertArea(cmSquared: number): number {\n  return Math.round(cmSquared * 0.155); // Convert to square inches\n}\n\nexport function calculateAspectRatio(wingspan: number, area: number): number {\n  return Math.round((wingspan * wingspan / area) * 100) / 100;\n}\n\nexport function groupFoilsByBrand(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.brand]) {\n      acc[foil.brand] = [];\n    }\n    acc[foil.brand].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function groupFoilsBySeries(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.series]) {\n      acc[foil.series] = [];\n    }\n    acc[foil.series].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function getUniqueValues(foils: BaseProduct[], key: keyof BaseProduct): string[] {\n  return Array.from(new Set(foils.map(foil => foil[key] as string))).sort();\n} ","import { BaseProduct } from '../types/scraper';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport class ProductService {\n  private static isWeb = Platform.OS === 'web';\n  private static DATA_PATH = '/data/foils.json';\n  private static CACHE_DIR = '.cache';\n\n  // Get base URL for data loading\n  private static getBaseUrl(): string {\n    if (process.env.NODE_ENV === 'development') {\n      return '';\n    }\n    return process.env.NODE_ENV === 'staging' \n      ? 'https://staging.foilquiver.com'\n      : 'https://foilquiver.com';\n  }\n\n  static async getAllProducts(): Promise<BaseProduct[]> {\n    try {\n      if (this.isWeb) {\n        const baseUrl = this.getBaseUrl();\n\n        // Try loading from data directory first\n        try {\n          const response = await fetch(`${baseUrl}${this.DATA_PATH}`);\n          if (response.ok) {\n            const products = await response.json();\n            console.log(`Loaded ${products.length} products from ${this.DATA_PATH}`);\n            return products;\n          } else {\n            console.warn(`Failed to load from ${this.DATA_PATH} (${response.status}), trying .cache directory...`);\n          }\n        } catch (error) {\n          console.warn(`Failed to load from ${this.DATA_PATH}, trying .cache directory...`, error);\n        }\n\n        // Try loading from .cache as fallback\n        try {\n          // Normalize brand names to match file names\n          const brands = ['armstrong', 'lift-foils', 'axis-foils', 'code-foils', 'kt-foils', 'uni-foil'];\n          const allProducts: BaseProduct[] = [];\n          \n          for (const brand of brands) {\n            try {\n              const response = await fetch(`${baseUrl}/${this.CACHE_DIR}/${brand}.json`);\n              if (response.ok) {\n                const products = await response.json();\n                console.log(`Loaded ${products.length} products for ${brand} from .cache`);\n                allProducts.push(...products);\n              }\n            } catch (error) {\n              console.warn(`No cache file found for ${brand}`);\n            }\n          }\n\n          if (allProducts.length > 0) {\n            return allProducts;\n          }\n        } catch (error) {\n          console.warn('Failed to load from .cache directory', error);\n        }\n      } else {\n        // For mobile, use AsyncStorage\n        const cached = await AsyncStorage.getItem('foils');\n        if (cached) {\n          const products = JSON.parse(cached);\n          console.log(`Loaded ${products.length} products from AsyncStorage`);\n          return products;\n        }\n      }\n    } catch (error) {\n      console.error('Error loading foils data:', error);\n    }\n    \n    console.warn('No foils data found in any location');\n    return [];\n  }\n} ","import { useState, useEffect } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { ProductService } from '../services/productService';\n\nexport function useFoils() {\n  const [foils, setFoils] = useState<BaseProduct[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadFoils = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const products = await ProductService.getAllProducts();\n      setFoils(products);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load foils');\n      console.error('Error loading foils:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadFoils();\n  }, []);\n\n  const refreshFoils = () => {\n    loadFoils();\n  };\n\n  return {\n    foils,\n    loading,\n    error,\n    refreshFoils\n  };\n} ","import { useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Platform } from 'react-native';\nimport { supabase } from '../utils/supabase';\nimport { Quiver, CreateQuiverInput, UpdateQuiverInput } from '../types/quiver';\nimport { BaseProduct } from '../types/scraper';\nimport { generateFoilId } from '../utils/foilUtils';\nimport { logger } from '../utils/logger';\nimport { Environment } from '../config/environment';\n\nconst STORAGE_KEYS = {\n  QUIVERS: '@foilquiver/quivers',\n} as const;\n\n// Get the current environment\nconst getEnvironment = (): 'dev' | 'staging' | 'prod' => {\n  if (process.env.NODE_ENV === 'development') return 'dev';\n  if (window.location.hostname.includes('staging')) return 'staging';\n  return 'prod';\n};\n\n// Get the table name for the current environment\nconst getTableName = () => {\n  const env = getEnvironment();\n  return `${env}_quivers`;\n};\n\n// Storage helper that works for both web and native\nconst storage = {\n  getItem: async (key: string): Promise<string | null> => {\n    if (Platform.OS === 'web') {\n      return localStorage.getItem(key);\n    }\n    return AsyncStorage.getItem(key);\n  },\n  setItem: async (key: string, value: string): Promise<void> => {\n    if (Platform.OS === 'web') {\n      localStorage.setItem(key, value);\n      return;\n    }\n    return AsyncStorage.setItem(key, value);\n  },\n  removeItem: async (key: string): Promise<void> => {\n    if (Platform.OS === 'web') {\n      localStorage.removeItem(key);\n      return;\n    }\n    return AsyncStorage.removeItem(key);\n  }\n};\n\n// Local interface for creating quivers\ninterface LocalCreateQuiverInput {\n    name: string;\n    description?: string;\n    foils: BaseProduct[];\n    is_public?: boolean;\n}\n\n// Local interface for syncing quivers\ninterface LocalQuiverData {\n    name: string;\n    description?: string;\n    foils: BaseProduct[];\n    is_public?: boolean;\n}\n\nconst ENV: Environment = process.env.EXPO_PUBLIC_ENV as Environment || 'development';\n\nexport const useQuivers = () => {\n  const [quivers, setQuivers] = useState<Quiver[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadQuivers = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const { data: { session } } = await supabase.auth.getSession();\n      \n      if (session?.user) {\n        const { data, error: supabaseError } = await supabase\n          .from(getTableName())\n          .select('*')\n          .eq('environment', getEnvironment())\n          .eq('user_id', session.user.id)\n          .order('updated_at', { ascending: false });\n\n        if (supabaseError) throw supabaseError;\n        setQuivers(data || []);\n      } else {\n        const storedQuivers = await storage.getItem(STORAGE_KEYS.QUIVERS);\n        if (storedQuivers) {\n          setQuivers(JSON.parse(storedQuivers));\n        } else {\n          setQuivers([]);\n        }\n      }\n    } catch (err) {\n      console.error('Error loading quivers:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load quivers');\n      setQuivers([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const createQuiver = async (input: LocalCreateQuiverInput): Promise<Quiver | null> => {\n    try {\n      setError(null);\n      const { data: { session } } = await supabase.auth.getSession();\n\n      if (session?.user) {\n        const tableName = getTableName();\n        const env = getEnvironment();\n\n        const foil_ids = input.foils.map(foil => generateFoilId(foil));\n\n        const insertData = {\n          name: input.name,\n          description: input.description || '',\n          user_id: session.user.id,\n          environment: env,\n          foil_ids,\n          is_public: input.is_public || false\n        };\n\n        const { error: insertError } = await supabase\n          .from(tableName)\n          .insert(insertData);\n\n        if (insertError) {\n          logger.error('Insert error:', {\n            message: insertError.message,\n            details: insertError.details,\n            hint: insertError.hint,\n            code: insertError.code\n          });\n          throw insertError;\n        }\n\n        const { data: newData, error: selectError } = await supabase\n          .from(tableName)\n          .select('*')\n          .eq('user_id', session.user.id)\n          .eq('name', input.name)\n          .order('created_at', { ascending: false })\n          .limit(1)\n          .single();\n\n        if (selectError) throw selectError;\n        if (!newData) throw new Error('Failed to retrieve created quiver');\n\n        const newQuiver = {\n          ...newData,\n          foils: input.foils\n        };\n\n        setQuivers(prev => [newQuiver, ...prev]);\n        return newQuiver;\n      } else {\n        const env = getEnvironment();\n        const foil_ids = input.foils.map(foil => generateFoilId(foil));\n        \n        const newQuiver: Quiver = {\n          id: crypto.randomUUID(),\n          user_id: '',\n          name: input.name,\n          description: input.description || '',\n          foil_ids,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n          is_public: input.is_public || false,\n          environment: env\n        };\n\n        const updatedQuivers = [newQuiver, ...quivers];\n        await storage.setItem(STORAGE_KEYS.QUIVERS, JSON.stringify(updatedQuivers));\n        setQuivers(updatedQuivers);\n        return newQuiver;\n      }\n    } catch (err) {\n      console.error('Error creating quiver:', err);\n      throw err;\n    }\n  };\n\n  const deleteQuiver = async (id: string): Promise<boolean> => {\n    try {\n      setError(null);\n      const { data: { session } } = await supabase.auth.getSession();\n\n      if (session?.user) {\n        const { error: supabaseError } = await supabase\n          .from(getTableName())\n          .delete()\n          .eq('id', id)\n          .eq('user_id', session.user.id)\n          .eq('environment', getEnvironment());\n\n        if (supabaseError) throw supabaseError;\n      }\n\n      const updatedQuivers = quivers.filter(quiver => quiver.id !== id);\n      setQuivers(updatedQuivers);\n\n      if (!session?.user) {\n        await storage.setItem(STORAGE_KEYS.QUIVERS, JSON.stringify(updatedQuivers));\n      }\n\n      return true;\n    } catch (err) {\n      console.error('Error deleting quiver:', err);\n      setError(err instanceof Error ? err.message : 'Failed to delete quiver');\n      return false;\n    }\n  };\n\n  // Update an existing quiver\n  const updateQuiver = async (quiverId: string, updates: UpdateQuiverInput) => {\n    setError(null);\n    try {\n      const { data: { session } } = await supabase.auth.getSession();\n      \n      if (session?.user) {\n        const { error } = await supabase\n          .from(getTableName())\n          .update(updates)\n          .eq('id', quiverId);\n\n        if (error) throw error;\n        await loadQuivers();\n        return true;\n      } else {\n        // Local storage update logic\n        const storedQuivers = await storage.getItem(STORAGE_KEYS.QUIVERS);\n        if (!storedQuivers) return false;\n\n        const parsedQuivers: Quiver[] = JSON.parse(storedQuivers);\n        const updatedQuivers = parsedQuivers.map(quiver => {\n          if (quiver.id === quiverId) {\n            return {\n              ...quiver,\n              ...updates,\n              updated_at: new Date().toISOString()\n            };\n          }\n          return quiver;\n        });\n\n        await storage.setItem(STORAGE_KEYS.QUIVERS, JSON.stringify(updatedQuivers));\n        setQuivers(updatedQuivers);\n        return true;\n      }\n    } catch (error) {\n      console.error('Error updating quiver:', error);\n      setError('Failed to update quiver');\n      return false;\n    }\n  };\n\n  // Sync storage quivers to Supabase when user logs in\n  const syncQuiversToSupabase = async () => {\n    try {\n      const { data: { session } } = await supabase.auth.getSession();\n      if (!session?.user) return;\n\n      const localQuivers = await storage.getItem(STORAGE_KEYS.QUIVERS);\n      if (!localQuivers) return;\n\n      const parsedQuivers: LocalQuiverData[] = JSON.parse(localQuivers);\n      const env = getEnvironment();\n      \n      // Insert all local quivers to Supabase\n      for (const quiver of parsedQuivers) {\n        const foil_ids = quiver.foils.map(foil => generateFoilId(foil));\n        const insertData = {\n          name: quiver.name,\n          description: quiver.description || '',\n          foil_ids,\n          is_public: quiver.is_public || false,\n          user_id: session.user.id,\n          environment: env\n        };\n        await supabase\n          .from(getTableName())\n          .insert([insertData]);\n      }\n\n      // Clear storage after successful sync\n      await storage.removeItem(STORAGE_KEYS.QUIVERS);\n      \n      // Reload quivers from Supabase\n      await loadQuivers();\n    } catch (err) {\n      console.error('Error syncing quivers:', err);\n    }\n  };\n\n  // Load quivers on mount and when auth state changes\n  useEffect(() => {\n    loadQuivers();\n\n    // Listen for auth state changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event) => {\n      if (event === 'SIGNED_IN') {\n        await syncQuiversToSupabase();\n      }\n      await loadQuivers();\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  return {\n    quivers,\n    isLoading,\n    error,\n    createQuiver,\n    updateQuiver,\n    deleteQuiver,\n    reloadQuivers: loadQuivers,\n  };\n}; ","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useColorScheme } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getColors, ThemeColors } from './colors';\n\ntype ThemeContextType = {\n  isDark: boolean;\n  colors: ThemeColors;\n  toggleTheme: () => void;\n};\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nconst THEME_STORAGE_KEY = '@foilquiver/theme';\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const systemColorScheme = useColorScheme();\n  const [isDark, setIsDark] = useState<boolean>(systemColorScheme === 'dark');\n\n  useEffect(() => {\n    // Load saved theme preference\n    const loadTheme = async () => {\n      try {\n        const savedTheme = await AsyncStorage.getItem(THEME_STORAGE_KEY);\n        if (savedTheme !== null) {\n          setIsDark(savedTheme === 'dark');\n        }\n      } catch (error) {\n        console.error('Error loading theme:', error);\n      }\n    };\n\n    loadTheme();\n  }, []);\n\n  const toggleTheme = async () => {\n    try {\n      const newTheme = !isDark;\n      setIsDark(newTheme);\n      await AsyncStorage.setItem(THEME_STORAGE_KEY, newTheme ? 'dark' : 'light');\n    } catch (error) {\n      console.error('Error saving theme:', error);\n    }\n  };\n\n  const colors = getColors(isDark ? 'dark' : 'light');\n\n  return (\n    <ThemeContext.Provider value={{ isDark, colors, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}; ","import { ColorSchemeName } from 'react-native';\n\nexport type ThemeColors = {\n  background: {\n    primary: string;\n    secondary: string;\n    tertiary: string;\n  };\n  text: {\n    primary: string;\n    secondary: string;\n    tertiary: string;\n    inverse: string;\n  };\n  border: string;\n  primary: string;\n  error: string;\n  success: string;\n  warning: string;\n};\n\n// Sunset theme colors (accent colors)\nconst SPACE_CADET = '#1F214D';\nconst EMINENCE = '#50366F';\nconst MAGENTA_DYE = '#BF3475';\nconst BURNT_SIENNA = '#EE6C45';\nconst SUNGLOW = '#FFCE61';\n\n// Neutral colors for text and backgrounds\nconst NEUTRAL = {\n  50: '#F9FAFB',\n  100: '#F3F4F6',\n  200: '#E5E7EB',\n  300: '#D1D5DB',\n  400: '#9CA3AF',\n  500: '#6B7280',\n  600: '#4B5563',\n  700: '#374151',\n  800: '#1F2937',\n  900: '#111827',\n};\n\nconst lightColors: ThemeColors = {\n  background: {\n    primary: NEUTRAL[50],\n    secondary: NEUTRAL[100],\n    tertiary: NEUTRAL[200],\n  },\n  text: {\n    primary: NEUTRAL[900],\n    secondary: NEUTRAL[700],\n    tertiary: NEUTRAL[500],\n    inverse: NEUTRAL[50],\n  },\n  border: NEUTRAL[200],\n  primary: MAGENTA_DYE,\n  error: '#DC2626',\n  success: '#059669',\n  warning: SUNGLOW,\n};\n\nconst darkColors: ThemeColors = {\n  background: {\n    primary: NEUTRAL[900],\n    secondary: NEUTRAL[800],\n    tertiary: NEUTRAL[700],\n  },\n  text: {\n    primary: NEUTRAL[50],\n    secondary: NEUTRAL[200],\n    tertiary: NEUTRAL[400],\n    inverse: NEUTRAL[900],\n  },\n  border: NEUTRAL[700],\n  primary: MAGENTA_DYE,\n  error: '#EF4444',\n  success: '#10B981',\n  warning: SUNGLOW,\n};\n\nexport const getColors = (colorScheme: ColorSchemeName): ThemeColors => {\n  return colorScheme === 'dark' ? darkColors : lightColors;\n};\n\n// For backward compatibility\nexport const colors = lightColors; \n\n","export const spacing = {\n  XSMALL: 4,\n  SMALL: 8,\n  MEDIUM: 12,\n  LARGE: 16,\n  XLARGE: 24,\n  XXLARGE: 32,\n  \n  // Component-specific spacing\n  CONTAINER_PADDING: 24,\n  BUTTON_PADDING_H: 16,\n  BUTTON_PADDING_V: 8,\n  BUTTON_GAP: 12,\n  CONTROLS_BOTTOM: 24,\n\n  // Screen and view layout\n  SCREEN_PADDING: 24,\n  TABLE_CONTAINER_PADDING: 24,\n  HEADER_PADDING: 12,\n  CONTENT_PADDING: 16,\n  \n  // Controls and bottom elements\n  CONTROLS_CONTAINER_BOTTOM: 24,\n  CONTROLS_CONTAINER_PADDING: 24,\n} as const; ","import { Platform } from 'react-native';\n\ninterface PlausibleEvent {\n  name: string;\n  props?: Record<string, string | number | boolean>;\n}\n\ndeclare global {\n  interface Window {\n    plausible?: (eventName: string, options?: { props: Record<string, any> }) => void;\n  }\n}\n\nexport const trackEvent = (event: PlausibleEvent) => {\n  if (Platform.OS === 'web' && window.plausible) {\n    window.plausible(event.name, event.props ? { props: event.props } : undefined);\n  }\n};\n\nexport const trackPageView = (screenName: string, props?: Record<string, any>) => {\n  trackEvent({\n    name: 'pageview',\n    props: {\n      page: screenName,\n      ...props\n    }\n  });\n};\n\nexport const trackAction = (action: string, props?: Record<string, any>) => {\n  trackEvent({\n    name: action,\n    props\n  });\n};\n\n// Common analytics events\nexport const ANALYTICS_EVENTS = {\n  // Page views\n  VIEW_COMPARISON: 'view_comparison',\n  VIEW_QUIVER: 'view_quiver',\n  \n  // Actions\n  COMPARE_FOILS: 'compare_foils',\n  SAVE_QUIVER: 'save_quiver',\n  DELETE_QUIVER: 'delete_quiver',\n  UPDATE_QUIVER: 'update_quiver',\n  FILTER_FOILS: 'filter_foils',\n  SORT_FOILS: 'sort_foils',\n  SEARCH_FOILS: 'search_foils',\n} as const; ","export const generateFoilId = (foil: BaseProduct): string => {\n  return `${foil.brand.toLowerCase()}-${foil.model.toLowerCase().replace(/\\s+/g, '-')}`;\n}; ","type LogLevel = 'debug' | 'info' | 'warn' | 'error';\n\nclass Logger {\n  private static instance: Logger;\n  private isDevelopment = process.env.NODE_ENV === 'development' || __DEV__;\n\n  private constructor() {\n    // Log environment status on initialization\n    if (this.isDevelopment) {\n      console.info('[Logger] Initialized in development mode');\n      console.info('[Logger] Environment:', process.env.NODE_ENV);\n    }\n  }\n\n  static getInstance(): Logger {\n    if (!Logger.instance) {\n      Logger.instance = new Logger();\n    }\n    return Logger.instance;\n  }\n\n  private log(level: LogLevel, message: string, ...args: any[]) {\n    // Always log errors, only log other levels in development\n    if (this.isDevelopment || level === 'error') {\n      const timestamp = new Date().toISOString();\n      const formattedMessage = `[${timestamp}] [${level.toUpperCase()}] ${message}`;\n      \n      switch (level) {\n        case 'debug':\n          console.debug(formattedMessage, ...args);\n          break;\n        case 'info':\n          console.info(formattedMessage, ...args);\n          break;\n        case 'warn':\n          console.warn(formattedMessage, ...args);\n          break;\n        case 'error':\n          console.error(formattedMessage, ...args);\n          break;\n      }\n    }\n  }\n\n  debug(message: string, ...args: any[]) {\n    this.log('debug', message, ...args);\n  }\n\n  info(message: string, ...args: any[]) {\n    this.log('info', message, ...args);\n  }\n\n  warn(message: string, ...args: any[]) {\n    this.log('warn', message, ...args);\n  }\n\n  error(message: string, ...args: any[]) {\n    this.log('error', message, ...args);\n  }\n}\n\nexport const logger = Logger.getInstance(); ","export const routes = {\n  browse: '/',\n  comparison: '/comparison',\n  quiver: '/quiver/:quiverId',\n  terms: '/terms',\n  privacy: '/privacy',\n  contact: '/contact',\n} as const;\n\n// Add a helper function to clean routes for navigation\nexport const cleanRoute = (route: string) => route.slice(1); // Remove leading slash \n\nexport const getRouteFromPath = (path: string) => {\n  return path.startsWith('/') ? path : `/${path}`;\n}; ","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { logger } from './logger';\nimport { FilterOptions } from '../types/filters';\nimport { SortField } from '../hooks/useSortedFoils';\n\nconst STORAGE_KEYS = {\n  FILTERS: '@foilquiver/filters',\n  COLUMNS: '@foilquiver/columns',\n  THEME: '@foilquiver/theme',\n  SORT: '@foilquiver/sort',\n} as const;\n\nexport interface StoredFilters {\n  brands: string[];\n  series: string[];\n  types: string[];\n}\n\nexport interface StoredColumns {\n  [key: string]: boolean;\n}\n\nexport interface StoredSort {\n  field: SortField;\n  ascending: boolean;\n}\n\nclass Storage {\n  async set(key: string, value: any): Promise<void> {\n    try {\n      const jsonValue = JSON.stringify(value);\n      await AsyncStorage.setItem(key, jsonValue);\n    } catch (error) {\n      logger.error('Error setting storage item:', error);\n      throw error;\n    }\n  }\n\n  async get<T>(key: string): Promise<T | null> {\n    try {\n      const jsonValue = await AsyncStorage.getItem(key);\n      return jsonValue != null ? JSON.parse(jsonValue) : null;\n    } catch (error) {\n      logger.error('Error getting storage item:', error);\n      throw error;\n    }\n  }\n\n  async remove(key: string): Promise<void> {\n    try {\n      await AsyncStorage.removeItem(key);\n    } catch (error) {\n      logger.error('Error removing storage item:', error);\n      throw error;\n    }\n  }\n\n  async clear(): Promise<void> {\n    try {\n      await AsyncStorage.clear();\n    } catch (error) {\n      logger.error('Error clearing storage:', error);\n      throw error;\n    }\n  }\n\n  async getAllKeys(): Promise<readonly string[]> {\n    try {\n      return await AsyncStorage.getAllKeys();\n    } catch (error) {\n      logger.error('Error getting all storage keys:', error);\n      throw error;\n    }\n  }\n}\n\nexport const storage = new Storage();\n\nexport const saveFilters = async (filters: StoredFilters) => {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEYS.FILTERS, JSON.stringify(filters));\n  } catch (error) {\n    console.error('Error saving filters:', error);\n  }\n};\n\nexport const loadFilters = async (): Promise<StoredFilters | null> => {\n  try {\n    const savedFilters = await AsyncStorage.getItem(STORAGE_KEYS.FILTERS);\n    return savedFilters ? JSON.parse(savedFilters) : null;\n  } catch (error) {\n    console.error('Error loading filters:', error);\n    return null;\n  }\n};\n\nexport const saveColumns = async (columns: StoredColumns) => {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEYS.COLUMNS, JSON.stringify(columns));\n  } catch (error) {\n    console.error('Error saving columns:', error);\n  }\n};\n\nexport const loadColumns = async (): Promise<StoredColumns | null> => {\n  try {\n    const savedColumns = await AsyncStorage.getItem(STORAGE_KEYS.COLUMNS);\n    return savedColumns ? JSON.parse(savedColumns) : null;\n  } catch (error) {\n    console.error('Error loading columns:', error);\n    return null;\n  }\n};\n\nexport const saveSortOption = async (sort: StoredSort) => {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEYS.SORT, JSON.stringify(sort));\n  } catch (error) {\n    console.error('Error saving sort option:', error);\n  }\n};\n\nexport const loadSortOption = async (): Promise<StoredSort | null> => {\n  try {\n    const savedSort = await AsyncStorage.getItem(STORAGE_KEYS.SORT);\n    return savedSort ? JSON.parse(savedSort) : null;\n  } catch (error) {\n    console.error('Error loading sort option:', error);\n    return null;\n  }\n};\n\nexport const clearAllSettings = async () => {\n  try {\n    const keys = Object.values(STORAGE_KEYS);\n    await AsyncStorage.multiRemove(keys);\n  } catch (error) {\n    console.error('Error clearing settings:', error);\n  }\n}; ","import { createClient } from '@supabase/supabase-js';\nimport { Platform } from 'react-native';\nimport { SUPABASE_URL, SUPABASE_ANON_KEY } from '../config/env';\nimport { getEnvironmentConfig } from '../config/environment';\n\n// Get the site URL based on the environment\nconst getSiteUrl = () => {\n  if (Platform.OS !== 'web') return undefined;\n  \n  const config = getEnvironmentConfig();\n  return config.webUrl;\n};\n\n// Initialize the Supabase client\nexport const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {\n  auth: {\n    detectSessionInUrl: true,\n    flowType: 'pkce',\n    autoRefreshToken: true,\n    persistSession: true,\n    storage: {\n      getItem: (key: string) => {\n        if (Platform.OS === 'web') {\n          const item = localStorage.getItem(key);\n          return Promise.resolve(item);\n        }\n        return null;\n      },\n      setItem: (key: string, value: string) => {\n        if (Platform.OS === 'web') {\n          localStorage.setItem(key, value);\n          return Promise.resolve();\n        }\n        return Promise.resolve();\n      },\n      removeItem: (key: string) => {\n        if (Platform.OS === 'web') {\n          localStorage.removeItem(key);\n          return Promise.resolve();\n        }\n        return Promise.resolve();\n      },\n    },\n  },\n}); ","// Supabase Configuration\nexport const SUPABASE_URL = 'https://zhylhvuhhoialsgqrxxr.supabase.co';\nexport const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpoeWxodnVoaG9pYWxzZ3FyeHhyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzkxNjM3NTgsImV4cCI6MjA1NDczOTc1OH0.wrZ05wA3EcbBubG3Mrxmx--fA9ThE2_M9k9WYTmGpag';\n\n// Google OAuth Configuration\nexport const GOOGLE_CLIENT_ID = '159399186219-fagq1jdgjps8q6fq70e9ua8pnmjac7bs.apps.googleusercontent.com'; "],"names":["ErrorBoundary","React","constructor","props","super","this","state","hasError","error","getDerivedStateFromError","componentDidCatch","errorInfo","handleRetry","setState","render","_jsx","ErrorView","onRetry","children","colors","useTheme","View","style","styles","container","backgroundColor","background","primary","_jsxs","content","Text","title","color","message","text","secondary","TouchableOpacity","button","onPress","buttonText","inverse","__DEV__","StyleSheet","create","flex","alignItems","justifyContent","padding","spacing","LARGE","maxWidth","width","fontSize","fontWeight","marginBottom","MEDIUM","textAlign","Object","assign","paddingHorizontal","paddingVertical","borderRadius","Platform","OS","cursor","stack","fontFamily","marginTop","SearchBar","value","onChangeText","onClear","placeholder","autoFocus","mode","onFocus","searchIcon","Ionicons","name","size","TextInput","input","getPlaceholder","placeholderTextColor","tertiary","autoCapitalize","autoCorrect","clearButtonMode","returnKeyType","maxFontSizeMultiplier","spellCheck","autoComplete","keyboardType","clearButton","clearIcon","flexDirection","height","gap","SMALL","outlineStyle","border","lineHeight","aspectRatio","useGoogleAuth","isLoading","setIsLoading","useState","signInWithGoogle","async","data","Error","redirectTo","getRedirectUrl","origin","window","location","hostname","includes","supabase","auth","signInWithOAuth","provider","options","queryParams","access_type","prompt","GoogleSignIn","onSuccess","Alert","alert","AuthError","disabled","ActivityIndicator","_Fragment","src","alt","marginRight","icon","minWidth","TableSettings","filterOptions","selectedBrands","selectedSeries","selectedTypes","onFilterChange","onClearFilters","columns","onColumnVisibilityChange","onResetColumns","foils","isOpen","setIsOpen","activeTab","setActiveTab","isDark","toggleTheme","isQuiversModalVisible","setIsQuiversModalVisible","session","user","useApp","handleSignOut","signOut","availableSeries","useMemo","length","series","seriesSet","Set","forEach","foil","brand","add","Array","from","sort","Pressable","iconButton","MaterialIcons","Modal","visible","transparent","animationType","onRequestClose","modalOverlay","modalContent","e","stopPropagation","modalHeader","borderBottomColor","modalTitle","closeButton","tabs","tab","tabText","activeTabText","some","col","isVisible","contentWrapper","ScrollView","scrollView","contentContainerStyle","scrollContent","headerWithAction","contentTitle","clearButtonText","section","sectionTitle","chipContainer","brands","map","chip","chipSelected","chipText","chipTextSelected","types","type","noSeriesText","columnList","column","columnItem","id","columnLabel","label","checkbox","borderColor","checkboxChecked","menuButton","menuButtonContent","menuButtonText","userInfo","user_metadata","avatar_url","Image","source","uri","avatarImage","userTextInfo","userName","full_name","email","userEmail","menuDivider","signOutButton","onStartShouldSetResponder","QuiverManager","selectedFoils","onClose","initialTab","standalone","position","XSMALL","maxHeight","overflow","borderBottomWidth","buttonGroup","columnGroup","filterGroup","filterList","flexGrow","flexWrap","borderWidth","BrowseScreen","ComparisonScreen","QuiverScreen","PrivacyPolicy","TermsOfService","Contact","Stack","createNativeStackNavigator","ICON_NAMES","home","browse","compare","settings","quiver","TabBarIcon","webIcons","getEnvironmentConfig","webUrl","routes","comparison","terms","privacy","contact","ScreenWrapper","_ref","_objectWithoutPropertiesLoose","_excluded","Suspense","fallback","LoadingIndicator","AppHeader","navigation","useNavigation","useWindowDimensions","isMobile","MOBILE_BREAKPOINT","useFoils","searchQuery","setSearchQuery","filters","setFilters","setColumns","setCurrentScreen","useFilteredFoils","showQuiverManager","useContext","QuiverContext","handleLogoPress","navigate","handleSearch","setParams","getViewMode","route","getSearchPlaceholder","handleSearchFocus","showSearchDropdown","handleFilterChangeWrapper","handleFilterChange","prev","filter","item","handleClearFilters","handleColumnVisibilityChange","columnId","handleResetColumns","DEFAULT_COLUMNS","tableWidth","getTableWidth","getContentWidth","Math","min","CONTAINER_PADDING","useEffect","savedColumns","loadColumns","updatedColumns","loadSavedColumnSettings","savedFilters","loadFilters","loadSavedSettings","headerMainContainerStyle","containerWidth","alignSelf","renderHeaderRight","headerRightContainerWeb","headerButton","headerButtonText","Navigator","screenOptions","headerStyle","headerShadowVisible","Screen","headerTitle","params","headerLeft","headerOuterContainer","headerMainContainerMobile","pressed","logoContainer","logoPressed","headerMainContainerWeb","headerContentWeb","searchBarContainerWeb","currentQuiverFoils","foil_ids","isArray","f","foilId","generateFoilId","searchProps","tableSettingsProps","headerShown","headerRightContainerMobile","paddingRight","zIndex","searchBarContainerMobile","opacity","userSelect","hideQuiverManager","registerRootComponent","navigationRef","createNavigationContainerRef","isQuiverManagerVisible","setIsQuiverManagerVisible","linking","prefixes","getPrefixes","config","screens","Browse","path","parse","stringify","Comparison","exact","quiverName","JSON","Quiver","quiverId","undefined","Terms","Privacy","getStateFromPath","getPathFromState","ThemeProvider","AppProvider","Provider","HelmetProvider","SafeAreaProvider","NavigationContainer","ref","isModalVisible","fullScreen","hideStandaloneButton","onQuiverSaved","setSelectedFoils","isModalVisibleInternal","setIsModalVisibleInternal","modalVisible","setName","description","setDescription","isPublic","setIsPublic","editingQuiverId","setEditingQuiverId","editingName","setEditingName","quivers","createQuiver","deleteQuiver","reloadQuivers","updateQuiver","useQuivers","handleSaveRename","trim","trackAction","ANALYTICS_EVENTS","UPDATE_QUIVER","action","getFoilCount","tabContainer","modalBody","form","formField","textArea","multiline","numberOfLines","publicToggle","publicToggleText","createButton","result","is_public","SAVE_QUIVER","foilCount","quiverList","centerContent","quiverItem","quiverInfo","handleViewQuiver","renameContainer","renameInput","renameButton","renameButtonText","quiverNameContainer","handleStartRename","renameIcon","quiverDescription","quiverMeta","Date","updated_at","toLocaleDateString","onClick","confirm","then","success","catch","borderStyle","display","pointerEvents","deleteButton","Promise","resolve","cancelable","DELETE_QUIVER","handleDeleteQuiver","saveButton","standaloneOverlay","activeOpacity","modalContentMobile","preventDefault","minHeight","boxShadow","top","left","right","bottom","paddingTop","textAlignVertical","deleteIcon","ENV","process","EXPO_PUBLIC_ENV","configs","development","apiUrl","appScheme","staging","production","COLUMN_WIDTHS","model","area","wingspan","price","link","reduce","total","screenWidth","AppContext","createContext","setSession","setUser","currentScreen","getSession","subscription","onAuthStateChange","_event","unsubscribe","find","defaultCol","saveFilters","context","foilsByBrand","acc","push","groupFoilsByBrand","filteredFoils","flatMap","brandMatch","seriesMatch","typeMatch","ProductService","getBaseUrl","getAllProducts","isWeb","baseUrl","response","fetch","DATA_PATH","ok","json","allProducts","CACHE_DIR","products","cached","AsyncStorage","getItem","setFoils","loading","setLoading","setError","loadFoils","err","refreshFoils","STORAGE_KEYS","getEnvironment","getTableName","storage","localStorage","key","setItem","removeItem","setQuivers","loadQuivers","supabaseError","select","eq","order","ascending","storedQuivers","event","localQuivers","parsedQuivers","env","insertData","user_id","environment","insert","syncQuiversToSupabase","tableName","insertError","logger","details","hint","code","newData","selectError","limit","single","newQuiver","crypto","randomUUID","created_at","toISOString","updatedQuivers","updates","update","delete","ThemeContext","THEME_STORAGE_KEY","systemColorScheme","useColorScheme","setIsDark","savedTheme","loadTheme","getColors","newTheme","MAGENTA_DYE","SUNGLOW","NEUTRAL","lightColors","warning","darkColors","colorScheme","XLARGE","XXLARGE","BUTTON_PADDING_H","BUTTON_PADDING_V","BUTTON_GAP","CONTROLS_BOTTOM","SCREEN_PADDING","TABLE_CONTAINER_PADDING","HEADER_PADDING","CONTENT_PADDING","CONTROLS_CONTAINER_BOTTOM","CONTROLS_CONTAINER_PADDING","trackEvent","plausible","trackPageView","screenName","page","VIEW_COMPARISON","VIEW_QUIVER","COMPARE_FOILS","FILTER_FOILS","SORT_FOILS","SEARCH_FOILS","toLowerCase","replace","Logger","isDevelopment","getInstance","instance","log","level","args","toUpperCase","debug","info","warn","FILTERS","COLUMNS","THEME","SORT","set","jsonValue","get","remove","clear","getAllKeys","saveSortOption","loadSortOption","savedSort","createClient","detectSessionInUrl","flowType","autoRefreshToken","persistSession"],"sourceRoot":""}