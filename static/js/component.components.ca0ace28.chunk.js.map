{"version":3,"file":"static/js/component.components.ca0ace28.chunk.js","mappings":"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","sources":["src/components/ComparisonControls.tsx","src/components/ComparisonView.tsx","src/components/FilterControls.tsx","src/components/FoilsTable.tsx","src/components/Footer.tsx","src/components/SEOHead.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../constants/spacing';\nimport { colors } from '../theme/colors';\n\ninterface ComparisonControlsProps {\n  selectedFoils: BaseProduct[];\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  onClearSelection: () => void;\n  isComparisonView?: boolean;\n}\n\nconst WebWrapper = Platform.select({\n  web: ({ children }: { children: React.ReactNode }) => (\n    <div style={{\n      position: 'fixed',\n      bottom: 80,\n      left: 0,\n      right: 0,\n      zIndex: 2000,\n      pointerEvents: 'none',\n    }}>\n      <div style={{ \n        pointerEvents: 'auto', \n        display: 'flex', \n        justifyContent: 'flex-end', \n        paddingRight: spacing.LARGE,\n        paddingBottom: spacing.MEDIUM,\n      }}>\n        {children}\n      </div>\n    </div>\n  ),\n  default: ({ children }: { children: React.ReactNode }) => <>{children}</>,\n});\n\nconst ComparisonControls = ({ selectedFoils, onCompareSelected, onExitCompare, onClearSelection, isComparisonView }: ComparisonControlsProps) => {\n  // Only show controls if there are selected foils or we're in comparison view\n  if (selectedFoils.length === 0 && !isComparisonView) {\n    return null;\n  }\n\n  const content = !isComparisonView ? (\n    <View style={styles.comparisonBar}>\n      <Text style={styles.selectionText}>\n        Selected: {selectedFoils.length}\n      </Text>\n      <View style={styles.buttonGroup}>\n        <Pressable\n          style={[styles.button, styles.clearButton]}\n          onPress={onClearSelection}\n        >\n          <Text style={[styles.buttonText, styles.clearButtonText]}>Clear</Text>\n        </Pressable>\n        <Pressable\n          style={[styles.button, selectedFoils.length < 2 && styles.buttonDisabled]}\n          onPress={onCompareSelected}\n          disabled={selectedFoils.length < 2}\n        >\n          <Text style={styles.buttonText}>Compare</Text>\n        </Pressable>\n      </View>\n    </View>\n  ) : (\n    <View style={styles.comparisonBar}>\n      <Pressable\n        style={[styles.button, styles.cancelButton]}\n        onPress={onExitCompare}\n      >\n        <Text style={styles.buttonText}>Back</Text>\n      </Pressable>\n    </View>\n  );\n\n  return Platform.OS === 'web' ? (\n    <WebWrapper>{content}</WebWrapper>\n  ) : (\n    <View style={styles.container}>\n      {content}\n    </View>\n  );\n};\n\nexport default ComparisonControls;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: colors.background.secondary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n  },\n  comparisonBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  floatingButton: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonDisabled: {\n    backgroundColor: colors.text.muted,\n    opacity: 0.5,\n  },\n  clearButton: {\n    backgroundColor: colors.background.primary,\n    borderWidth: 1,\n    borderColor: colors.secondary,\n  },\n  cancelButton: {\n    backgroundColor: colors.secondary,\n  },\n  buttonText: {\n    color: colors.background.primary,\n    fontWeight: '600',\n    fontSize: 14,\n  },\n  selectionText: {\n    fontSize: 14,\n    color: colors.text.secondary,\n    marginRight: spacing.MEDIUM,\n  },\n  selectedCount: {\n    color: colors.text.secondary,\n    fontSize: 16,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  compareButton: {\n    backgroundColor: colors.primary,\n  },\n  compareButtonText: {\n    color: colors.background.primary,\n  },\n  clearButtonText: {\n    color: colors.secondary,\n  }\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FoilsTable } from './FoilsTable';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\n\ninterface ComparisonViewProps {\n  foils: BaseProduct[];\n  onClose?: () => void;\n  onCompare?: () => void;\n}\n\nconst ComparisonView = ({ foils, onClose, onCompare }: ComparisonViewProps) => {\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(foils);\n  \n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleSelect = () => {};\n  const isSelected = () => false;\n\n  return (\n    <View style={styles.container}>\n      <FoilsTable\n        foils={sortedFoils}\n        onSort={handleSort}\n        onFoilSelect={handleSelect}\n        isSelected={isSelected}\n        sortOption={{\n          field: sortOption.field,\n          ascending: sortOption.direction === 'asc'\n        }}\n      />\n    </View>\n  );\n};\n\nexport default ComparisonView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  }\n});","import React, { useState } from 'react';\nimport { View, Text, Pressable, StyleSheet, Animated, LayoutChangeEvent } from 'react-native';\nimport { colors } from '../theme/colors';\nimport { FilterOptions } from '../types/filters';\nimport { Ionicons } from '@expo/vector-icons';\n\ninterface FilterControlsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n}\n\nexport function FilterControls({\n  filterOptions,\n  selectedBrands,\n  selectedSeries,\n  selectedTypes,\n  onFilterChange,\n}: FilterControlsProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [animation] = useState(new Animated.Value(0));\n  const [contentHeight, setContentHeight] = useState(0);\n\n  const toggleExpanded = () => {\n    const toValue = isExpanded ? 0 : 1;\n    Animated.spring(animation, {\n      toValue,\n      useNativeDriver: false,\n      friction: 10,\n    }).start();\n    setIsExpanded(!isExpanded);\n  };\n\n  const handleLayout = (event: LayoutChangeEvent) => {\n    const { height } = event.nativeEvent.layout;\n    setContentHeight(height);\n  };\n\n  const animatedHeight = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, contentHeight],\n  });\n\n  return (\n    <View style={styles.wrapper}>\n      <Pressable onPress={toggleExpanded} style={styles.header}>\n        <View style={styles.headerContent}>\n          <Text style={styles.headerTitle}>Filters</Text>\n          <View style={styles.filterSummary}>\n            {selectedBrands.length > 0 && (\n              <Text style={styles.filterCount}>Brands: {selectedBrands.length}</Text>\n            )}\n            {selectedTypes.length > 0 && (\n              <Text style={styles.filterCount}>Types: {selectedTypes.length}</Text>\n            )}\n            {selectedSeries.length > 0 && (\n              <Text style={styles.filterCount}>Series: {selectedSeries.length}</Text>\n            )}\n          </View>\n        </View>\n        <Ionicons \n          name={isExpanded ? 'chevron-up' : 'chevron-down'} \n          size={24} \n          color={colors.text.secondary}\n        />\n      </Pressable>\n\n      <Animated.View style={[styles.content, { height: animatedHeight }]}>\n        <View style={styles.container} onLayout={handleLayout}>\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Brand</Text>\n            <View style={styles.chipContainer}>\n              {filterOptions.brands.map((brand) => (\n                <Pressable\n                  key={brand}\n                  style={[\n                    styles.chip,\n                    selectedBrands.includes(brand) && styles.chipSelected,\n                  ]}\n                  onPress={() => onFilterChange('brands', brand)}\n                >\n                  <Text \n                    style={[\n                      styles.chipText,\n                      selectedBrands.includes(brand) && styles.chipTextSelected,\n                    ]}\n                  >\n                    {brand}\n                  </Text>\n                </Pressable>\n              ))}\n            </View>\n          </View>\n\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Type</Text>\n            <View style={styles.chipContainer}>\n              {filterOptions.types.map((type) => (\n                <Pressable\n                  key={type}\n                  style={[\n                    styles.chip,\n                    selectedTypes.includes(type) && styles.chipSelected,\n                  ]}\n                  onPress={() => onFilterChange('type', type)}\n                >\n                  <Text \n                    style={[\n                      styles.chipText,\n                      selectedTypes.includes(type) && styles.chipTextSelected,\n                    ]}\n                  >\n                    {type}\n                  </Text>\n                </Pressable>\n              ))}\n            </View>\n          </View>\n\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Series</Text>\n            <View style={styles.chipContainer}>\n              {filterOptions.series.map((series) => (\n                <Pressable\n                  key={series}\n                  style={[\n                    styles.chip,\n                    selectedSeries.includes(series) && styles.chipSelected,\n                  ]}\n                  onPress={() => onFilterChange('series', series)}\n                >\n                  <Text \n                    style={[\n                      styles.chipText,\n                      selectedSeries.includes(series) && styles.chipTextSelected,\n                    ]}\n                  >\n                    {series}\n                  </Text>\n                </Pressable>\n              ))}\n            </View>\n          </View>\n        </View>\n      </Animated.View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: colors.background.primary,\n    marginBottom: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: colors.border,\n    overflow: 'hidden',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: colors.background.primary,\n  },\n  headerContent: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n  },\n  headerTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: colors.text.primary,\n  },\n  filterSummary: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  filterCount: {\n    fontSize: 14,\n    color: colors.text.secondary,\n  },\n  content: {\n    overflow: 'hidden',\n  },\n  container: {\n    padding: 16,\n    paddingTop: 0,\n  },\n  section: {\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: colors.text.primary,\n    marginBottom: 8,\n  },\n  chipContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  chip: {\n    backgroundColor: colors.background.secondary,\n    borderRadius: 16,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n  },\n  chipSelected: {\n    backgroundColor: colors.primary,\n  },\n  chipText: {\n    color: colors.text.secondary,\n    fontSize: 14,\n  },\n  chipTextSelected: {\n    color: colors.background.primary,\n  },\n}); ","/**\n * FoilsTable Component\n * \n * IMPORTANT: Column Alignment\n * - The table uses fixed column widths for consistent layout and horizontal scrolling\n * - Each column width in headerCell must match the corresponding cell width\n * - Current widths:\n *   - Regular columns (brand, model, type, series): 150px\n *   - Number columns (area, wingspan, AR, price): 100px\n *   - Link column: 100px\n * - When modifying column styles, always update both headerCell and cell styles to maintain alignment\n * - Table has a minWidth of 1200px to ensure proper layout on all screen sizes\n */\n\nimport React from 'react';\nimport { View, Text, Pressable, ScrollView, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { colors } from '../theme/colors';\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  onSort: (field: SortField) => void;\n  onFoilSelect: (foil: BaseProduct) => void;\n  isSelected: (foil: BaseProduct) => boolean;\n  sortOption: { field: SortField; ascending: boolean };\n}\n\nconst MOBILE_BREAKPOINT = 768;\nconst TABLE_WIDTH = 930; // 100 + 150 + 80 + 120 + (100 * 4) + 80\n\nexport function FoilsTable({\n  foils,\n  onSort,\n  onFoilSelect,\n  isSelected,\n  sortOption,\n}: FoilsTableProps) {\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n\n  const renderSortIcon = (field: SortField) => {\n    const isActive = sortOption.field === field;\n    \n    return (\n      <View style={styles.sortIconContainer}>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconUp,\n          isActive && sortOption.ascending && styles.sortIconUpActive\n        ]}>▲</Text>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconDown,\n          isActive && !sortOption.ascending && styles.sortIconDownActive\n        ]}>▼</Text>\n      </View>\n    );\n  };\n\n  const getHeaderTextStyle = (field: SortField) => {\n    return styles.headerText;\n  };\n\n  return (\n    <View style={[\n      styles.container,\n      isMobile && styles.containerMobile\n    ]}>\n      <View style={[\n        styles.tableWrapper,\n        isMobile && styles.tableWrapperMobile\n      ]}>\n        <ScrollView \n          horizontal \n          showsHorizontalScrollIndicator={true}\n          contentContainerStyle={styles.scrollViewContent}\n          style={isMobile && styles.scrollViewMobile}\n        >\n          <View style={styles.tableContent}>\n            <View style={styles.tableHeader}>\n              <View style={styles.headerRow}>\n                <Pressable style={styles.headerCell} onPress={() => onSort('brand')}>\n                  <Text style={getHeaderTextStyle('brand')}>Brand</Text>\n                  {renderSortIcon('brand')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.modelCell]} onPress={() => onSort('model')}>\n                  <Text style={getHeaderTextStyle('model')}>Model</Text>\n                  {renderSortIcon('model')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.typeCell]} onPress={() => onSort('type')}>\n                  <Text style={getHeaderTextStyle('type')}>Type</Text>\n                  {renderSortIcon('type')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.seriesCell]} onPress={() => onSort('series')}>\n                  <Text style={getHeaderTextStyle('series')}>Series</Text>\n                  {renderSortIcon('series')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('area')}>\n                  <Text style={[getHeaderTextStyle('area'), styles.numberHeaderText]}>Area</Text>\n                  {renderSortIcon('area')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('wingspan')}>\n                  <Text style={[getHeaderTextStyle('wingspan'), styles.numberHeaderText]}>Span</Text>\n                  {renderSortIcon('wingspan')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('aspectRatio')}>\n                  <Text style={[getHeaderTextStyle('aspectRatio'), styles.numberHeaderText]}>AR</Text>\n                  {renderSortIcon('aspectRatio')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('price')}>\n                  <Text style={[getHeaderTextStyle('price'), styles.numberHeaderText]}>Price</Text>\n                  {renderSortIcon('price')}\n                </Pressable>\n                <View style={[styles.headerCell, styles.linkHeaderCell]}>\n                  <Text style={[styles.headerText, styles.linkHeaderText]}>Link</Text>\n                </View>\n              </View>\n            </View>\n            <View style={styles.scrollViewContainer}>\n              <ScrollView style={styles.scrollView}>\n                {foils.map((foil, index) => (\n                  <Pressable\n                    key={`${foil.brand}-${foil.model}`}\n                    onPress={() => onFoilSelect(foil)}\n                    style={({ pressed }) => [\n                      styles.row,\n                      index % 2 === 0 && styles.rowEven,\n                      isSelected(foil) && styles.rowSelected,\n                      Platform.OS === 'web' && pressed && styles.rowHovered\n                    ]}\n                  >\n                    <Text style={styles.cell}>{foil.brand}</Text>\n                    <Text style={[styles.cell, styles.modelCell]}>{foil.model}</Text>\n                    <Text style={[styles.cell, styles.typeCell]}>{foil.type}</Text>\n                    <Text style={[styles.cell, styles.seriesCell]}>{foil.series}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.specs.area}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.specs.wingspan}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.specs.aspectRatio?.toFixed(2)}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.price ? `$${foil.price}` : '-'}</Text>\n                    <View style={[styles.cell, styles.linkCell]}>\n                      {foil.sourceUrl && (\n                        <Pressable \n                          onPress={(e) => {\n                            e.stopPropagation();\n                            window.open(foil.sourceUrl, '_blank');\n                          }}\n                          style={({ pressed }) => [\n                            styles.linkButton,\n                            pressed && styles.linkButtonPressed\n                          ]}\n                        >\n                          <Text style={styles.linkText}>View</Text>\n                        </Pressable>\n                      )}\n                    </View>\n                  </Pressable>\n                ))}\n              </ScrollView>\n            </View>\n          </View>\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  containerMobile: {\n    padding: 4,\n  },\n  tableWrapper: {\n    width: TABLE_WIDTH,\n    backgroundColor: colors.background.primary,\n    borderRadius: 8,\n    overflow: 'hidden',\n    borderWidth: 1,\n    borderColor: colors.border,\n    flex: 1,\n  },\n  tableWrapperMobile: {\n    borderRadius: 4,\n  },\n  scrollViewMobile: {\n    flex: 1,\n  },\n  tableContent: {\n    backgroundColor: colors.background.primary,\n    width: TABLE_WIDTH,\n    flex: 1,\n    flexDirection: 'column',\n  },\n  scrollViewContainer: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  tableHeader: {\n    backgroundColor: colors.background.secondary,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.primary,\n    width: TABLE_WIDTH,\n  },\n  headerRow: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.secondary,\n  },\n  headerCell: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n    width: 100,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  headerText: {\n    color: colors.text.secondary,\n    fontWeight: '600',\n    fontSize: 16,\n  },\n  row: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border,\n    width: TABLE_WIDTH,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  rowEven: {\n    backgroundColor: colors.background.secondary,\n  },\n  rowSelected: {\n    backgroundColor: `${colors.primary}15`,\n  },\n  rowHovered: {\n    backgroundColor: `${colors.primary}10`,\n  },\n  cell: {\n    color: colors.text.primary,\n    fontSize: 14,\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n    width: 100,\n  },\n  modelCell: {\n    width: 150,\n  },\n  typeCell: {\n    width: 80,\n  },\n  seriesCell: {\n    width: 120,\n  },\n  numberCell: {\n    width: 100,\n    textAlign: 'right',\n  },\n  numberHeaderCell: {\n    width: 100,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    gap: 4,\n  },\n  numberHeaderText: {\n    textAlign: 'left',\n    flex: 1,\n  },\n  linkCell: {\n    width: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n    borderBottomRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderCell: {\n    width: 80,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderText: {\n    textAlign: 'center',\n  },\n  linkButton: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    minWidth: 44,\n    alignItems: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  linkButtonPressed: {\n    opacity: 0.8,\n  },\n  linkText: {\n    color: colors.background.primary,\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  sortIconContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: 28,\n    justifyContent: 'center',\n    width: 16,\n    gap: 2,\n  },\n  sortIcon: {\n    color: colors.text.muted,\n    fontSize: 12,\n    width: 12,\n    height: 10,\n    lineHeight: 10,\n    textAlign: 'center',\n  },\n  sortIconUp: {\n    marginBottom: 0,\n  },\n  sortIconDown: {\n    marginTop: 0,\n  },\n  sortIconUpActive: {\n    color: colors.primary,\n    fontSize: 13,\n  },\n  sortIconDownActive: {\n    color: colors.primary,\n    fontSize: 13,\n  },\n  scrollViewContent: {\n    flexGrow: 0,\n  },\n});\n","import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { colors } from '../theme/colors';\n\nexport default function Footer() {\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { width } = useWindowDimensions();\n  const isMobile = width < 768;\n\n  return (\n    <View style={[styles.container, isMobile && styles.containerMobile]}>\n      <View style={[styles.content, isMobile && styles.contentMobile]}>\n        <View style={[styles.linkGroup, isMobile && styles.linkGroupMobile]}>\n          <Pressable onPress={() => navigation.navigate('Terms')}>\n            <Text style={styles.link}>Terms of Service</Text>\n          </Pressable>\n          <Text style={styles.separator}>•</Text>\n          <Pressable onPress={() => navigation.navigate('Privacy')}>\n            <Text style={styles.link}>Privacy Policy</Text>\n          </Pressable>\n          <Text style={styles.separator}>•</Text>\n          <Pressable onPress={() => navigation.navigate('Contact')}>\n            <Text style={styles.link}>Contact Us</Text>\n          </Pressable>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.background.primary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n    padding: 16,\n  },\n  containerMobile: {\n    padding: 12,\n  },\n  content: {\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  contentMobile: {\n    flexDirection: 'column',\n    gap: 8,\n  },\n  linkGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n  },\n  linkGroupMobile: {\n    gap: 8,\n  },\n  link: {\n    color: colors.text.secondary,\n    fontSize: 14,\n  },\n  separator: {\n    color: colors.text.muted,\n    fontSize: 14,\n  },\n}); ","import { Helmet } from 'react-helmet-async';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  canonicalUrl?: string;\n  imageUrl?: string;\n}\n\nexport const SEOHead: React.FC<SEOHeadProps> = ({\n  title,\n  description,\n  canonicalUrl,\n  imageUrl\n}) => {\n  const siteTitle = 'FoilQuiver';\n  const fullTitle = `${title} | ${siteTitle}`;\n  \n  return (\n    <Helmet>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      {imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n      \n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      {imageUrl && <meta name=\"twitter:image\" content={imageUrl} />}\n    </Helmet>\n  );\n}; "],"names":["WebWrapper","Platform","select","web","_ref","children","_jsx","style","position","bottom","left","right","zIndex","pointerEvents","display","justifyContent","paddingRight","spacing","LARGE","paddingBottom","MEDIUM","default","_ref2","_Fragment","_ref3","selectedFoils","onCompareSelected","onExitCompare","onClearSelection","isComparisonView","length","content","View","styles","comparisonBar","Pressable","button","cancelButton","onPress","Text","buttonText","_jsxs","selectionText","buttonGroup","clearButton","clearButtonText","buttonDisabled","disabled","OS","container","StyleSheet","create","flexDirection","alignItems","padding","backgroundColor","colors","background","secondary","borderTopWidth","borderTopColor","border","gap","floatingButton","_objectSpread","alignSelf","paddingHorizontal","paddingVertical","borderRadius","boxShadow","cursor","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","primary","text","muted","opacity","borderWidth","borderColor","color","fontWeight","fontSize","marginRight","selectedCount","buttonContainer","compareButton","compareButtonText","foils","_useSortedFoils","onClose","onCompare","useSortedFoils","sortOption","setSortOption","sortedFoils","FoilsTable","onSort","field","prev","direction","onFoilSelect","isSelected","ascending","flex","FilterControls","filterOptions","selectedBrands","selectedSeries","selectedTypes","onFilterChange","_useState","useState","_useState2","_slicedToArray","isExpanded","setIsExpanded","_useState3","Animated","Value","animation","_useState5","_useState6","contentHeight","setContentHeight","animatedHeight","interpolate","inputRange","outputRange","wrapper","toValue","spring","useNativeDriver","friction","start","header","headerContent","headerTitle","filterSummary","filterCount","Ionicons","name","size","onLayout","event","nativeEvent","layout","section","sectionTitle","chipContainer","brands","map","brand","chip","includes","chipSelected","chipText","chipTextSelected","types","type","series","marginBottom","overflow","paddingTop","flexWrap","MOBILE_BREAKPOINT","TABLE_WIDTH","isMobile","useWindowDimensions","renderSortIcon","isActive","sortIconContainer","sortIcon","sortIconUp","sortIconUpActive","sortIconDown","sortIconDownActive","getHeaderTextStyle","headerText","containerMobile","tableWrapper","tableWrapperMobile","ScrollView","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","scrollViewContent","scrollViewMobile","tableContent","tableHeader","headerRow","headerCell","modelCell","typeCell","seriesCell","numberHeaderCell","numberHeaderText","linkHeaderCell","linkHeaderText","scrollViewContainer","scrollView","foil","index","_foil$specs$aspectRat","pressed","row","rowEven","rowSelected","rowHovered","cell","model","numberCell","specs","area","wingspan","aspectRatio","toFixed","price","linkCell","sourceUrl","e","stopPropagation","window","open","linkButton","linkButtonPressed","linkText","borderBottomWidth","borderBottomColor","borderRightWidth","borderRightColor","textAlign","borderTopRightRadius","borderBottomRightRadius","minWidth","lineHeight","marginTop","flexGrow","Footer","navigation","useNavigation","contentMobile","linkGroup","linkGroupMobile","navigate","link","separator","maxWidth","marginHorizontal","SEOHead","title","description","canonicalUrl","imageUrl","fullTitle","Helmet","rel","href","property"],"sourceRoot":""}