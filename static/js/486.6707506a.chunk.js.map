{"version":3,"file":"static/js/486.6707506a.chunk.js","mappings":"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","sources":["node_modules/expo-modules-core/src/environment/browser.web.ts","node_modules/expo-modules-core/src/Platform.ts","node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","node_modules/@babel/runtime/helpers/esm/construct.js","node_modules/expo-modules-core/src/errors/CodedError.ts","node_modules/expo-modules-core/src/errors/UnavailabilityError.ts","node_modules/expo-font/src/Font.types.ts","node_modules/expo-font/src/ExpoFontLoader.web.ts","node_modules/expo-asset/src/AssetSourceResolver.ts","node_modules/expo-asset/src/PlatformUtils.web.ts","node_modules/expo-asset/src/AssetSources.ts","node_modules/expo-asset/src/resolveAssetSource.ts","node_modules/expo-asset/src/AssetUris.ts","node_modules/expo-asset/src/Asset.ts","node_modules/expo-asset/src/LocalAssets.web.ts","node_modules/expo-asset/src/ImageAssets.ts","node_modules/expo-font/src/FontLoader.web.ts","node_modules/expo-font/src/memory.ts","node_modules/expo-font/src/server.ts","node_modules/expo-font/src/Font.ts","node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/ensure-native-module-available.js","node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/create-icon-source-cache.js","node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/icon-button.js","node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/create-icon-set.js","node_modules/@expo/vector-icons/src/Ionicons.ts","node_modules/@expo/vector-icons/src/createIconSet.tsx","node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/object-utils.js","node_modules/@react-native/assets-registry/registry.js","src/constants/spacing.ts","src/hooks/useComparison.ts","src/hooks/useFilteredFoils.ts","node_modules/@react-native-async-storage/async-storage/lib/module/AsyncStorage.ts","node_modules/@react-native-async-storage/async-storage/lib/module/index.ts","src/services/productService.ts","src/hooks/useFoils.ts","src/hooks/useSearchFoils.ts","src/hooks/useSortedFoils.ts","src/utils/sorting.ts","node_modules/fontfaceobserver/fontfaceobserver.standalone.js","node_modules/is-plain-obj/index.js","node_modules/merge-options/index.js","node_modules/prop-types/factoryWithThrowingShims.js","node_modules/prop-types/index.js","node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["declare global {\n  // Add IE-specific interface to Window\n  interface Window {\n    attachEvent(event: string, listener: EventListener): boolean;\n  }\n}\n\n// Used for delegating node actions when browser APIs aren't available\n// like in SSR websites.\nexport const isDOMAvailable = typeof window !== 'undefined' && !!window.document?.createElement;\nexport const canUseEventListeners =\n  isDOMAvailable && !!(window.addEventListener || window.attachEvent);\nexport const canUseViewport = isDOMAvailable && !!window.screen;\nexport const isAsyncDebugging = false;\n","import { Platform as ReactNativePlatform, PlatformOSType } from 'react-native';\n\nimport {\n  isDOMAvailable,\n  canUseEventListeners,\n  canUseViewport,\n  isAsyncDebugging,\n} from './environment/browser';\n\nexport type PlatformSelectOSType = PlatformOSType | 'native' | 'electron' | 'default';\n\nexport type PlatformSelect = <T>(specifics: { [platform in PlatformSelectOSType]?: T }) => T;\n\nconst Platform = {\n  /**\n   * Denotes the currently running platform.\n   * Can be one of ios, android, web.\n   */\n  OS: ReactNativePlatform.OS,\n  /**\n   * Returns the value with the matching platform.\n   * Object keys can be any of ios, android, native, web, default.\n   *\n   * @ios ios, native, default\n   * @android android, native, default\n   * @web web, default\n   */\n  select: ReactNativePlatform.select as PlatformSelect,\n  /**\n   * Denotes if the DOM API is available in the current environment.\n   * The DOM is not available in native React runtimes and Node.js.\n   */\n  isDOMAvailable,\n  /**\n   * Denotes if the current environment can attach event listeners\n   * to the window. This will return false in native React\n   * runtimes and Node.js.\n   */\n  canUseEventListeners,\n  /**\n   * Denotes if the current environment can inspect properties of the\n   * screen on which the current window is being rendered. This will\n   * return false in native React runtimes and Node.js.\n   */\n  canUseViewport,\n  /**\n   * If the JavaScript is being executed in a remote JavaScript environment.\n   * When `true`, synchronous native invocations cannot be executed.\n   */\n  isAsyncDebugging,\n};\n\nexport default Platform;\n","function _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nexport { _isNativeReflectConstruct as default };","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nfunction _wrapNativeSuper(t) {\n  var r = \"function\" == typeof Map ? new Map() : void 0;\n  return _wrapNativeSuper = function _wrapNativeSuper(t) {\n    if (null === t || !isNativeFunction(t)) return t;\n    if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\");\n    if (void 0 !== r) {\n      if (r.has(t)) return r.get(t);\n      r.set(t, Wrapper);\n    }\n    function Wrapper() {\n      return construct(t, arguments, getPrototypeOf(this).constructor);\n    }\n    return Wrapper.prototype = Object.create(t.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), setPrototypeOf(Wrapper, t);\n  }, _wrapNativeSuper(t);\n}\nexport { _wrapNativeSuper as default };","function _isNativeFunction(t) {\n  try {\n    return -1 !== Function.toString.call(t).indexOf(\"[native code]\");\n  } catch (n) {\n    return \"function\" == typeof t;\n  }\n}\nexport { _isNativeFunction as default };","import isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _construct(t, e, r) {\n  if (isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);\n  var o = [null];\n  o.push.apply(o, e);\n  var p = new (t.bind.apply(t, o))();\n  return r && setPrototypeOf(p, r.prototype), p;\n}\nexport { _construct as default };","/**\n * A general error class that should be used for all errors in Expo modules.\n * Guarantees a `code` field that can be used to differentiate between different\n * types of errors without further subclassing Error.\n */\nexport class CodedError extends Error {\n  code: string;\n  info?: any;\n\n  constructor(code: string, message: string) {\n    super(message);\n    this.code = code;\n  }\n}\n","import { CodedError } from './CodedError';\nimport Platform from '../Platform';\n\n/**\n * A class for errors to be thrown when a property is accessed which is\n * unavailable, unsupported, or not currently implemented on the running\n * platform.\n */\nexport class UnavailabilityError extends CodedError {\n  constructor(moduleName: string, propertyName: string) {\n    super(\n      'ERR_UNAVAILABLE',\n      `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`\n    );\n  }\n}\n","import { Asset } from 'expo-asset';\n\n// @needsAudit\n/**\n * The different types of assets you can provide to the [`loadAsync()`](#loadAsync) function.\n * A font source can be a URI, a module ID, or an Expo Asset.\n */\nexport type FontSource = string | number | Asset | FontResource;\n\n// @needsAudit\n/**\n * An object used to dictate the resource that is loaded into the provided font namespace when used\n * with [`loadAsync`](#loadasync).\n */\nexport type FontResource = {\n  uri?: string | number;\n  /**\n   * Sets the [`font-display`](#fontdisplay) property for a given typeface in the browser.\n   * @platform web\n   */\n  display?: FontDisplay;\n  default?: string;\n};\n\n// @needsAudit\n/**\n * Sets the [font-display](https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display)\n * for a given typeface. The default font value on web is `FontDisplay.AUTO`.\n * Even though setting the `fontDisplay` does nothing on native platforms, the default behavior\n * emulates `FontDisplay.SWAP` on flagship devices like iOS, Samsung, Pixel, etc. Default\n * functionality varies on One Plus devices. In the browser this value is set in the generated\n * `@font-face` CSS block and not as a style property meaning you cannot dynamically change this\n * value based on the element it's used in.\n * @platform web\n */\nexport enum FontDisplay {\n  /**\n   * __(Default)__ The font display strategy is defined by the user agent or platform.\n   * This generally defaults to the text being invisible until the font is loaded.\n   * Good for buttons or banners that require a specific treatment.\n   */\n  AUTO = 'auto',\n  /**\n   * Fallback text is rendered immediately with a default font while the desired font is loaded.\n   * This is good for making the content appear to load instantly and is usually preferred.\n   */\n  SWAP = 'swap',\n  /**\n   * The text will be invisible until the font has loaded. If the font fails to load then nothing\n   * will appear - it's best to turn this off when debugging missing text.\n   */\n  BLOCK = 'block',\n  /**\n   * Splits the behavior between `SWAP` and `BLOCK`.\n   * There will be a [100ms timeout](https://developers.google.com/web/updates/2016/02/font-display?hl=en)\n   * where the text with a custom font is invisible, after that the text will either swap to the\n   * styled text or it'll show the unstyled text and continue to load the custom font. This is good\n   * for buttons that need a custom font but should also be quickly available to screen-readers.\n   */\n  FALLBACK = 'fallback',\n  /**\n   * This works almost identically to `FALLBACK`, the only difference is that the browser will\n   * decide to load the font based on slow connection speed or critical resource demand.\n   */\n  OPTIONAL = 'optional',\n}\n\n// @needsAudit\n/**\n * Object used to query fonts for unloading.\n */\nexport type UnloadFontOptions = Pick<FontResource, 'display'>;\n","import { CodedError, Platform } from 'expo-modules-core';\nimport FontObserver from 'fontfaceobserver';\n\nimport { UnloadFontOptions } from './Font';\nimport { FontDisplay, FontResource } from './Font.types';\n\nfunction getFontFaceStyleSheet(): CSSStyleSheet | null {\n  if (!Platform.isDOMAvailable) {\n    return null;\n  }\n  const styleSheet = getStyleElement();\n  return styleSheet.sheet ? (styleSheet.sheet as CSSStyleSheet) : null;\n}\n\ntype RuleItem = { rule: CSSFontFaceRule; index: number };\n\nfunction getFontFaceRules(): RuleItem[] {\n  const sheet = getFontFaceStyleSheet();\n  if (sheet) {\n    // @ts-ignore: rule iterator\n    const rules = [...sheet.cssRules];\n\n    const items: RuleItem[] = [];\n\n    for (let i = 0; i < rules.length; i++) {\n      const rule = rules[i];\n      if (rule instanceof CSSFontFaceRule) {\n        items.push({ rule, index: i });\n      }\n    }\n    return items;\n  }\n  return [];\n}\n\nfunction getFontFaceRulesMatchingResource(\n  fontFamilyName: string,\n  options?: UnloadFontOptions\n): RuleItem[] {\n  const rules = getFontFaceRules();\n  return rules.filter(({ rule }) => {\n    return (\n      rule.style.fontFamily === fontFamilyName &&\n      (options && options.display ? options.display === (rule.style as any).fontDisplay : true)\n    );\n  });\n}\n\nconst serverContext: Set<{ name: string; css: string; resourceId: string }> = new Set();\n\nfunction getHeadElements(): {\n  $$type: string;\n  rel?: string;\n  href?: string;\n  as?: string;\n  crossorigin?: string;\n  children?: string;\n  id?: string;\n  type?: string;\n}[] {\n  const entries = [...serverContext.entries()];\n  if (!entries.length) {\n    return [];\n  }\n  const css = entries.map(([{ css }]) => css).join('\\n');\n  const links = entries.map(([{ resourceId }]) => resourceId);\n  // TODO: Maybe return nothing if no fonts were loaded.\n  return [\n    {\n      $$type: 'style',\n      children: css,\n      id: ID,\n      type: 'text/css',\n    },\n    ...links.map((resourceId) => ({\n      $$type: 'link',\n      rel: 'preload',\n      href: resourceId,\n      as: 'font',\n      crossorigin: '',\n    })),\n  ];\n}\n\nexport default {\n  get name(): string {\n    return 'ExpoFontLoader';\n  },\n\n  async unloadAllAsync(): Promise<void> {\n    if (!Platform.isDOMAvailable) return;\n\n    const element = document.getElementById(ID);\n    if (element && element instanceof HTMLStyleElement) {\n      document.removeChild(element);\n    }\n  },\n\n  async unloadAsync(fontFamilyName: string, options?: UnloadFontOptions): Promise<void> {\n    const sheet = getFontFaceStyleSheet();\n    if (!sheet) return;\n    const items = getFontFaceRulesMatchingResource(fontFamilyName, options);\n    for (const item of items) {\n      sheet.deleteRule(item.index);\n    }\n  },\n\n  getServerResources(): string[] {\n    const elements = getHeadElements();\n\n    return elements\n      .map((element) => {\n        switch (element.$$type) {\n          case 'style':\n            return `<style id=\"${element.id}\" type=\"${element.type}\">${element.children}</style>`;\n          case 'link':\n            return `<link rel=\"${element.rel}\" href=\"${element.href}\" as=\"${element.as}\" crossorigin=\"${element.crossorigin}\" />`;\n          default:\n            return '';\n        }\n      })\n      .filter(Boolean);\n  },\n\n  resetServerContext() {\n    serverContext.clear();\n  },\n\n  isLoaded(fontFamilyName: string, resource: UnloadFontOptions = {}): boolean {\n    if (typeof window === 'undefined') {\n      return !![...serverContext.values()].find((asset) => {\n        return asset.name === fontFamilyName;\n      });\n    }\n    return getFontFaceRulesMatchingResource(fontFamilyName, resource)?.length > 0;\n  },\n\n  // NOTE(EvanBacon): No async keyword! This cannot return a promise in Node environments.\n  loadAsync(fontFamilyName: string, resource: FontResource): Promise<void> {\n    if (typeof window === 'undefined') {\n      serverContext.add({\n        name: fontFamilyName,\n        css: _createWebFontTemplate(fontFamilyName, resource),\n        // @ts-expect-error: typeof string\n        resourceId: resource.uri!,\n      });\n      return Promise.resolve();\n    }\n\n    const canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new CodedError(\n        'ERR_WEB_ENVIRONMENT',\n        `The browser's \\`document.head\\` element doesn't support injecting fonts.`\n      );\n    }\n\n    const style = getStyleElement();\n    document.head!.appendChild(style);\n\n    const res = getFontFaceRulesMatchingResource(fontFamilyName, resource);\n    if (!res.length) {\n      _createWebStyle(fontFamilyName, resource);\n    }\n\n    if (!isFontLoadingListenerSupported()) {\n      return Promise.resolve();\n    }\n\n    return new FontObserver(fontFamilyName, { display: resource.display }).load(null, 6000);\n  },\n};\n\nconst ID = 'expo-generated-fonts';\n\nfunction getStyleElement(): HTMLStyleElement {\n  const element = document.getElementById(ID);\n  if (element && element instanceof HTMLStyleElement) {\n    return element;\n  }\n  const styleElement = document.createElement('style');\n  styleElement.id = ID;\n  styleElement.type = 'text/css';\n  return styleElement;\n}\n\nexport function _createWebFontTemplate(fontFamily: string, resource: FontResource): string {\n  return `@font-face{font-family:${fontFamily};src:url(${resource.uri});font-display:${\n    resource.display || FontDisplay.AUTO\n  }}`;\n}\n\nfunction _createWebStyle(fontFamily: string, resource: FontResource): HTMLStyleElement {\n  const fontStyle = _createWebFontTemplate(fontFamily, resource);\n\n  const styleElement = getStyleElement();\n  // @ts-ignore: TypeScript does not define HTMLStyleElement::styleSheet. This is just for IE and\n  // possibly can be removed if it's unnecessary on IE 11.\n  if (styleElement.styleSheet) {\n    const styleElementIE = styleElement as any;\n    styleElementIE.styleSheet.cssText = styleElementIE.styleSheet.cssText\n      ? styleElementIE.styleSheet.cssText + fontStyle\n      : fontStyle;\n  } else {\n    const textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}\n\nfunction isFontLoadingListenerSupported(): boolean {\n  const { userAgent } = window.navigator;\n  // WebKit is broken https://github.com/bramstein/fontfaceobserver/issues/95\n  const isIOS = !!userAgent.match(/iPad|iPhone/i);\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  // Edge is broken https://github.com/bramstein/fontfaceobserver/issues/109#issuecomment-333356795\n  const isEdge = userAgent.includes('Edge');\n  // Internet Explorer\n  const isIE = userAgent.includes('Trident');\n  // Firefox\n  const isFirefox = userAgent.includes('Firefox');\n  return !isSafari && !isIOS && !isEdge && !isIE && !isFirefox;\n}\n","import type { PackagerAsset } from '@react-native/assets-registry/registry';\nimport { Platform } from 'expo-modules-core';\nimport { PixelRatio } from 'react-native';\n\nexport type ResolvedAssetSource = {\n  __packager_asset: boolean;\n  width?: number;\n  height?: number;\n  uri: string;\n  scale: number;\n};\n\n// Returns the Metro dev server-specific asset location.\nfunction getScaledAssetPath(asset): string {\n  const scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());\n  const scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  const type = !asset.type ? '' : `.${asset.type}`;\n  if (__DEV__) {\n    return asset.httpServerLocation + '/' + asset.name + scaleSuffix + type;\n  } else {\n    return asset.httpServerLocation.replace(/\\.\\.\\//g, '_') + '/' + asset.name + scaleSuffix + type;\n  }\n}\n\nexport default class AssetSourceResolver {\n  serverUrl: string;\n  // where the jsbundle is being run from\n  // NOTE(EvanBacon): Never defined on web.\n  jsbundleUrl?: string | null;\n  // the asset to resolve\n  asset: PackagerAsset;\n\n  constructor(\n    serverUrl: string | undefined | null,\n    jsbundleUrl: string | undefined | null,\n    asset: PackagerAsset\n  ) {\n    this.serverUrl = serverUrl || 'https://expo.dev';\n    this.jsbundleUrl = null;\n    this.asset = asset;\n  }\n\n  // Always true for web runtimes\n  isLoadedFromServer(): boolean {\n    return true;\n  }\n\n  // Always false for web runtimes\n  isLoadedFromFileSystem(): boolean {\n    return false;\n  }\n\n  defaultAsset(): ResolvedAssetSource {\n    return this.assetServerURL();\n  }\n\n  /**\n   * @returns absolute remote URL for the hosted asset.\n   */\n  assetServerURL(): ResolvedAssetSource {\n    const fromUrl = new URL(getScaledAssetPath(this.asset), this.serverUrl);\n    fromUrl.searchParams.set('platform', Platform.OS);\n    fromUrl.searchParams.set('hash', this.asset.hash);\n    return this.fromSource(\n      // Relative on web\n      fromUrl.toString().replace(fromUrl.origin, '')\n    );\n  }\n\n  fromSource(source: string): ResolvedAssetSource {\n    return {\n      __packager_asset: true,\n      width: this.asset.width ?? undefined,\n      height: this.asset.height ?? undefined,\n      uri: source,\n      scale: AssetSourceResolver.pickScale(this.asset.scales, PixelRatio.get()),\n    };\n  }\n\n  static pickScale(scales: number[], deviceScale: number): number {\n    for (let i = 0; i < scales.length; i++) {\n      if (scales[i] >= deviceScale) {\n        return scales[i];\n      }\n    }\n    return scales[scales.length - 1] || 1;\n  }\n}\n","export const IS_MANAGED_ENV = false;\nexport const IS_ENV_WITH_UPDATES_ENABLED = false;\nexport const IS_ENV_WITHOUT_UPDATES_ENABLED = false;\n\n// Compute manifest base URL if available\nexport const manifestBaseUrl = null;\n\nexport async function downloadAsync(uri, hash, type, name): Promise<string> {\n  return uri;\n}\n\nexport function getManifest() {\n  return {};\n}\n\nexport function getManifest2() {\n  return {};\n}\n","import type { PackagerAsset } from '@react-native/assets-registry/registry';\nimport { Platform } from 'expo-modules-core';\nimport { PixelRatio, NativeModules } from 'react-native';\n\nimport AssetSourceResolver from './AssetSourceResolver';\nimport { getManifest, getManifest2, manifestBaseUrl } from './PlatformUtils';\n\n// @docsMissing\nexport type AssetMetadata = Pick<\n  PackagerAsset,\n  'httpServerLocation' | 'name' | 'hash' | 'type' | 'scales' | 'width' | 'height'\n> & {\n  uri?: string;\n  fileHashes?: string[];\n  fileUris?: string[];\n};\n\nexport type AssetSource = {\n  uri: string;\n  hash: string;\n};\n\n// Fast lookup check if asset map has any overrides in the manifest.\n// This value will always be either null or an absolute URL, e.g. `https://expo.dev/`\nconst assetMapOverride = getManifest().assetMapOverride;\n\n/**\n * Selects the best file for the given asset (ex: choosing the best scale for images) and returns\n * a { uri, hash } pair for the specific asset file.\n *\n * If the asset isn't an image with multiple scales, the first file is selected.\n */\nexport function selectAssetSource(meta: AssetMetadata): AssetSource {\n  // Override with the asset map in manifest if available\n  if (assetMapOverride && assetMapOverride.hasOwnProperty(meta.hash)) {\n    meta = { ...meta, ...assetMapOverride[meta.hash] };\n  }\n\n  // This logic is based on that of AssetSourceResolver, with additional support for file hashes and\n  // explicitly provided URIs\n  const scale = AssetSourceResolver.pickScale(meta.scales, PixelRatio.get());\n  const index = meta.scales.findIndex((s) => s === scale);\n  const hash = meta.fileHashes ? meta.fileHashes[index] ?? meta.fileHashes[0] : meta.hash;\n\n  // Allow asset processors to directly provide the URL to load\n  const uri = meta.fileUris ? meta.fileUris[index] ?? meta.fileUris[0] : meta.uri;\n  if (uri) {\n    return { uri: resolveUri(uri), hash };\n  }\n\n  // Check if the assetUrl was overridden in the manifest\n  const assetUrlOverride = getManifest().assetUrlOverride;\n  if (assetUrlOverride) {\n    const uri = pathJoin(assetUrlOverride, hash);\n    return { uri: resolveUri(uri), hash };\n  }\n\n  const fileScale = scale === 1 ? '' : `@${scale}x`;\n  const fileExtension = meta.type ? `.${encodeURIComponent(meta.type)}` : '';\n  const suffix = `/${encodeURIComponent(meta.name)}${fileScale}${fileExtension}`;\n  const params = new URLSearchParams({\n    platform: Platform.OS,\n    hash: meta.hash,\n  });\n\n  // For assets with a specified absolute URL, we use the existing origin instead of prepending the\n  // development server or production CDN URL origin\n  if (/^https?:\\/\\//.test(meta.httpServerLocation)) {\n    const uri = meta.httpServerLocation + suffix + '?' + params;\n    return { uri, hash };\n  }\n\n  // For assets during development using manifest2, we use the development server's URL origin\n  const manifest2 = getManifest2();\n\n  const devServerUrl = manifest2?.extra?.expoGo?.developer\n    ? 'http://' + manifest2.extra.expoGo.debuggerHost\n    : // For assets during development, we use the development server's URL origin\n    getManifest().developer\n    ? getManifest().bundleUrl\n    : null;\n  if (devServerUrl) {\n    const baseUrl = new URL(meta.httpServerLocation + suffix, devServerUrl);\n\n    baseUrl.searchParams.set('platform', Platform.OS);\n    baseUrl.searchParams.set('hash', meta.hash);\n    return {\n      uri: baseUrl.href,\n      hash,\n    };\n  }\n\n  // Temporary fallback for loading assets in Expo Go home\n  if (NativeModules.ExponentKernel) {\n    return { uri: `https://classic-assets.eascdn.net/~assets/${encodeURIComponent(hash)}`, hash };\n  }\n\n  // In correctly configured apps, we arrive here if the asset is locally available on disk due to\n  // being managed by expo-updates, and `getLocalAssetUri(hash)` must return a local URI for this\n  // hash. Since the asset is local, we don't have a remote URL and specify an invalid URL (an empty\n  // string) as a placeholder.\n  return { uri: '', hash };\n}\n\n/**\n * Resolves the given URI to an absolute URI. If the given URI is already an absolute URI, it is\n * simply returned. Otherwise, if it is a relative URI, it is resolved relative to the manifest's\n * base URI.\n */\nexport function resolveUri(uri: string): string {\n  // `manifestBaseUrl` is always an absolute URL or `null`.\n  return manifestBaseUrl ? new URL(uri, manifestBaseUrl).href : uri;\n}\n\n// A very cheap path canonicalization like path.join but without depending on a `path` polyfill.\nexport function pathJoin(...paths: string[]): string {\n  // Start by simply combining paths, without worrying about \"..\" or \".\"\n  const combined = paths\n    .map((part, index) => {\n      if (index === 0) {\n        return part.trim().replace(/\\/*$/, '');\n      }\n      return part.trim().replace(/(^\\/*|\\/*$)/g, '');\n    })\n    .filter((part) => part.length > 0)\n    .join('/')\n    .split('/');\n\n  // Handle \"..\" and \".\" in paths\n  const resolved: string[] = [];\n  for (const part of combined) {\n    if (part === '..') {\n      resolved.pop(); // Remove the last element from the result\n    } else if (part !== '.') {\n      resolved.push(part);\n    }\n  }\n\n  return resolved.join('/');\n}\n","import { getAssetByID } from '@react-native/assets-registry/registry';\n\nimport AssetSourceResolver, { ResolvedAssetSource } from './AssetSourceResolver';\n\nlet _customSourceTransformer;\n\nexport function setCustomSourceTransformer(\n  transformer: (resolver: AssetSourceResolver) => ResolvedAssetSource\n): void {\n  _customSourceTransformer = transformer;\n}\n\n/**\n * `source` is either a number (opaque type returned by require('./foo.png'))\n * or an `ImageSource` like { uri: '<http location || file path>' }\n */\nexport default function resolveAssetSource(source: any): ResolvedAssetSource | null {\n  if (typeof source === 'object') {\n    return source;\n  }\n\n  const asset = getAssetByID(source);\n  if (!asset) {\n    return null;\n  }\n\n  const resolver = new AssetSourceResolver(\n    // Doesn't matter since this is removed on web\n    'https://expo.dev',\n    null,\n    asset\n  );\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\n\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get() {\n    return setCustomSourceTransformer;\n  },\n});\n\nexport const { pickScale } = AssetSourceResolver;\n","export function getFilename(url: string): string {\n  const { pathname, searchParams } = new URL(url, 'https://e');\n\n  // When attached to a dev server, we use `unstable_path` to represent the file path. This ensures\n  // the file name is not canonicalized by the browser.\n  // NOTE(EvanBacon): This is technically not tied to `__DEV__` as it's possible to use this while bundling in production\n  // mode.\n  if (__DEV__) {\n    if (searchParams.has('unstable_path')) {\n      const encodedFilePath = decodeURIComponent(searchParams.get('unstable_path')!);\n      return getBasename(encodedFilePath);\n    }\n  }\n\n  return getBasename(pathname);\n}\n\nfunction getBasename(pathname: string): string {\n  return pathname.substring(pathname.lastIndexOf('/') + 1);\n}\n\nexport function getFileExtension(url: string): string {\n  const filename = getFilename(url);\n  const dotIndex = filename.lastIndexOf('.');\n  // Ignore leading dots for hidden files\n  return dotIndex > 0 ? filename.substring(dotIndex) : '';\n}\n\n/**\n * Returns the base URL from a manifest's URL. For example, given a manifest hosted at\n * https://example.com/app/manifest.json, the base URL would be https://example.com/app/. Query\n * parameters and fragments also are removed.\n *\n * For an Expo-hosted project with a manifest hosted at https://exp.host/@user/project/index.exp, the\n * base URL would be https://exp.host/@user/project.\n *\n * We also normalize the \"exp\" protocol to \"http\" to handle internal URLs with the Expo schemes used\n * to tell the OS to open the URLs in the the Expo client.\n */\nexport function getManifestBaseUrl(manifestUrl: string): string {\n  const urlObject = new URL(manifestUrl);\n\n  let nextProtocol = urlObject.protocol;\n  // Change the scheme to http(s) if it is exp(s)\n  if (nextProtocol === 'exp:') {\n    nextProtocol = 'http:';\n  } else if (nextProtocol === 'exps:') {\n    nextProtocol = 'https:';\n  }\n  urlObject.protocol = nextProtocol;\n\n  // Trim filename, query parameters, and fragment, if any\n  const directory = urlObject.pathname.substring(0, urlObject.pathname.lastIndexOf('/') + 1);\n  urlObject.pathname = directory;\n  urlObject.search = '';\n  urlObject.hash = '';\n\n  // The URL spec doesn't allow for changing the protocol to `http` or `https`\n  // without a port set so instead, we'll just swap the protocol manually.\n  return urlObject.protocol !== nextProtocol\n    ? urlObject.href.replace(urlObject.protocol, nextProtocol)\n    : urlObject.href;\n}\n","import { getAssetByID } from '@react-native/assets-registry/registry';\nimport { Platform } from 'expo-modules-core';\n\nimport { AssetMetadata, selectAssetSource } from './AssetSources';\nimport * as AssetUris from './AssetUris';\nimport * as ImageAssets from './ImageAssets';\nimport { getLocalAssetUri } from './LocalAssets';\nimport { downloadAsync, IS_ENV_WITH_UPDATES_ENABLED } from './PlatformUtils';\nimport resolveAssetSource from './resolveAssetSource';\n\n// @docsMissing\nexport type AssetDescriptor = {\n  name: string;\n  type: string;\n  hash?: string | null;\n  uri: string;\n  width?: number | null;\n  height?: number | null;\n};\n\ntype DownloadPromiseCallbacks = {\n  resolve: () => void;\n  reject: (error: Error) => void;\n};\n\nexport { AssetMetadata };\n\n// @needsAudit\n/**\n * The `Asset` class represents an asset in your app. It gives metadata about the asset (such as its\n * name and type) and provides facilities to load the asset data.\n */\nexport class Asset {\n  /**\n   * @private\n   */\n  static byHash = {};\n  /**\n   * @private\n   */\n  static byUri = {};\n\n  /**\n   * The name of the asset file without the extension. Also without the part from `@` onward in the\n   * filename (used to specify scale factor for images).\n   */\n  name: string;\n  /**\n   * The extension of the asset filename.\n   */\n  type: string;\n  /**\n   * The MD5 hash of the asset's data.\n   */\n  hash: string | null = null;\n  /**\n   * A URI that points to the asset's data on the remote server. When running the published version\n   * of your app, this refers to the location on Expo's asset server where Expo has stored your\n   * asset. When running the app from Expo CLI during development, this URI points to Expo CLI's\n   * server running on your computer and the asset is served directly from your computer. If you\n   * are not using Classic Updates (legacy), this field should be ignored as we ensure your assets\n   * are on device before before running your application logic.\n   */\n  uri: string;\n  /**\n   * If the asset has been downloaded (by calling [`downloadAsync()`](#downloadasync)), the\n   * `file://` URI pointing to the local file on the device that contains the asset data.\n   */\n  localUri: string | null = null;\n  /**\n   * If the asset is an image, the width of the image data divided by the scale factor. The scale\n   * factor is the number after `@` in the filename, or `1` if not present.\n   */\n  width: number | null = null;\n  /**\n   * If the asset is an image, the height of the image data divided by the scale factor. The scale factor is the number after `@` in the filename, or `1` if not present.\n   */\n  height: number | null = null;\n  // @docsMissing\n  downloading: boolean = false;\n  // @docsMissing\n  downloaded: boolean = false;\n\n  /**\n   * @private\n   */\n  _downloadCallbacks: DownloadPromiseCallbacks[] = [];\n\n  constructor({ name, type, hash = null, uri, width, height }: AssetDescriptor) {\n    this.name = name;\n    this.type = type;\n    this.hash = hash;\n    this.uri = uri;\n\n    if (typeof width === 'number') {\n      this.width = width;\n    }\n    if (typeof height === 'number') {\n      this.height = height;\n    }\n\n    if (hash) {\n      this.localUri = getLocalAssetUri(hash, type);\n      if (this.localUri) {\n        this.downloaded = true;\n      }\n    }\n\n    if (Platform.OS === 'web') {\n      if (!name) {\n        this.name = AssetUris.getFilename(uri);\n      }\n      if (!type) {\n        this.type = AssetUris.getFileExtension(uri);\n      }\n    }\n  }\n\n  // @needsAudit\n  /**\n   * A helper that wraps `Asset.fromModule(module).downloadAsync` for convenience.\n   * @param moduleId An array of `require('path/to/file')` or external network URLs. Can also be\n   * just one module or URL without an Array.\n   * @return Returns a Promise that fulfills with an array of `Asset`s when the asset(s) has been\n   * saved to disk.\n   * @example\n   * ```ts\n   * const [{ localUri }] = await Asset.loadAsync(require('./assets/snack-icon.png'));\n   * ```\n   */\n  static loadAsync(moduleId: number | number[] | string | string[]): Promise<Asset[]> {\n    const moduleIds = Array.isArray(moduleId) ? moduleId : [moduleId];\n    return Promise.all(moduleIds.map((moduleId) => Asset.fromModule(moduleId).downloadAsync()));\n  }\n\n  // @needsAudit\n  /**\n   * Returns the [`Asset`](#asset) instance representing an asset given its module or URL.\n   * @param virtualAssetModule The value of `require('path/to/file')` for the asset or external\n   * network URL\n   * @return The [`Asset`](#asset) instance for the asset.\n   */\n  static fromModule(virtualAssetModule: number | string): Asset {\n    if (typeof virtualAssetModule === 'string') {\n      return Asset.fromURI(virtualAssetModule);\n    }\n\n    const meta = getAssetByID(virtualAssetModule);\n    if (!meta) {\n      throw new Error(`Module \"${virtualAssetModule}\" is missing from the asset registry`);\n    }\n\n    // Outside of the managed env we need the moduleId to initialize the asset\n    // because resolveAssetSource depends on it\n    if (!IS_ENV_WITH_UPDATES_ENABLED) {\n      // null-check is performed above with `getAssetByID`.\n      const { uri } = resolveAssetSource(virtualAssetModule)!;\n\n      const asset = new Asset({\n        name: meta.name,\n        type: meta.type,\n        hash: meta.hash,\n        uri,\n        width: meta.width,\n        height: meta.height,\n      });\n\n      // TODO: FileSystem should probably support 'downloading' from drawable\n      // resources But for now it doesn't (it only supports raw resources) and\n      // React Native's Image works fine with drawable resource names for\n      // images.\n      if (Platform.OS === 'android' && !uri.includes(':') && (meta.width || meta.height)) {\n        asset.localUri = asset.uri;\n        asset.downloaded = true;\n      }\n\n      Asset.byHash[meta.hash] = asset;\n      return asset;\n    }\n\n    return Asset.fromMetadata(meta);\n  }\n\n  // @docsMissing\n  static fromMetadata(meta: AssetMetadata): Asset {\n    // The hash of the whole asset, not to be confused with the hash of a specific file returned\n    // from `selectAssetSource`\n    const metaHash = meta.hash;\n    if (Asset.byHash[metaHash]) {\n      return Asset.byHash[metaHash];\n    }\n\n    const { uri, hash } = selectAssetSource(meta);\n    const asset = new Asset({\n      name: meta.name,\n      type: meta.type,\n      hash,\n      uri,\n      width: meta.width,\n      height: meta.height,\n    });\n    Asset.byHash[metaHash] = asset;\n    return asset;\n  }\n\n  // @docsMissing\n  static fromURI(uri: string): Asset {\n    if (Asset.byUri[uri]) {\n      return Asset.byUri[uri];\n    }\n\n    // Possibly a Base64-encoded URI\n    let type = '';\n    if (uri.indexOf(';base64') > -1) {\n      type = uri.split(';')[0].split('/')[1];\n    } else {\n      const extension = AssetUris.getFileExtension(uri);\n      type = extension.startsWith('.') ? extension.substring(1) : extension;\n    }\n\n    const asset = new Asset({\n      name: '',\n      type,\n      hash: null,\n      uri,\n    });\n\n    Asset.byUri[uri] = asset;\n\n    return asset;\n  }\n\n  // @needsAudit\n  /**\n   * Downloads the asset data to a local file in the device's cache directory. Once the returned\n   * promise is fulfilled without error, the [`localUri`](#assetlocaluri) field of this asset points\n   * to a local file containing the asset data. The asset is only downloaded if an up-to-date local\n   * file for the asset isn't already present due to an earlier download. The downloaded `Asset`\n   * will be returned when the promise is resolved.\n   * @return Returns a Promise which fulfills with an `Asset` instance.\n   */\n  async downloadAsync(): Promise<this> {\n    if (this.downloaded) {\n      return this;\n    }\n    if (this.downloading) {\n      await new Promise<void>((resolve, reject) => {\n        this._downloadCallbacks.push({ resolve, reject });\n      });\n      return this;\n    }\n    this.downloading = true;\n\n    try {\n      if (Platform.OS === 'web') {\n        if (ImageAssets.isImageType(this.type)) {\n          const { width, height, name } = await ImageAssets.getImageInfoAsync(this.uri);\n          this.width = width;\n          this.height = height;\n          this.name = name;\n        } else {\n          this.name = AssetUris.getFilename(this.uri);\n        }\n      }\n      this.localUri = await downloadAsync(this.uri, this.hash, this.type, this.name);\n\n      this.downloaded = true;\n      this._downloadCallbacks.forEach(({ resolve }) => resolve());\n    } catch (e) {\n      this._downloadCallbacks.forEach(({ reject }) => reject(e));\n      throw e;\n    } finally {\n      this.downloading = false;\n      this._downloadCallbacks = [];\n    }\n    return this;\n  }\n}\n","export function getLocalAssetUri(hash: string, type: string | null): string | null {\n  // noop on web\n  return null;\n}\n","/* eslint-env browser */\nimport { Platform } from 'expo-modules-core';\n\nimport { getFilename } from './AssetUris';\n\ntype ImageInfo = {\n  name: string;\n  width: number;\n  height: number;\n};\n\nexport function isImageType(type: string): boolean {\n  return /^(jpeg|jpg|gif|png|bmp|webp|heic)$/i.test(type);\n}\n\nexport function getImageInfoAsync(url: string): Promise<ImageInfo> {\n  if (!Platform.isDOMAvailable) {\n    return Promise.resolve({ name: getFilename(url), width: 0, height: 0 });\n  }\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onerror = reject;\n    img.onload = () => {\n      resolve({\n        name: getFilename(url),\n        width: img.naturalWidth,\n        height: img.naturalHeight,\n      });\n    };\n    img.src = url;\n  });\n}\n","import { Asset } from 'expo-asset';\nimport { CodedError } from 'expo-modules-core';\n\nimport ExpoFontLoader from './ExpoFontLoader';\nimport { FontResource, FontSource, FontDisplay } from './Font.types';\n\nfunction uriFromFontSource(asset: any): string | null {\n  if (typeof asset === 'string') {\n    return asset || null;\n  } else if (typeof asset === 'object') {\n    return asset.uri || asset.localUri || asset.default || null;\n  } else if (typeof asset === 'number') {\n    return uriFromFontSource(Asset.fromModule(asset));\n  }\n  return null;\n}\n\nfunction displayFromFontSource(asset: any): FontDisplay | undefined {\n  return asset.display || FontDisplay.AUTO;\n}\n\nexport function fontFamilyNeedsScoping(name: string): boolean {\n  return false;\n}\n\nexport function getAssetForSource(source: FontSource): Asset | FontResource {\n  const uri = uriFromFontSource(source);\n  const display = displayFromFontSource(source);\n\n  if (!uri || typeof uri !== 'string') {\n    throwInvalidSourceError(uri);\n  }\n\n  return {\n    uri: uri!,\n    display,\n  };\n}\n\nfunction throwInvalidSourceError(source: any): never {\n  let type: string = typeof source;\n  if (type === 'object') type = JSON.stringify(source, null, 2);\n  throw new CodedError(\n    `ERR_FONT_SOURCE`,\n    `Expected font asset of type \\`string | FontResource | Asset\\` instead got: ${type}`\n  );\n}\n\n// NOTE(EvanBacon): No async keyword!\nexport function loadSingleFontAsync(name: string, input: Asset | FontResource): Promise<void> {\n  if (typeof input !== 'object' || typeof input.uri !== 'string' || (input as any).downloadAsync) {\n    throwInvalidSourceError(input);\n  }\n\n  try {\n    return ExpoFontLoader.loadAsync(name, input);\n  } catch {\n    // No-op.\n  }\n\n  return Promise.resolve();\n}\n\nexport function getNativeFontName(name: string): string {\n  return name;\n}\n","export const loaded: { [name: string]: boolean } = {};\nexport const loadPromises: { [name: string]: Promise<void> } = {};\n","import { CodedError } from 'expo-modules-core';\n\nimport ExpoFontLoader from './ExpoFontLoader';\nimport { FontSource } from './Font.types';\nimport { getAssetForSource, loadSingleFontAsync } from './FontLoader';\n\n/**\n * @returns the server resources that should be statically extracted.\n * @private\n */\nexport function getServerResources(): string[] {\n  return ExpoFontLoader.getServerResources();\n}\n\n/**\n * @returns clear the server resources from the global scope.\n * @private\n */\nexport function resetServerContext() {\n  return ExpoFontLoader.resetServerContext();\n}\n\nexport function registerStaticFont(fontFamily: string, source?: FontSource | null) {\n  // MUST BE A SYNC FUNCTION!\n  if (!source) {\n    throw new CodedError(\n      `ERR_FONT_SOURCE`,\n      `Cannot load null or undefined font source: { \"${fontFamily}\": ${source} }. Expected asset of type \\`FontSource\\` for fontFamily of name: \"${fontFamily}\"`\n    );\n  }\n  const asset = getAssetForSource(source);\n\n  loadSingleFontAsync(fontFamily, asset);\n}\n","import { CodedError, Platform, UnavailabilityError } from 'expo-modules-core';\n\nimport ExpoFontLoader from './ExpoFontLoader';\nimport { FontDisplay, FontSource, FontResource, UnloadFontOptions } from './Font.types';\nimport {\n  getAssetForSource,\n  loadSingleFontAsync,\n  fontFamilyNeedsScoping,\n  getNativeFontName,\n} from './FontLoader';\nimport { loaded, loadPromises } from './memory';\nimport { registerStaticFont } from './server';\n\n// @needsAudit\n// note(brentvatne): at some point we may want to warn if this is called outside of a managed app.\n/**\n * Used to transform font family names to the scoped name. This does not need to\n * be called in standalone or bare apps but it will return unscoped font family\n * names if it is called in those contexts.\n *\n * @param fontFamily Name of font to process.\n * @returns Returns a name processed for use with the [current workflow](https://docs.expo.dev/archive/managed-vs-bare/).\n */\nexport function processFontFamily(fontFamily: string | null): string | null {\n  if (!fontFamily || !fontFamilyNeedsScoping(fontFamily)) {\n    return fontFamily;\n  }\n\n  if (!isLoaded(fontFamily)) {\n    if (__DEV__) {\n      if (isLoading(fontFamily)) {\n        console.warn(\n          `You started loading the font \"${fontFamily}\", but used it before it finished loading. You need to wait for Font.loadAsync to complete before using the font.`\n        );\n      } else {\n        console.warn(\n          `fontFamily \"${fontFamily}\" is not a system font and has not been loaded through expo-font.`\n        );\n      }\n    }\n  }\n\n  return `ExpoFont-${getNativeFontName(fontFamily)}`;\n}\n\n// @needsAudit\n/**\n * Synchronously detect if the font for `fontFamily` has finished loading.\n *\n * @param fontFamily The name used to load the `FontResource`.\n * @return Returns `true` if the font has fully loaded.\n */\nexport function isLoaded(fontFamily: string): boolean {\n  if (Platform.OS === 'web') {\n    return fontFamily in loaded || !!ExpoFontLoader.isLoaded(fontFamily);\n  }\n  return fontFamily in loaded || ExpoFontLoader.customNativeFonts?.includes(fontFamily);\n}\n\n// @needsAudit\n/**\n * Synchronously detect if the font for `fontFamily` is still being loaded.\n *\n * @param fontFamily The name used to load the `FontResource`.\n * @returns Returns `true` if the font is still loading.\n */\nexport function isLoading(fontFamily: string): boolean {\n  return fontFamily in loadPromises;\n}\n\n// @needsAudit\n/**\n * Highly efficient method for loading fonts from static or remote resources which can then be used\n * with the platform's native text elements. In the browser this generates a `@font-face` block in\n * a shared style sheet for fonts. No CSS is needed to use this method.\n *\n * @param fontFamilyOrFontMap string or map of values that can be used as the [`fontFamily`](https://reactnative.dev/docs/text#style)\n * style prop with React Native Text elements.\n * @param source the font asset that should be loaded into the `fontFamily` namespace.\n *\n * @return Returns a promise that fulfils when the font has loaded. Often you may want to wrap the\n * method in a `try/catch/finally` to ensure the app continues if the font fails to load.\n */\nexport function loadAsync(\n  fontFamilyOrFontMap: string | Record<string, FontSource>,\n  source?: FontSource\n): Promise<void> {\n  // NOTE(EvanBacon): Static render pass on web must be synchronous to collect all fonts.\n  // Because of this, `loadAsync` doesn't use the `async` keyword and deviates from the\n  // standard Expo SDK style guide.\n  const isServer = Platform.OS === 'web' && typeof window === 'undefined';\n\n  if (typeof fontFamilyOrFontMap === 'object') {\n    if (source) {\n      return Promise.reject(\n        new CodedError(\n          `ERR_FONT_API`,\n          `No fontFamily can be used for the provided source: ${source}. The second argument of \\`loadAsync()\\` can only be used with a \\`string\\` value as the first argument.`\n        )\n      );\n    }\n    const fontMap = fontFamilyOrFontMap;\n    const names = Object.keys(fontMap);\n\n    if (isServer) {\n      names.map((name) => registerStaticFont(name, fontMap[name]));\n      return Promise.resolve();\n    }\n\n    return Promise.all(names.map((name) => loadFontInNamespaceAsync(name, fontMap[name]))).then(\n      () => {}\n    );\n  }\n\n  if (isServer) {\n    registerStaticFont(fontFamilyOrFontMap, source);\n    return Promise.resolve();\n  }\n\n  return loadFontInNamespaceAsync(fontFamilyOrFontMap, source);\n}\n\nasync function loadFontInNamespaceAsync(\n  fontFamily: string,\n  source?: FontSource | null\n): Promise<void> {\n  if (!source) {\n    throw new CodedError(\n      `ERR_FONT_SOURCE`,\n      `Cannot load null or undefined font source: { \"${fontFamily}\": ${source} }. Expected asset of type \\`FontSource\\` for fontFamily of name: \"${fontFamily}\"`\n    );\n  }\n\n  if (loaded[fontFamily]) {\n    return;\n  }\n\n  if (loadPromises.hasOwnProperty(fontFamily)) {\n    return loadPromises[fontFamily];\n  }\n\n  // Important: we want all callers that concurrently try to load the same font to await the same\n  // promise. If we're here, we haven't created the promise yet. To ensure we create only one\n  // promise in the program, we need to create the promise synchronously without yielding the event\n  // loop from this point.\n\n  const asset = getAssetForSource(source);\n  loadPromises[fontFamily] = (async () => {\n    try {\n      await loadSingleFontAsync(fontFamily, asset);\n      loaded[fontFamily] = true;\n    } finally {\n      delete loadPromises[fontFamily];\n    }\n  })();\n\n  await loadPromises[fontFamily];\n}\n\n// @needsAudit\n/**\n * Unloads all the custom fonts. This is used for testing.\n */\nexport async function unloadAllAsync(): Promise<void> {\n  if (!ExpoFontLoader.unloadAllAsync) {\n    throw new UnavailabilityError('expo-font', 'unloadAllAsync');\n  }\n\n  if (Object.keys(loadPromises).length) {\n    throw new CodedError(\n      `ERR_UNLOAD`,\n      `Cannot unload fonts while they're still loading: ${Object.keys(loadPromises).join(', ')}`\n    );\n  }\n\n  for (const fontFamily of Object.keys(loaded)) {\n    delete loaded[fontFamily];\n  }\n\n  await ExpoFontLoader.unloadAllAsync();\n}\n\n// @needsAudit\n/**\n * Unload custom fonts matching the `fontFamily`s and display values provided.\n * Because fonts are automatically unloaded on every platform this is mostly used for testing.\n *\n * @param fontFamilyOrFontMap The name or names of the custom fonts that will be unloaded.\n * @param options When `fontFamilyOrFontMap` is a string, this should be the font source used to load\n * the custom font originally.\n */\nexport async function unloadAsync(\n  fontFamilyOrFontMap: string | Record<string, UnloadFontOptions>,\n  options?: UnloadFontOptions\n): Promise<void> {\n  if (!ExpoFontLoader.unloadAsync) {\n    throw new UnavailabilityError('expo-font', 'unloadAsync');\n  }\n  if (typeof fontFamilyOrFontMap === 'object') {\n    if (options) {\n      throw new CodedError(\n        `ERR_FONT_API`,\n        `No fontFamily can be used for the provided options: ${options}. The second argument of \\`unloadAsync()\\` can only be used with a \\`string\\` value as the first argument.`\n      );\n    }\n    const fontMap = fontFamilyOrFontMap;\n    const names = Object.keys(fontMap);\n    await Promise.all(names.map((name) => unloadFontInNamespaceAsync(name, fontMap[name])));\n    return;\n  }\n\n  return await unloadFontInNamespaceAsync(fontFamilyOrFontMap, options);\n}\n\nasync function unloadFontInNamespaceAsync(\n  fontFamily: string,\n  options?: UnloadFontOptions | null\n): Promise<void> {\n  if (!loaded[fontFamily]) {\n    return;\n  } else {\n    delete loaded[fontFamily];\n  }\n\n  // Important: we want all callers that concurrently try to load the same font to await the same\n  // promise. If we're here, we haven't created the promise yet. To ensure we create only one\n  // promise in the program, we need to create the promise synchronously without yielding the event\n  // loop from this point.\n\n  const nativeFontName = getNativeFontName(fontFamily);\n\n  if (!nativeFontName) {\n    throw new CodedError(`ERR_FONT_FAMILY`, `Cannot unload an empty name`);\n  }\n\n  await ExpoFontLoader.unloadAsync(nativeFontName, options);\n}\n\nexport { FontDisplay, FontSource, FontResource, UnloadFontOptions };\n","import {NativeModules} from \"react-native\";\n\nconst NativeIconAPI =\n  NativeModules.RNVectorIconsManager || NativeModules.RNVectorIconsModule;\n\nexport default function ensureNativeModuleAvailable() {\n  if (!NativeIconAPI) {\n    throw new Error(\n      'The native RNVectorIcons API is not available, did you properly integrate the module? Please verify your autolinking setup and recompile.'\n    );\n  }\n}\n","const TYPE_VALUE = 'value';\nconst TYPE_ERROR = 'error';\n\nexport default function createIconSourceCache() {\n  const cache = new Map();\n\n  const setValue = (key, value) =>\n    cache.set(key, { type: TYPE_VALUE, data: value });\n\n  const setError = (key, error) =>\n    cache.set(key, { type: TYPE_ERROR, data: error });\n\n  const has = key => cache.has(key);\n\n  const get = key => {\n    if (!cache.has(key)) {\n      return undefined;\n    }\n    const { type, data } = cache.get(key);\n    if (type === TYPE_ERROR) {\n      throw data;\n    }\n    return data;\n  };\n\n  return { setValue, setError, has, get };\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableHighlight, View } from 'react-native';\nimport { pick, omit } from './object-utils';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8,\n  },\n  touchable: {\n    overflow: 'hidden',\n  },\n  icon: {\n    marginRight: 10,\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent',\n  },\n});\n\nconst IOS7_BLUE = '#007AFF';\n\nconst TEXT_PROP_NAMES = [\n  'ellipsizeMode',\n  'numberOfLines',\n  'textBreakStrategy',\n  'selectable',\n  'suppressHighlighting',\n  'allowFontScaling',\n  'adjustsFontSizeToFit',\n  'minimumFontScale',\n];\n\nconst TOUCHABLE_PROP_NAMES = [\n  'accessible',\n  'accessibilityLabel',\n  'accessibilityHint',\n  'accessibilityComponentType',\n  'accessibilityRole',\n  'accessibilityStates',\n  'accessibilityTraits',\n  'onFocus',\n  'onBlur',\n  'disabled',\n  'onPress',\n  'onPressIn',\n  'onPressOut',\n  'onLayout',\n  'onLongPress',\n  'nativeID',\n  'testID',\n  'delayPressIn',\n  'delayPressOut',\n  'delayLongPress',\n  'activeOpacity',\n  'underlayColor',\n  'selectionColor',\n  'onShowUnderlay',\n  'onHideUnderlay',\n  'hasTVPreferredFocus',\n  'tvParallaxProperties',\n];\n\nexport default function createIconButtonComponent(Icon) {\n  return class IconButton extends PureComponent {\n    static propTypes = {\n      backgroundColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n      borderRadius: PropTypes.number,\n      color: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      size: PropTypes.number,\n      iconStyle: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n    };\n\n    static defaultProps = {\n      backgroundColor: IOS7_BLUE,\n      borderRadius: 5,\n      color: 'white',\n      size: 20,\n    };\n\n    render() {\n      const { style, iconStyle, children, ...restProps } = this.props;\n\n      const iconProps = pick(\n        restProps,\n        TEXT_PROP_NAMES,\n        'style',\n        'name',\n        'size',\n        'color'\n      );\n      const touchableProps = pick(restProps, TOUCHABLE_PROP_NAMES);\n      const props = omit(\n        restProps,\n        Object.keys(iconProps),\n        Object.keys(touchableProps),\n        'iconStyle',\n        'borderRadius',\n        'backgroundColor'\n      );\n      iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n\n      const colorStyle = pick(this.props, 'color');\n      const blockStyle = pick(this.props, 'backgroundColor', 'borderRadius');\n\n      return (\n        <TouchableHighlight\n          style={[styles.touchable, blockStyle]}\n          {...touchableProps}\n        >\n          <View style={[styles.container, blockStyle, style]} {...props}>\n            <Icon {...iconProps} />\n            {typeof children === 'string' ? (\n              <Text style={[styles.text, colorStyle]} selectable={false}>\n                {children}\n              </Text>\n            ) : (\n              children\n            )}\n          </View>\n        </TouchableHighlight>\n      );\n    }\n  };\n}\n","import React, { PureComponent } from 'react';\nimport {Platform, PixelRatio, processColor, Text, NativeModules} from 'react-native';\n\nimport ensureNativeModuleAvailable from './ensure-native-module-available';\nimport createIconSourceCache from './create-icon-source-cache';\nimport createIconButtonComponent from './icon-button';\n\nexport const NativeIconAPI =\n  NativeModules.RNVectorIconsManager || NativeModules.RNVectorIconsModule;\n\nexport const DEFAULT_ICON_SIZE = 12;\nexport const DEFAULT_ICON_COLOR = 'black';\n\nexport default function createIconSet(\n  glyphMap,\n  fontFamily,\n  fontFile,\n  fontStyle\n) {\n  // Android doesn't care about actual fontFamily name, it will only look in fonts folder.\n  const fontBasename = fontFile\n    ? fontFile.replace(/\\.(otf|ttf)$/, '')\n    : fontFamily;\n\n  const fontReference = Platform.select({\n    windows: `/Assets/${fontFile}#${fontFamily}`,\n    android: fontBasename,\n    web: fontBasename,\n    default: fontFamily,\n  });\n\n  class Icon extends PureComponent {\n    root = null;\n\n    static defaultProps = {\n      size: DEFAULT_ICON_SIZE,\n      allowFontScaling: false,\n    };\n\n    render() {\n      const { name, size, color, style, children, ...props } = this.props;\n\n      let glyph = name ? glyphMap[name] || '?' : '';\n      if (typeof glyph === 'number') {\n        glyph = String.fromCodePoint(glyph);\n      }\n\n      const styleDefaults = {\n        fontSize: size,\n        color,\n      };\n\n      const styleOverrides = {\n        fontFamily: fontReference,\n        fontWeight: 'normal',\n        fontStyle: 'normal',\n      };\n\n      props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];\n\n      return (\n        <Text selectable={false} {...props}>\n          {glyph}\n          {children}\n        </Text>\n      );\n    }\n  }\n\n  const imageSourceCache = createIconSourceCache();\n\n  function resolveGlyph(name) {\n    const glyph = glyphMap[name] || '?';\n    if (typeof glyph === 'number') {\n      return String.fromCodePoint(glyph);\n    }\n    return glyph;\n  }\n\n  function getImageSourceSync(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR\n  ) {\n    ensureNativeModuleAvailable();\n\n    const glyph = resolveGlyph(name);\n    const processedColor = processColor(color);\n    const cacheKey = `${glyph}:${size}:${processedColor}`;\n\n    if (imageSourceCache.has(cacheKey)) {\n      return imageSourceCache.get(cacheKey);\n    }\n    try {\n      const imagePath = NativeIconAPI.getImageForFontSync(\n        fontReference,\n        glyph,\n        size,\n        processedColor\n      );\n      const value = { uri: imagePath, scale: PixelRatio.get() };\n      imageSourceCache.setValue(cacheKey, value);\n      return value;\n    } catch (error) {\n      imageSourceCache.setError(cacheKey, error);\n      throw error;\n    }\n  }\n\n  async function getImageSource(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR\n  ) {\n    ensureNativeModuleAvailable();\n\n    const glyph = resolveGlyph(name);\n    const processedColor = processColor(color);\n    const cacheKey = `${glyph}:${size}:${processedColor}`;\n\n    if (imageSourceCache.has(cacheKey)) {\n      return imageSourceCache.get(cacheKey);\n    }\n    try {\n      const imagePath = await NativeIconAPI.getImageForFont(\n        fontReference,\n        glyph,\n        size,\n        processedColor\n      );\n      const value = { uri: imagePath, scale: PixelRatio.get() };\n      imageSourceCache.setValue(cacheKey, value);\n      return value;\n    } catch (error) {\n      imageSourceCache.setError(cacheKey, error);\n      throw error;\n    }\n  }\n\n  async function loadFont(file = fontFile) {\n    if (Platform.OS === 'ios') {\n      ensureNativeModuleAvailable();\n      if (!file) {\n        throw new Error('Unable to load font, because no file was specified. ');\n      }\n      await NativeIconAPI.loadFontWithFileName(...file.split('.'));\n    }\n  }\n\n  function hasIcon(name) {\n    return Object.prototype.hasOwnProperty.call(glyphMap, name);\n  }\n\n  function getRawGlyphMap() {\n    return glyphMap;\n  }\n\n  function getFontFamily() {\n    return fontReference;\n  }\n\n  Icon.Button = createIconButtonComponent(Icon);\n  Icon.getImageSource = getImageSource;\n  Icon.getImageSourceSync = getImageSourceSync;\n  Icon.loadFont = loadFont;\n  Icon.hasIcon = hasIcon;\n  Icon.getRawGlyphMap = getRawGlyphMap;\n  Icon.getFontFamily = getFontFamily;\n\n  return Icon;\n}\n","\"use client\";\n\nimport createIconSet from './createIconSet';\nimport font from './vendor/react-native-vector-icons/Fonts/Ionicons.ttf';\nimport glyphMap from './vendor/react-native-vector-icons/glyphmaps/Ionicons.json';\n\nexport default createIconSet(glyphMap, 'ionicons', font);\n","import * as Font from 'expo-font';\nimport React, { ComponentClass } from 'react';\nimport {\n  Text,\n  TextProps,\n  TouchableHighlightProps,\n  ViewProps,\n  OpaqueColorValue,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nimport createIconSet from './vendor/react-native-vector-icons/lib/create-icon-set';\nimport createIconButtonComponent from './vendor/react-native-vector-icons/lib/icon-button';\n\nexport {\n  DEFAULT_ICON_COLOR,\n  DEFAULT_ICON_SIZE,\n} from './vendor/react-native-vector-icons/lib/create-icon-set';\n\nexport interface IconProps<GLYPHS extends string> extends TextProps {\n  /**\n   * Size of the icon, can also be passed as fontSize in the style object.\n   *\n   * @default 12\n   */\n  size?: number;\n\n  /**\n   * Name of the icon to show\n   *\n   * See Icon Explorer app\n   * {@link https://expo.github.io/vector-icons/}\n   */\n  name: GLYPHS;\n\n  /**\n   * Color of the icon. Can be a string or OpaqueColorValue (returned from\n   * PlatformColor(..))\n   *\n   */\n  color?: string | OpaqueColorValue;\n}\n\nexport interface IconButtonProps<GLYPHS extends string>\n  extends IconProps<GLYPHS>,\n    ViewProps,\n    TouchableHighlightProps {\n  /**\n   * Text and icon color\n   * Use iconStyle or nest a Text component if you need different colors.\n   * Can be a string or OpaqueColorValue (returned from PlatformColor(..))\n   *\n   *  @default 'white'\n   */\n  color?: string | OpaqueColorValue;\n\n  /**\n   * Border radius of the button\n   * Set to 0 to disable.\n   *\n   * @default 5\n   */\n  borderRadius?: number;\n\n  /**\n   * Styles applied to the icon only\n   * Good for setting margins or a different color.\n   *\n   * @default {marginRight: 10}\n   */\n  iconStyle?: TextStyle;\n\n  /**\n   * Style prop inherited from TextProps and TouchableWithoutFeedbackProperties\n   * Only exist here so we can have ViewStyle or TextStyle\n   *\n   */\n  style?: ViewStyle | TextStyle;\n\n  /**\n   * Background color of the button. Can be a string or OpaqueColorValue (returned from\n   * PlatformColor(..))\n   *\n   * @default '#007AFF'\n   */\n  backgroundColor?: string | OpaqueColorValue;\n}\n\nexport type GlyphMap<G extends string> = { [K in G]: number | string };\n\nexport interface Icon<G extends string, FN extends string> {\n  defaultProps: any;\n  Button: ComponentClass<IconButtonProps<G>>;\n  glyphMap: GlyphMap<G>;\n  getRawGlyphMap: () => GlyphMap<G>;\n  getFontFamily: () => FN;\n  loadFont: () => Promise<void>;\n  font: { [x: string]: any };\n  new (props: IconProps<G>): React.Component<IconProps<G>>;\n}\n\nexport default function <G extends string, FN extends string>(\n  glyphMap: GlyphMap<G>,\n  fontName: FN,\n  expoAssetId,\n  fontStyle?: any\n): Icon<G, FN> {\n  const font = { [fontName]: expoAssetId };\n  const RNVIconComponent = createIconSet(glyphMap, fontName, null, fontStyle);\n\n  return class Icon extends React.Component<IconProps<G>> {\n    static defaultProps = RNVIconComponent.defaultProps;\n    static Button = createIconButtonComponent(Icon);\n    static glyphMap = glyphMap;\n    static getRawGlyphMap = () => glyphMap;\n    static getFontFamily = () => fontName;\n    static loadFont = () => Font.loadAsync(font);\n    static font = font;\n\n    _mounted = false;\n    _icon?: any;\n\n    state = {\n      fontIsLoaded: Font.isLoaded(fontName),\n    };\n\n    async componentDidMount() {\n      this._mounted = true;\n      if (!this.state.fontIsLoaded) {\n        await Font.loadAsync(font);\n        /* eslint-disable react/no-did-mount-set-state */\n        this._mounted && this.setState({ fontIsLoaded: true });\n      }\n    }\n\n    componentWillUnmount() {\n      this._mounted = false;\n    }\n\n    setNativeProps(props) {\n      if (this._icon) {\n        this._icon.setNativeProps(props);\n      }\n    }\n\n    render() {\n      if (__DEV__ && this.props.name && !(this.props.name in glyphMap)) {\n        console.warn(`\"${this.props.name}\" is not a valid icon name for family \"${fontName}\"`);\n      }\n\n      if (!this.state.fontIsLoaded) {\n        return <Text />;\n      }\n\n      return (\n        <RNVIconComponent\n          ref={(view) => {\n            this._icon = view;\n          }}\n          {...this.props}\n        />\n      );\n    }\n  };\n}\n","const pick = (obj, ...keys) =>\n  keys\n    .flat()\n    .filter(key => Object.prototype.hasOwnProperty.call(obj, key))\n    .reduce((acc, key) => {\n      acc[key] = obj[key];\n      return acc;\n    }, {});\n\nconst omit = (obj, ...keysToOmit) => {\n  const keysToOmitSet = new Set(keysToOmit.flat());\n  return Object.getOwnPropertyNames(obj)\n    .filter(key => !keysToOmitSet.has(key))\n    .reduce((acc, key) => {\n      acc[key] = obj[key];\n      return acc;\n    }, {});\n};\n\nmodule.exports = { pick, omit };\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nexport type PackagerAsset = {\n  +__packager_asset: boolean,\n  +fileSystemLocation: string,\n  +httpServerLocation: string,\n  +width: ?number,\n  +height: ?number,\n  +scales: Array<number>,\n  +hash: string,\n  +name: string,\n  +type: string,\n  ...\n};\n\nconst assets: Array<PackagerAsset> = [];\n\nfunction registerAsset(asset: PackagerAsset): number {\n  // `push` returns new array length, so the first asset will\n  // get id 1 (not 0) to make the value truthy\n  return assets.push(asset);\n}\n\nfunction getAssetByID(assetId: number): PackagerAsset {\n  return assets[assetId - 1];\n}\n\nmodule.exports = {registerAsset, getAssetByID};\n","export const spacing = {\n  SMALL: 8,\n  MEDIUM: 12,\n  LARGE: 16,\n  XLARGE: 24,\n}; ","import { useState, useCallback } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useComparison() {\n  const [selectedFoils, setSelectedFoils] = useState<BaseProduct[]>([]);\n\n  const toggleFoilSelection = useCallback((foil: BaseProduct) => {\n    setSelectedFoils(prev => {\n      const isAlreadySelected = prev.some(f => f.model === foil.model && f.brand === foil.brand);\n      if (isAlreadySelected) {\n        return prev.filter(f => !(f.model === foil.model && f.brand === foil.brand));\n      }\n      return [...prev, foil];\n    });\n  }, []);\n\n  const isSelected = useCallback((foil: BaseProduct) => {\n    return selectedFoils.some(f => f.model === foil.model && f.brand === foil.brand);\n  }, [selectedFoils]);\n\n  const clearSelection = useCallback(() => {\n    setSelectedFoils([]);\n  }, []);\n\n  return {\n    selectedFoils,\n    toggleFoilSelection,\n    isSelected,\n    clearSelection,\n  };\n} ","import { useState, useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\n\nexport function useFilteredFoils(foils: BaseProduct[]) {\n  const [filters, setFilters] = useState<FilterOptions>({\n    brands: [],\n    series: [],\n    type: null,\n  });\n\n  const filterOptions = useMemo(() => {\n    const brands = Array.from(new Set(foils.map(foil => foil.brand)));\n    const allSeries = Array.from(new Set(foils.map(foil => foil.series)));\n    const types = ['front', 'tail'];\n\n    // Create brandSeries mapping\n    const brandSeries = brands.reduce((acc, brand) => {\n      acc[brand] = Array.from(new Set(\n        foils\n          .filter(foil => foil.brand === brand)\n          .map(foil => foil.series)\n      ));\n      return acc;\n    }, {} as Record<string, string[]>);\n\n    // Filter foils based on selected type\n    const typeFilteredFoils = filters.type \n      ? foils.filter(foil => foil.type === filters.type)\n      : foils;\n\n    // Get series based on type-filtered foils\n    const typeFilteredSeries = Array.from(new Set(typeFilteredFoils.map(foil => foil.series)));\n\n    // Filter series based on selected brands and type\n    const series = filters.brands.length > 0\n      ? Array.from(new Set(\n          typeFilteredFoils\n            .filter(foil => filters.brands.includes(foil.brand))\n            .map(foil => foil.series)\n        ))\n      : typeFilteredSeries;\n\n    return {\n      brands,\n      series,\n      types,\n      brandSeries,\n    };\n  }, [foils, filters.brands, filters.type]);\n\n  const filteredFoils = useMemo(() => {\n    return foils.filter(foil => {\n      const brandMatch = filters.brands.length === 0 || filters.brands.includes(foil.brand);\n      const seriesMatch = filters.series.length === 0 || filters.series.includes(foil.series);\n      const typeMatch = !filters.type || foil.type === filters.type;\n\n      return brandMatch && seriesMatch && typeMatch;\n    });\n  }, [foils, filters]);\n\n  return {\n    filters,\n    setFilters,\n    filteredFoils,\n    filterOptions,\n  };\n} ","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport mergeOptions from \"merge-options\";\nimport type {\n  AsyncStorageStatic,\n  MultiCallback,\n  MultiGetCallback,\n} from \"./types\";\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype OnMultiResult = Function;\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype OnResult = Function;\n\nconst merge = mergeOptions.bind({\n  concatArrays: true,\n  ignoreUndefined: true,\n});\n\nfunction mergeLocalStorageItem(key: string, value: string) {\n  const oldValue = window.localStorage.getItem(key);\n  if (oldValue) {\n    const oldObject = JSON.parse(oldValue);\n    const newObject = JSON.parse(value);\n    const nextValue = JSON.stringify(merge(oldObject, newObject));\n    window.localStorage.setItem(key, nextValue);\n  } else {\n    window.localStorage.setItem(key, value);\n  }\n}\n\nfunction createPromise<Result, Callback extends OnResult>(\n  getValue: () => Result,\n  callback?: Callback\n): Promise<Result> {\n  return new Promise((resolve, reject) => {\n    try {\n      const value = getValue();\n      callback?.(null, value);\n      resolve(value);\n    } catch (err) {\n      callback?.(err);\n      reject(err);\n    }\n  });\n}\n\nfunction createPromiseAll<\n  ReturnType,\n  Result,\n  ResultProcessor extends OnMultiResult\n>(\n  promises: Promise<Result>[],\n  callback?: MultiCallback | MultiGetCallback,\n  processResult?: ResultProcessor\n): Promise<ReturnType> {\n  return Promise.all(promises).then(\n    (result) => {\n      const value = processResult?.(result) ?? null;\n      callback?.(null, value);\n      return Promise.resolve(value);\n    },\n    (errors) => {\n      callback?.(errors);\n      return Promise.reject(errors);\n    }\n  );\n}\n\nconst AsyncStorage: AsyncStorageStatic = {\n  /**\n   * Fetches `key` value.\n   */\n  getItem: (key, callback) => {\n    return createPromise(() => window.localStorage.getItem(key), callback);\n  },\n\n  /**\n   * Sets `value` for `key`.\n   */\n  setItem: (key, value, callback) => {\n    return createPromise(\n      () => window.localStorage.setItem(key, value),\n      callback\n    );\n  },\n\n  /**\n   * Removes a `key`\n   */\n  removeItem: (key, callback) => {\n    return createPromise(() => window.localStorage.removeItem(key), callback);\n  },\n\n  /**\n   * Merges existing value with input value, assuming they are stringified JSON.\n   */\n  mergeItem: (key, value, callback) => {\n    return createPromise(() => mergeLocalStorageItem(key, value), callback);\n  },\n\n  /**\n   * Erases *all* AsyncStorage for the domain.\n   */\n  clear: (callback) => {\n    return createPromise(() => window.localStorage.clear(), callback);\n  },\n\n  /**\n   * Gets *all* keys known to the app, for all callers, libraries, etc.\n   */\n  getAllKeys: (callback) => {\n    return createPromise(() => {\n      const numberOfKeys = window.localStorage.length;\n      const keys: string[] = [];\n      for (let i = 0; i < numberOfKeys; i += 1) {\n        const key = window.localStorage.key(i) || \"\";\n        keys.push(key);\n      }\n      return keys;\n    }, callback);\n  },\n\n  /**\n   * (stub) Flushes any pending requests using a single batch call to get the data.\n   */\n  flushGetRequests: () => undefined,\n\n  /**\n   * multiGet resolves to an array of key-value pair arrays that matches the\n   * input format of multiSet.\n   *\n   *   multiGet(['k1', 'k2']) -> [['k1', 'val1'], ['k2', 'val2']]\n   */\n  multiGet: (keys, callback) => {\n    const promises = keys.map((key) => AsyncStorage.getItem(key));\n    const processResult = (result: string[]) =>\n      result.map((value, i) => [keys[i], value]);\n    return createPromiseAll(promises, callback, processResult);\n  },\n\n  /**\n   * Takes an array of key-value array pairs.\n   *   multiSet([['k1', 'val1'], ['k2', 'val2']])\n   */\n  multiSet: (keyValuePairs, callback) => {\n    const promises = keyValuePairs.map((item) =>\n      AsyncStorage.setItem(item[0], item[1])\n    );\n    return createPromiseAll(promises, callback);\n  },\n\n  /**\n   * Delete all the keys in the `keys` array.\n   */\n  multiRemove: (keys, callback) => {\n    const promises = keys.map((key) => AsyncStorage.removeItem(key));\n    return createPromiseAll(promises, callback);\n  },\n\n  /**\n   * Takes an array of key-value array pairs and merges them with existing\n   * values, assuming they are stringified JSON.\n   *\n   *   multiMerge([['k1', 'val1'], ['k2', 'val2']])\n   */\n  multiMerge: (keyValuePairs, callback) => {\n    const promises = keyValuePairs.map((item) =>\n      AsyncStorage.mergeItem(item[0], item[1])\n    );\n    return createPromiseAll(promises, callback);\n  },\n};\n\nexport default AsyncStorage;\n","import AsyncStorage from \"./AsyncStorage\";\n\nexport { useAsyncStorage } from \"./hooks\";\n\nexport type { AsyncStorageStatic } from \"./types\";\n\nexport default AsyncStorage;\n","import { BaseProduct } from '../types/scraper';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport class ProductService {\n  private static isWeb = Platform.OS === 'web';\n  private static DATA_PATH = '/data/foils.json';\n  private static CACHE_DIR = '.cache';\n\n  // Get base URL for data loading\n  private static getBaseUrl(): string {\n    if (process.env.NODE_ENV === 'development') {\n      return '';\n    }\n    return process.env.NODE_ENV === 'staging' \n      ? 'https://staging.foilquiver.com'\n      : 'https://foilquiver.com';\n  }\n\n  static async getAllProducts(): Promise<BaseProduct[]> {\n    try {\n      if (this.isWeb) {\n        const baseUrl = this.getBaseUrl();\n\n        // Try loading from data directory first\n        try {\n          const response = await fetch(`${baseUrl}${this.DATA_PATH}`);\n          if (response.ok) {\n            const products = await response.json();\n            console.log(`Loaded ${products.length} products from ${this.DATA_PATH}`);\n            return products;\n          } else {\n            console.warn(`Failed to load from ${this.DATA_PATH} (${response.status}), trying .cache directory...`);\n          }\n        } catch (error) {\n          console.warn(`Failed to load from ${this.DATA_PATH}, trying .cache directory...`, error);\n        }\n\n        // Try loading from .cache as fallback\n        try {\n          // Normalize brand names to match file names\n          const brands = ['armstrong', 'lift-foils', 'axis-foils', 'code-foils', 'kt-foils', 'uni-foil'];\n          const allProducts: BaseProduct[] = [];\n          \n          for (const brand of brands) {\n            try {\n              const response = await fetch(`${baseUrl}/${this.CACHE_DIR}/${brand}.json`);\n              if (response.ok) {\n                const products = await response.json();\n                console.log(`Loaded ${products.length} products for ${brand} from .cache`);\n                allProducts.push(...products);\n              }\n            } catch (error) {\n              console.warn(`No cache file found for ${brand}`);\n            }\n          }\n\n          if (allProducts.length > 0) {\n            return allProducts;\n          }\n        } catch (error) {\n          console.warn('Failed to load from .cache directory', error);\n        }\n      } else {\n        // For mobile, use AsyncStorage\n        const cached = await AsyncStorage.getItem('foils');\n        if (cached) {\n          const products = JSON.parse(cached);\n          console.log(`Loaded ${products.length} products from AsyncStorage`);\n          return products;\n        }\n      }\n    } catch (error) {\n      console.error('Error loading foils data:', error);\n    }\n    \n    console.warn('No foils data found in any location');\n    return [];\n  }\n} ","import { useState, useEffect } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { ProductService } from '../services/productService';\n\nexport function useFoils() {\n  const [foils, setFoils] = useState<BaseProduct[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadFoils = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const products = await ProductService.getAllProducts();\n      setFoils(products);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load foils');\n      console.error('Error loading foils:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadFoils();\n  }, []);\n\n  const refreshFoils = () => {\n    loadFoils();\n  };\n\n  return {\n    foils,\n    loading,\n    error,\n    refreshFoils\n  };\n} ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useSearchFoils(foils: BaseProduct[], searchQuery: string) {\n  const searchedFoils = useMemo(() => {\n    if (!searchQuery.trim()) {\n      return foils;\n    }\n\n    const query = searchQuery.toLowerCase().trim();\n    return foils.filter(foil => {\n      const searchableFields = [\n        foil.brand,\n        foil.model,\n        foil.series,\n        foil.specs.area.toString(),\n        foil.specs.wingspan.toString(),\n        foil.specs.aspectRatio.toString(),\n      ];\n\n      return searchableFields.some(field => \n        field.toLowerCase().includes(query)\n      );\n    });\n  }, [foils, searchQuery]);\n\n  return { searchedFoils };\n} ","import { useState, useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { sortProducts } from '../utils/sorting';\n\nexport type SortField = 'brand' | 'series' | 'model' | 'price' | 'area' | 'wingspan' | 'aspectRatio' | 'cord' | 'type' | 'link';\nexport type SortDirection = 'asc' | 'desc';\n\nexport interface SortOption {\n  field: SortField;\n  direction: SortDirection;\n}\n\nexport function useSortedFoils(foils: BaseProduct[]) {\n  const [sortOption, setSortOption] = useState<SortOption>({\n    field: 'area',\n    direction: 'asc'\n  });\n\n  const sortedFoils = useMemo(() => {\n    return sortProducts(foils, sortOption.field, sortOption.direction);\n  }, [foils, sortOption]);\n\n  return {\n    sortOption,\n    setSortOption,\n    sortedFoils\n  };\n} ","import { BaseProduct } from '../types/scraper';\nimport { SortField, SortDirection } from '../hooks/useSortedFoils';\n\nexport function sortProducts(\n  products: BaseProduct[],\n  field: SortField,\n  direction: SortDirection\n): BaseProduct[] {\n  return [...products].sort((a, b) => {\n    let valueA: string | number;\n    let valueB: string | number;\n\n    if (field === 'brand' || field === 'series' || field === 'model' || field === 'type') {\n      valueA = a[field].toLowerCase();\n      valueB = b[field].toLowerCase();\n    } else if (field === 'price') {\n      valueA = a.price || 0;\n      valueB = b.price || 0;\n    } else if (field in a.specs) {\n      valueA = a.specs[field as keyof typeof a.specs] || 0;\n      valueB = b.specs[field as keyof typeof b.specs] || 0;\n    } else {\n      valueA = '';\n      valueB = '';\n    }\n    \n    const multiplier = direction === 'asc' ? 1 : -1;\n    \n    if (typeof valueA === 'string' && typeof valueB === 'string') {\n      return valueA.localeCompare(valueB) * multiplier;\n    }\n    if (typeof valueA === 'number' && typeof valueB === 'number') {\n      return (valueA - valueB) * multiplier;\n    }\n    return 0;\n  });\n} ","/* Font Face Observer v2.3.0 - © Bram Stein. License: BSD-3-Clause */(function(){function p(a,c){document.addEventListener?a.addEventListener(\"scroll\",c,!1):a.attachEvent(\"scroll\",c)}function u(a){document.body?a():document.addEventListener?document.addEventListener(\"DOMContentLoaded\",function b(){document.removeEventListener(\"DOMContentLoaded\",b);a()}):document.attachEvent(\"onreadystatechange\",function g(){if(\"interactive\"==document.readyState||\"complete\"==document.readyState)document.detachEvent(\"onreadystatechange\",g),a()})};function w(a){this.g=document.createElement(\"div\");this.g.setAttribute(\"aria-hidden\",\"true\");this.g.appendChild(document.createTextNode(a));this.h=document.createElement(\"span\");this.i=document.createElement(\"span\");this.m=document.createElement(\"span\");this.j=document.createElement(\"span\");this.l=-1;this.h.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.i.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\nthis.j.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.m.style.cssText=\"display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;\";this.h.appendChild(this.m);this.i.appendChild(this.j);this.g.appendChild(this.h);this.g.appendChild(this.i)}\nfunction x(a,c){a.g.style.cssText=\"max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:\"+c+\";\"}function B(a){var c=a.g.offsetWidth,b=c+100;a.j.style.width=b+\"px\";a.i.scrollLeft=b;a.h.scrollLeft=a.h.scrollWidth+100;return a.l!==c?(a.l=c,!0):!1}function C(a,c){function b(){var e=g;B(e)&&null!==e.g.parentNode&&c(e.l)}var g=a;p(a.h,b);p(a.i,b);B(a)};function D(a,c,b){c=c||{};b=b||window;this.family=a;this.style=c.style||\"normal\";this.weight=c.weight||\"normal\";this.stretch=c.stretch||\"normal\";this.context=b}var E=null,F=null,G=null,H=null;function I(a){null===F&&(M(a)&&/Apple/.test(window.navigator.vendor)?(a=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))(?:\\.([0-9]+))/.exec(window.navigator.userAgent),F=!!a&&603>parseInt(a[1],10)):F=!1);return F}function M(a){null===H&&(H=!!a.document.fonts);return H}\nfunction N(a,c){var b=a.style,g=a.weight;if(null===G){var e=document.createElement(\"div\");try{e.style.font=\"condensed 100px sans-serif\"}catch(q){}G=\"\"!==e.style.font}return[b,g,G?a.stretch:\"\",\"100px\",c].join(\" \")}\nD.prototype.load=function(a,c){var b=this,g=a||\"BESbswy\",e=0,q=c||3E3,J=(new Date).getTime();return new Promise(function(K,L){if(M(b.context)&&!I(b.context)){var O=new Promise(function(r,t){function h(){(new Date).getTime()-J>=q?t(Error(\"\"+q+\"ms timeout exceeded\")):b.context.document.fonts.load(N(b,'\"'+b.family+'\"'),g).then(function(n){1<=n.length?r():setTimeout(h,25)},t)}h()}),P=new Promise(function(r,t){e=setTimeout(function(){t(Error(\"\"+q+\"ms timeout exceeded\"))},q)});Promise.race([P,O]).then(function(){clearTimeout(e);\nK(b)},L)}else u(function(){function r(){var d;if(d=-1!=k&&-1!=l||-1!=k&&-1!=m||-1!=l&&-1!=m)(d=k!=l&&k!=m&&l!=m)||(null===E&&(d=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent),E=!!d&&(536>parseInt(d[1],10)||536===parseInt(d[1],10)&&11>=parseInt(d[2],10))),d=E&&(k==y&&l==y&&m==y||k==z&&l==z&&m==z||k==A&&l==A&&m==A)),d=!d;d&&(null!==f.parentNode&&f.parentNode.removeChild(f),clearTimeout(e),K(b))}function t(){if((new Date).getTime()-J>=q)null!==f.parentNode&&f.parentNode.removeChild(f),\nL(Error(\"\"+q+\"ms timeout exceeded\"));else{var d=b.context.document.hidden;if(!0===d||void 0===d)k=h.g.offsetWidth,l=n.g.offsetWidth,m=v.g.offsetWidth,r();e=setTimeout(t,50)}}var h=new w(g),n=new w(g),v=new w(g),k=-1,l=-1,m=-1,y=-1,z=-1,A=-1,f=document.createElement(\"div\");f.dir=\"ltr\";x(h,N(b,\"sans-serif\"));x(n,N(b,\"serif\"));x(v,N(b,\"monospace\"));f.appendChild(h.g);f.appendChild(n.g);f.appendChild(v.g);b.context.document.body.appendChild(f);y=h.g.offsetWidth;z=n.g.offsetWidth;A=v.g.offsetWidth;t();\nC(h,function(d){k=d;r()});x(h,N(b,'\"'+b.family+'\",sans-serif'));C(n,function(d){l=d;r()});x(n,N(b,'\"'+b.family+'\",serif'));C(v,function(d){m=d;r()});x(v,N(b,'\"'+b.family+'\",monospace'))})})};\"object\"===typeof module?module.exports=D:(window.FontFaceObserver=D,window.FontFaceObserver.prototype.load=D.prototype.load);}());\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["isDOMAvailable","window","_window$document","document","createElement","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","OS","ReactNativePlatform","select","isAsyncDebugging","_isNativeReflectConstruct","t","Boolean","prototype","valueOf","call","Reflect","construct","_wrapNativeSuper","r","Map","Function","toString","indexOf","n","TypeError","has","get","set","Wrapper","e","apply","arguments","o","push","p","bind","setPrototypeOf","getPrototypeOf","this","constructor","Object","create","value","enumerable","writable","configurable","CodedError","_Error","code","message","_this","_classCallCheck","_inherits","_createClass","Error","_CodedError","UnavailabilityError","moduleName","propertyName","Platform","FontDisplay","getFontFaceStyleSheet","styleSheet","getStyleElement","sheet","getFontFaceRulesMatchingResource","fontFamilyName","options","rules","_toConsumableArray","cssRules","items","i","length","rule","CSSFontFaceRule","index","getFontFaceRules","filter","_ref","style","fontFamily","display","fontDisplay","serverContext","Set","name","unloadAllAsync","_unloadAllAsync","_asyncToGenerator","element","getElementById","ID","HTMLStyleElement","removeChild","unloadAsync","_unloadAsync","item","deleteRule","_x","_x2","getServerResources","entries","css","map","_ref2","_slicedToArray","join","links","_ref4","resourceId","$$type","children","id","type","concat","rel","href","as","crossorigin","getHeadElements","resetServerContext","clear","isLoaded","_getFontFaceRulesMatc","resource","undefined","values","find","asset","loadAsync","add","_createWebFontTemplate","uri","Promise","resolve","head","appendChild","userAgent","isIOS","isSafari","isEdge","isIE","isFirefox","fontStyle","styleElement","styleElementIE","cssText","textNode","createTextNode","_createWebStyle","navigator","match","test","includes","FontObserver","load","AUTO","getScaledAssetPath","scale","AssetSourceResolver","pickScale","scales","PixelRatio","scaleSuffix","httpServerLocation","replace","serverUrl","jsbundleUrl","key","assetServerURL","fromUrl","URL","searchParams","hash","fromSource","origin","source","_this$asset$width","_this$asset$height","__packager_asset","width","height","deviceScale","_downloadAsync","_customSourceTransformer","assetMapOverride","selectAssetSource","meta","_meta$fileHashes$inde","_meta$fileUris$index","_manifest2$extra","_manifest2$extra$expo","hasOwnProperty","_objectSpread","findIndex","s","fileHashes","fileUris","resolveUri","assetUrlOverride","_len","paths","Array","_key","combined","part","trim","split","resolved","pop","pathJoin","fileScale","fileExtension","encodeURIComponent","suffix","params","URLSearchParams","platform","manifest2","devServerUrl","extra","expoGo","developer","debuggerHost","bundleUrl","baseUrl","NativeModules","ExponentKernel","getFilename","url","_URL","pathname","substring","lastIndexOf","getBasename","getFileExtension","filename","dotIndex","setCustomSourceTransformer","transformer","resolveAssetSource","getAssetByID","resolver","defaultAsset","defineProperty","Asset","_ref$hash","localUri","downloading","downloaded","_downloadCallbacks","AssetUris","_downloadAsync2","reject","_yield$ImageAssets$ge","img","Image","onerror","onload","naturalWidth","naturalHeight","src","_x3","_x4","downloadAsync","forEach","_ref3","moduleId","moduleIds","isArray","all","fromModule","virtualAssetModule","fromURI","byHash","metaHash","_selectAssetSource","byUri","extension","startsWith","uriFromFontSource","default","getAssetForSource","throwInvalidSourceError","JSON","stringify","loadSingleFontAsync","input","ExpoFontLoader","_unused","loaded","loadPromises","registerStaticFont","_ExpoFontLoader$custo","customNativeFonts","fontFamilyOrFontMap","isServer","fontMap","names","keys","loadFontInNamespaceAsync","then","_loadFontInNamespaceAsync","NativeIconAPI","RNVectorIconsManager","RNVectorIconsModule","ensureNativeModuleAvailable","TYPE_ERROR","styles","StyleSheet","container","flexDirection","justifyContent","alignItems","padding","touchable","overflow","icon","marginRight","text","fontWeight","backgroundColor","TEXT_PROP_NAMES","TOUCHABLE_PROP_NAMES","createIconButtonComponent","Icon","_IconButton","_PureComponent","IconButton","_this$props","props","iconStyle","restProps","_objectWithoutProperties","_excluded","iconProps","pick","touchableProps","omit","colorStyle","blockStyle","_jsx","TouchableHighlight","_jsxs","View","Text","selectable","PureComponent","propTypes","PropTypes","borderRadius","color","size","defaultProps","DEFAULT_ICON_COLOR","createIconSet","glyphMap","fontFile","fontBasename","fontReference","windows","android","web","args","root","glyph","String","fromCodePoint","styleDefaults","fontSize","styleOverrides","allowFontScaling","cache","imageSourceCache","setValue","data","setError","error","_cache$get","resolveGlyph","_getImageSource","processedColor","processColor","cacheKey","getImageForFont","_loadFont","file","loadFontWithFileName","Button","getImageSource","getImageSourceSync","getImageForFontSync","loadFont","hasIcon","getRawGlyphMap","getFontFamily","fontName","expoAssetId","font","_defineProperty","RNVIconComponent","_Icon","_React$Component","_mounted","state","fontIsLoaded","Font","_componentDidMount","setState","_icon","setNativeProps","_this2","ref","view","React","module","exports","obj","flat","reduce","acc","_len2","keysToOmit","_key2","keysToOmitSet","getOwnPropertyNames","assets","registerAsset","assetId","spacing","SMALL","MEDIUM","LARGE","XLARGE","useComparison","_useState","useState","_useState2","selectedFoils","setSelectedFoils","toggleFoilSelection","useCallback","foil","prev","some","f","model","brand","isSelected","clearSelection","useFilteredFoils","foils","brands","series","filters","setFilters","filterOptions","useMemo","from","brandSeries","typeFilteredFoils","typeFilteredSeries","types","filteredFoils","brandMatch","seriesMatch","typeMatch","merge","concatArrays","ignoreUndefined","createPromise","getValue","callback","err","createPromiseAll","promises","processResult","result","errors","AsyncStorage","getItem","localStorage","setItem","removeItem","mergeItem","oldValue","oldObject","parse","newObject","nextValue","mergeLocalStorageItem","getAllKeys","numberOfKeys","flushGetRequests","multiGet","multiSet","keyValuePairs","multiRemove","multiMerge","_getAllProducts","ProductService","isWeb","getBaseUrl","response","fetch","DATA_PATH","ok","json","allProducts","CACHE_DIR","products","cached","useFoils","setFoils","_useState3","_useState4","loading","setLoading","_useState5","_useState6","loadFoils","getAllProducts","useEffect","refreshFoils","useSearchFoils","searchQuery","searchedFoils","query","toLowerCase","specs","area","wingspan","aspectRatio","field","useSortedFoils","direction","sortOption","setSortOption","sortedFoils","sort","a","b","valueA","valueB","price","multiplier","localeCompare","c","w","g","setAttribute","h","m","j","l","x","B","offsetWidth","scrollLeft","scrollWidth","C","parentNode","D","family","weight","stretch","context","E","F","G","H","M","fonts","N","q","J","Date","getTime","K","L","vendor","exec","parseInt","I","O","setTimeout","P","race","clearTimeout","body","removeEventListener","readyState","detachEvent","u","d","k","y","z","A","v","dir","hidden","isOptionObject","propertyIsEnumerable","object","globalThis","defaultMergeOptions","getEnumerableOwnPropertyKeys","getOwnPropertySymbols","symbols","symbol","clone","array","slice","cloneArray","cloneOptionObject","mergeKeys","merged","config","resultIndex","indices","_","option","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","bigint","bool","func","number","string","any","arrayOf","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}