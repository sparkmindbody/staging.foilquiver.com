{"version":3,"file":"static/js/screens.ea7b0f59.chunk.js","mappings":"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","sources":["src/screens/BrowseScreen.tsx","src/screens/legal/Contact.tsx","src/screens/legal/PrivacyPolicy.tsx","src/screens/legal/TermsOfService.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, Platform } from 'react-native';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { useFoils } from '../hooks/useFoils';\nimport { useSearchFoils } from '../hooks/useSearchFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { useSortedFoils, SortField, SortOption } from '../hooks/useSortedFoils';\nimport { useComparison } from '../hooks/useComparison';\nimport { FilterControls } from '../components/FilterControls';\nimport { FoilsTable } from '../components/FoilsTable';\nimport ComparisonControls from '../components/ComparisonControls';\nimport ComparisonView from '../components/ComparisonView';\nimport Footer from '../components/Footer';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { SEOHead } from '../components/SEOHead';\nimport { RootStackParamList } from '../types/navigation';\nimport { colors } from '../theme/colors';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Browse'>;\n\nexport default function BrowseScreen({ route, navigation }: Props) {\n  const { foils, loading, error, refreshFoils } = useFoils();\n  const [isComparisonView, setIsComparisonView] = useState(false);\n  const { \n    filters, \n    setFilters, \n    filteredFoils, \n    filterOptions \n  } = useFilteredFoils(foils);\n\n  const { searchedFoils } = useSearchFoils(filteredFoils, route.params?.searchQuery || '');\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(searchedFoils);\n  const { \n    selectedFoils,\n    toggleFoilSelection,\n    isSelected,\n    clearSelection\n  } = useComparison();\n\n  const handleFilterChange = (type: keyof FilterOptions, value: string) => {\n    setFilters(prev => {\n      if (type === 'type') {\n        const typeValue = value as 'front' | 'tail';\n        return { ...prev, type: prev.type === typeValue ? null : typeValue };\n      }\n      const array = prev[type] as string[];\n      return {\n        ...prev,\n        [type]: array.includes(value)\n          ? array.filter(item => item !== value)\n          : [...array, value],\n      };\n    });\n  };\n\n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleCompareSelected = () => {\n    setIsComparisonView(true);\n  };\n\n  const handleExitCompare = () => {\n    setIsComparisonView(false);\n  };\n\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return <Text style={styles.error}>{error}</Text>;\n  }\n\n  return (\n    <>\n      <SEOHead\n        title=\"FoilQuiver - Browse and compare hydrofoils\"\n        description={`Compare ${foils.length} hydrofoils across ${filterOptions.brands.length} brands. Filter by type, brand, and specifications to find your perfect foil.`}\n        canonicalUrl=\"https://foilquiver.com/browse\"\n      />\n      <View style={styles.container}>\n        <FilterControls\n          filterOptions={{\n            brands: filterOptions.brands,\n            series: filterOptions.series,\n            types: ['front', 'tail']\n          }}\n          selectedBrands={filters.brands}\n          selectedSeries={filters.series}\n          selectedTypes={filters.type ? [filters.type] : []}\n          onFilterChange={handleFilterChange}\n        />\n        <View style={styles.tableContainer}>\n          {isComparisonView ? (\n            <ComparisonView \n              foils={selectedFoils} \n              onClose={handleExitCompare}\n              onCompare={() => {}}\n            />\n          ) : (\n            <FoilsTable\n              foils={sortedFoils}\n              onSort={handleSort}\n              onFoilSelect={toggleFoilSelection}\n              isSelected={isSelected}\n              sortOption={{\n                field: sortOption.field,\n                ascending: sortOption.direction === 'asc'\n              }}\n            />\n          )}\n        </View>\n        <ComparisonControls\n          selectedFoils={selectedFoils}\n          onCompareSelected={handleCompareSelected}\n          onExitCompare={handleExitCompare}\n          onClearSelection={clearSelection}\n          isComparisonView={isComparisonView}\n        />\n        <Footer />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background.primary,\n  },\n  tableContainer: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: colors.background.primary,\n    minHeight: 0,\n  },\n  error: {\n    color: 'red',\n    padding: 16,\n    textAlign: 'center',\n  },\n}); ","import React, { useState } from 'react';\nimport { ScrollView, Text, StyleSheet, View, TextInput, TouchableOpacity, Alert } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../../types/navigation';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Contact'>;\n\nconst Contact = (props: Props) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = () => {\n    if (!name.trim() || !email.trim() || !message.trim()) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      Alert.alert('Error', 'Please enter a valid email address');\n      return;\n    }\n\n    // Here you would typically send the form data to your backend\n    // For now, we'll just show a success message\n    Alert.alert(\n      'Success',\n      'Thank you for your message! We will get back to you soon.',\n      [\n        {\n          text: 'OK',\n          onPress: () => {\n            setName('');\n            setEmail('');\n            setMessage('');\n          },\n        },\n      ]\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.content}>\n        <Text style={styles.title}>Contact Us</Text>\n        <Text style={styles.subtitle}>\n          FoilQuiver is still in very early development. Let me know if you have any feedback or feature requests!\n        </Text>\n\n        <View style={styles.form}>\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Name</Text>\n            <TextInput\n              style={styles.input}\n              value={name}\n              onChangeText={setName}\n              placeholder=\"Enter your name\"\n              placeholderTextColor=\"#999\"\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Email</Text>\n            <TextInput\n              style={styles.input}\n              value={email}\n              onChangeText={setEmail}\n              placeholder=\"Enter your email\"\n              placeholderTextColor=\"#999\"\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Message</Text>\n            <TextInput\n              style={[styles.input, styles.messageInput]}\n              value={message}\n              onChangeText={setMessage}\n              placeholder=\"Type your message here\"\n              placeholderTextColor=\"#999\"\n              multiline\n              numberOfLines={4}\n              textAlignVertical=\"top\"\n            />\n          </View>\n\n          <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n            <Text style={styles.submitButtonText}>Send Message</Text>\n          </TouchableOpacity>\n\n          <View style={styles.section}>\n            <Text style={styles.alternativeContact}>\n              Alternatively, you can email me directly at:{'\\n'}\n              sungho@sparkmindbody.com\n            </Text>\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 24,\n    lineHeight: 24,\n  },\n  form: {\n    marginTop: 20,\n  },\n  inputContainer: {\n    marginBottom: 20,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 8,\n    color: '#333',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    backgroundColor: '#fafafa',\n  },\n  messageInput: {\n    height: 120,\n    textAlignVertical: 'top',\n  },\n  submitButton: {\n    backgroundColor: '#007AFF',\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  section: {\n    marginTop: 32,\n    marginBottom: 24,\n  },\n  alternativeContact: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n    textAlign: 'center',\n  },\n});\n\nexport default Contact; ","import React from 'react';\nimport { ScrollView, Text, StyleSheet, View } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../../types/navigation';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Privacy'>;\n\nconst PrivacyPolicy = (props: Props) => {\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.content}>\n        <Text style={styles.title}>Privacy Policy</Text>\n        <Text style={styles.lastUpdated}>Last Updated: February 2025</Text>\n        \n        <View style={styles.section}>\n          <Text style={styles.heading}>1. Information We Collect</Text>\n          <Text style={styles.text}>\n            FoilQuiver collects minimal user data. We use Plausible Analytics to collect anonymous usage statistics. \n            We do not use cookies or collect any personally identifiable information.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>2. How We Use Information</Text>\n          <Text style={styles.text}>\n            Anonymous usage data helps us understand how users interact with our site and improve our services.\n            We do not sell or share any user data with third parties.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>3. Data Sources</Text>\n          <Text style={styles.text}>\n            Product information is collected from publicly available manufacturer websites. \n            We make every effort to ensure accuracy but recommend verifying specifications with manufacturers.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>4. Contact Us</Text>\n          <Text style={styles.text}>\n            For privacy-related questions, please contact us at sungho@sparkmindbody.com\n          </Text>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  lastUpdated: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 24,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 12,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n  },\n});\n\nexport default PrivacyPolicy; ","import React from 'react';\nimport { ScrollView, Text, StyleSheet, View } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../../types/navigation';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Terms'>;\n\nconst TermsOfService = (props: Props) => {\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.content}>\n        <Text style={styles.title}>Terms of Service</Text>\n        <Text style={styles.lastUpdated}>Last Updated: February 2025</Text>\n        \n        <View style={styles.section}>\n          <Text style={styles.heading}>1. Acceptance of Terms</Text>\n          <Text style={styles.text}>\n            By accessing and using FoilQuiver, you accept and agree to be bound by these Terms of Service.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>2. Use License</Text>\n          <Text style={styles.text}>\n            FoilQuiver provides product comparison information for personal, non-commercial use.\n            All content is provided \"as is\" without warranty of any kind.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>3. Disclaimer</Text>\n          <Text style={styles.text}>\n            While we strive for accuracy, we cannot guarantee the completeness or accuracy of product information.\n            Always verify specifications with manufacturers before making purchase decisions.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>4. Limitations</Text>\n          <Text style={styles.text}>\n            We shall not be liable for any damages arising from the use of FoilQuiver.\n            Product prices and specifications are subject to change without notice.\n          </Text>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  lastUpdated: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 24,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 12,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n  },\n});\n\nexport default TermsOfService; "],"names":["BrowseScreen","_ref","_route$params","route","_useFoils","navigation","useFoils","foils","loading","error","_useState","refreshFoils","useState","_useState2","_slicedToArray","isComparisonView","setIsComparisonView","_useFilteredFoils","useFilteredFoils","filters","setFilters","filteredFoils","filterOptions","searchedFoils","useSearchFoils","params","searchQuery","_useSortedFoils","useSortedFoils","sortOption","setSortOption","sortedFoils","_useComparison","useComparison","selectedFoils","toggleFoilSelection","isSelected","clearSelection","handleExitCompare","_jsx","LoadingIndicator","Text","style","styles","children","_jsxs","_Fragment","SEOHead","title","description","length","brands","canonicalUrl","View","container","FilterControls","series","types","selectedBrands","selectedSeries","selectedTypes","type","onFilterChange","value","prev","typeValue","_objectSpread","array","_defineProperty","includes","filter","item","concat","_toConsumableArray","tableContainer","ComparisonView","onClose","onCompare","FoilsTable","onSort","field","direction","onFoilSelect","ascending","ComparisonControls","onCompareSelected","onExitCompare","onClearSelection","Footer","StyleSheet","create","flex","backgroundColor","colors","background","primary","padding","minHeight","color","textAlign","content","fontSize","fontWeight","marginBottom","subtitle","lineHeight","form","marginTop","inputContainer","label","input","borderWidth","borderColor","borderRadius","messageInput","height","textAlignVertical","submitButton","alignItems","submitButtonText","section","alternativeContact","props","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","message","setMessage","SafeAreaView","ScrollView","TextInput","onChangeText","placeholder","placeholderTextColor","keyboardType","autoCapitalize","multiline","numberOfLines","TouchableOpacity","onPress","trim","test","Alert","alert","text","lastUpdated","heading"],"sourceRoot":""}