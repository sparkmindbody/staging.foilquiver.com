{"version":3,"file":"static/js/358.2e6f5b87.chunk.js","mappings":"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","sources":["src/components/Footer.tsx","src/components/AppLayout.tsx","src/components/FoilCollectionView.tsx","src/components/FoilsTable.tsx","src/components/SEOHead.tsx","src/components/Toast.tsx","src/hooks/useSearchFoils.ts","src/hooks/useSortedFoils.ts","src/utils/sorting.ts","src/components/ErrorMessage.tsx","src/components/QuiverView.tsx","src/screens/QuiverScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\nexport default function Footer() {\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { width } = useWindowDimensions();\n  const { colors } = useTheme();\n  const isMobile = width < 768;\n\n  return (\n    <View style={[\n      styles.container, \n      isMobile && styles.containerMobile,\n      { \n        backgroundColor: colors.background.primary,\n        borderTopColor: colors.border\n      }\n    ]}>\n      <View style={[styles.content, isMobile && styles.contentMobile]}>\n        <View style={[styles.linksContainer, isMobile && styles.linksContainerMobile]}>\n          <View style={[styles.linkGroup, isMobile && styles.linkGroupMobile]}>\n            <Pressable onPress={() => navigation.navigate('Terms')}>\n              <Text style={[styles.link, { color: colors.text.secondary }]}>Terms of Service</Text>\n            </Pressable>\n            <Text style={[styles.separator, { color: colors.text.tertiary }]}>•</Text>\n            <Pressable onPress={() => navigation.navigate('Privacy')}>\n              <Text style={[styles.link, { color: colors.text.secondary }]}>Privacy Policy</Text>\n            </Pressable>\n            <Text style={[styles.separator, { color: colors.text.tertiary }]}>•</Text>\n            <Pressable onPress={() => navigation.navigate('Contact')}>\n              <Text style={[styles.link, { color: colors.text.secondary }]}>Contact Us</Text>\n            </Pressable>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    padding: spacing.LARGE,\n  },\n  containerMobile: {\n    padding: 0,\n  },\n  content: {\n    padding: 0,\n    borderTopWidth: 1,\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n  },\n  contentMobile: {\n    flexDirection: 'column',\n    gap: 8,\n  },\n  linksContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  linksContainerMobile: {\n    flexDirection: 'column',\n    gap: spacing.SMALL,\n  },\n  linkGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.LARGE,\n  },\n  linkGroupMobile: {\n    gap: 8,\n  },\n  link: {\n    fontSize: 14,\n  },\n  separator: {\n    fontSize: 14,\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Footer from './Footer';\nimport { useTheme } from '../theme/ThemeContext';\n\ninterface AppLayoutProps {\n  children: React.ReactNode;\n  showFooter?: boolean;\n}\n\nexport const AppLayout: React.FC<AppLayoutProps> = ({ \n  children, \n  showFooter = true,\n}) => {\n  const { colors } = useTheme();\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.primary }]}>\n      <View style={styles.content}>\n        {children}\n      </View>\n      {showFooter && <Footer />}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: 1,\n    width: '100%',\n  },\n}); ","import React, { useState, useCallback } from 'react';\nimport { View, StyleSheet, Alert, Platform } from 'react-native';\nimport { FoilsTable } from './FoilsTable';\nimport { Toast } from './Toast';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\nimport { BaseProduct, FilterOptions } from '../types/scraper';\nimport { Column } from '../constants/layout';\nimport { useSearchFoils } from '../hooks/useSearchFoils';\nimport { useRoute } from '@react-navigation/native';\nimport { RootStackParamList } from '../types/navigation';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\nimport { SortField } from '../types/scraper';\n\ninterface FoilCollectionViewProps {\n  foils: BaseProduct[];\n  allFoils: BaseProduct[];\n  columns: Column[];\n  searchQuery: string;\n  onSearch?: (query: string) => void;\n  onUpdateFoils?: (foils: BaseProduct[]) => void;\n  renderHeader?: () => React.ReactNode;\n  renderControls?: () => React.ReactNode;\n  onColumnVisibilityChange?: (columnId: string) => void;\n  onResetColumns?: () => void;\n  filterOptions?: {\n    brands: string[];\n    series: string[];\n    types: ('front' | 'tail')[];\n  };\n  selectedFilters?: FilterOptions;\n  onFilterChange?: (type: keyof FilterOptions, value: string) => void;\n  onClearFilters?: () => void;\n}\n\nexport const FoilCollectionView: React.FC<FoilCollectionViewProps> = ({\n  foils,\n  allFoils,\n  columns,\n  searchQuery,\n  onSearch,\n  onUpdateFoils,\n  renderHeader,\n  renderControls,\n  onColumnVisibilityChange,\n  onResetColumns,\n  filterOptions,\n  selectedFilters,\n  onFilterChange,\n  onClearFilters,\n}) => {\n  const { colors } = useTheme();\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const route = useRoute<{ key: string; name: keyof RootStackParamList }>();\n  const isComparisonView = route.name === 'Comparison';\n\n  // Use the search hook to filter allFoils based on searchQuery\n  const { searchedFoils } = useSearchFoils(allFoils, searchQuery);\n\n  // Combine current foils with search results, marking search results as temporary\n  const displayFoils = React.useMemo(() => {\n    if (isComparisonView) {\n      if (searchQuery) {\n        // Get search results that aren't already in the current foils\n        const newSearchResults = searchedFoils.filter(searchFoil => \n          !foils.some(existingFoil => \n            existingFoil.model === searchFoil.model && \n            existingFoil.brand === searchFoil.brand\n          )\n        );\n        // Show search results at the top, followed by current foils\n        return [...newSearchResults, ...foils];\n      }\n      // Without search, show current foils\n      return foils;\n    }\n\n    // For other views, combine current foils with search results\n    if (searchQuery) {\n      const newSearchResults = searchedFoils.filter(searchFoil => \n        !foils.some(existingFoil => \n          existingFoil.model === searchFoil.model && \n          existingFoil.brand === searchFoil.brand\n        )\n      );\n      return [...foils, ...newSearchResults];\n    }\n\n    return foils;\n  }, [foils, searchedFoils, searchQuery, isComparisonView]);\n\n  // Add sorting state\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(displayFoils);\n\n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const removeFoil = useCallback((foil: BaseProduct) => {\n    const updatedFoils = foils.filter(f => \n      !(f.model === foil.model && f.brand === foil.brand)\n    );\n    onUpdateFoils?.(updatedFoils);\n    setToastMessage(`Removed ${foil.model} from your comparison`);\n    setShowToast(true);\n    setTimeout(() => setShowToast(false), 2000);\n  }, [foils, onUpdateFoils]);\n\n  const handleFoilSelect = useCallback((foil: BaseProduct) => {\n    const isExisting = foils.some(f => \n      f.model === foil.model && \n      f.brand === foil.brand\n    );\n\n    if (isExisting && isComparisonView) {\n      // Show confirmation dialog for removing foils in comparison view\n      if (Platform.OS === 'web') {\n        const confirmed = window.confirm(`Are you sure you want to remove ${foil.model} from your comparison?`);\n        if (confirmed) {\n          removeFoil(foil);\n        }\n      } else {\n        Alert.alert(\n          'Remove Foil',\n          `Are you sure you want to remove ${foil.model} from your comparison?`,\n          [\n            {\n              text: 'Cancel',\n              style: 'cancel'\n            },\n            {\n              text: 'Remove',\n              style: 'destructive',\n              onPress: () => removeFoil(foil)\n            }\n          ]\n        );\n      }\n    } else {\n      // Add new foil or remove in non-comparison view\n      if (isExisting) {\n        const updatedFoils = foils.filter(f => \n          !(f.model === foil.model && f.brand === foil.brand)\n        );\n        onUpdateFoils?.(updatedFoils);\n        setToastMessage(`Removed ${foil.model} from your collection`);\n      } else {\n        onUpdateFoils?.([...foils, foil]);\n        setToastMessage(`Added ${foil.model} to your collection`);\n      }\n      setShowToast(true);\n      setTimeout(() => setShowToast(false), 2000);\n    }\n  }, [foils, onUpdateFoils, isComparisonView, removeFoil]);\n\n  const isSelected = useCallback((foil: BaseProduct) => {\n    if (isComparisonView) {\n      // In comparison view with search, highlight foils that are NOT in the current selection\n      if (searchQuery) {\n        return !foils.some(f => \n          f.model === foil.model && \n          f.brand === foil.brand\n        );\n      }\n      // Without search, no highlighting\n      return false;\n    }\n    return false;\n  }, [foils, isComparisonView, searchQuery]);\n\n  const isTemporary = useCallback((foil: BaseProduct) => {\n    return !foils.some(f => \n      f.model === foil.model && \n      f.brand === foil.brand\n    );\n  }, [foils]);\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.primary }]}>\n      {renderHeader?.()}\n      \n      <View style={styles.content}>\n        <FoilsTable\n          foils={sortedFoils}\n          columns={columns}\n          sortOption={{\n            field: sortOption.field,\n            ascending: sortOption.direction === 'asc'\n          }}\n          onSort={handleSort}\n          onFoilSelect={handleFoilSelect}\n          isSelected={isSelected}\n          isTemporary={isTemporary}\n          filters={{ brands: [], series: [], type: [] }}\n        />\n      </View>\n\n      {renderControls?.()}\n\n      {showToast && (\n        <Toast message={toastMessage} type=\"success\" />\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...(Platform.OS === 'web' ? {\n      maxWidth: '100%',\n      width: '100%',\n      overflow: 'hidden',\n    } : {\n      padding: spacing.MEDIUM,\n    }),\n  },\n  content: {\n    flex: 1,\n    ...(Platform.OS === 'web' ? {\n      padding: spacing.MEDIUM,\n    } : {}),\n  },\n}); ","/**\n * FoilsTable Component\n * \n * IMPORTANT: Column Alignment\n * - The table uses fixed column widths for consistent layout and horizontal scrolling\n * - Each column width in headerCell must match the corresponding cell width\n * - Current widths:\n *   - Regular columns (brand, model, type, series): 150px\n *   - Number columns (area, wingspan, AR, price): 100px\n *   - Link column: 100px\n * - When modifying column styles, always update both headerCell and cell styles to maintain alignment\n * - Table has a minWidth of 1200px to ensure proper layout on all screen sizes\n */\n\nimport React, { useEffect } from 'react';\nimport { View, Text, Pressable, ScrollView, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { BaseProduct, SortField } from '../types/scraper';\nimport { useTheme } from '../theme/ThemeContext';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT, COLUMN_WIDTHS, getTableWidth, getContentWidth, Column } from '../constants/layout';\nimport { saveSortOption, loadSortOption } from '../utils/storage';\nimport { trackAction, ANALYTICS_EVENTS } from '../utils/analytics';\nimport { spacing } from '../theme/spacing';\n\ninterface FilterOptions {\n  brands: string[];\n  series: string[];\n  type: string[];\n}\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  onSort: (field: SortField) => void;\n  onFoilSelect: (foil: BaseProduct) => void;\n  isSelected: (foil: BaseProduct) => boolean;\n  isTemporary?: (foil: BaseProduct) => boolean;\n  sortOption: { field: SortField; ascending: boolean };\n  columns: Column[];\n  filters: FilterOptions;\n  selectedFoils?: BaseProduct[];\n  onCompare?: () => void;\n  onClearSelection?: () => void;\n}\n\nconst DEFAULT_COLUMNS = [\n  { id: 'brand', label: 'Brand', isVisible: true },\n  { id: 'series', label: 'Series', isVisible: false },\n  { id: 'model', label: 'Model', isVisible: true },\n  { id: 'area', label: 'Area', isVisible: true },\n  { id: 'wingspan', label: 'Span', isVisible: true },\n  { id: 'aspectRatio', label: 'AR', isVisible: true },\n  { id: 'type', label: 'Type', isVisible: true },\n  { id: 'price', label: 'Price', isVisible: true },\n  { id: 'link', label: 'Link', isVisible: true },\n];\n\nexport const FoilsTable: React.FC<FoilsTableProps> = ({\n  foils,\n  onSort,\n  onFoilSelect,\n  isSelected,\n  isTemporary,\n  sortOption,\n  columns,\n  filters,\n  selectedFoils,\n  onCompare,\n  onClearSelection,\n}) => {\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const { colors } = useTheme();\n\n  // Load saved sort option on mount\n  useEffect(() => {\n    const loadSavedSort = async () => {\n      try {\n        const savedSort = await loadSortOption();\n        if (savedSort && (savedSort.field !== sortOption.field || savedSort.ascending !== sortOption.ascending)) {\n          onSort(savedSort.field);\n        }\n      } catch (error) {\n        console.error('Error loading sort option:', error);\n      }\n    };\n\n    loadSavedSort();\n  }, []);\n\n  // Save sort option when it changes\n  useEffect(() => {\n    const saveSortSettings = async () => {\n      try {\n        await saveSortOption({\n          field: sortOption.field,\n          ascending: sortOption.ascending\n        });\n      } catch (error) {\n        console.error('Error saving sort option:', error);\n      }\n    };\n\n    saveSortSettings();\n  }, [sortOption]);\n\n  const getColumnWidth = (columnId: string) => {\n    return COLUMN_WIDTHS[columnId as keyof typeof COLUMN_WIDTHS] || 150;\n  };\n\n  const isColumnFiltered = (columnId: string) => {\n    switch (columnId) {\n      case 'brand':\n        return filters.brands.length > 0;\n      case 'series':\n        return filters.series.length > 0;\n      case 'type':\n        return filters.type.length > 0;\n      default:\n        return false;\n    }\n  };\n\n  const renderSortIcon = (columnId: string) => {\n    if (sortOption.field !== columnId) {\n      return (\n        <View style={styles.sortIconContainer}>\n          <Text style={[styles.sortIcon, { color: colors.text.tertiary }]}>▲</Text>\n          <Text style={[styles.sortIcon, { color: colors.text.tertiary }]}>▼</Text>\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.sortIconContainer}>\n        <Text style={[\n          styles.sortIcon,\n          sortOption.ascending && [styles.sortIconUpActive, { color: colors.primary }]\n        ]}>▲</Text>\n        <Text style={[\n          styles.sortIcon,\n          !sortOption.ascending && [styles.sortIconDownActive, { color: colors.primary }]\n        ]}>▼</Text>\n      </View>\n    );\n  };\n\n  const getCellContent = (foil: BaseProduct, columnId: string) => {\n    let content: React.ReactNode = '-';\n    \n    switch (columnId) {\n      case 'brand':\n        content = foil.brand;\n        break;\n      case 'model':\n        content = foil.model;\n        break;\n      case 'series':\n        content = foil.series || '-';\n        break;\n      case 'area':\n        content = foil.specs?.area?.toFixed(2) || '-';\n        break;\n      case 'wingspan':\n        content = foil.specs?.wingspan?.toFixed(2) || '-';\n        break;\n      case 'aspectRatio':\n        content = foil.specs?.aspectRatio?.toFixed(2) || '-';\n        break;\n      case 'type':\n        content = foil.type || '-';\n        break;\n      case 'price':\n        content = foil.price ? `$${foil.price}` : '-';\n        break;\n      case 'link':\n        return (\n          <Pressable\n            style={[styles.linkButton, { backgroundColor: colors.primary }]}\n            onPress={() => window.open(foil.sourceUrl, '_blank')}\n          >\n            <Text style={[styles.linkText, { color: colors.text.inverse }]}>View</Text>\n            <Text style={[styles.externalLinkIcon, { color: colors.text.inverse }]}>↗</Text>\n          </Pressable>\n        );\n    }\n\n    return (\n      <Text \n        style={[\n          styles.cellText,\n          { color: colors.text.primary },\n          ['area', 'wingspan', 'aspectRatio', 'price'].includes(columnId) && styles.numberText\n        ]}\n      >\n        {content}\n      </Text>\n    );\n  };\n\n  const handleSort = (field: SortField) => {\n    trackAction(ANALYTICS_EVENTS.SORT_FOILS, {\n      field,\n      direction: sortOption.field === field && sortOption.ascending ? 'desc' : 'asc'\n    });\n    onSort(field);\n  };\n\n  const tableWidth = getTableWidth(columns);\n\n  return (\n    <View style={styles.container}>\n      <ScrollView \n        horizontal\n        showsHorizontalScrollIndicator={true}\n        style={styles.horizontalScrollView}\n        contentContainerStyle={{\n          width: tableWidth,\n          flexGrow: 0,\n          margin: 0,\n          padding: 0,\n        }}\n      >\n        <View style={[\n          styles.tableContent,\n          { width: tableWidth }\n        ]}>\n          <View style={[\n            styles.tableHeader,\n            { backgroundColor: colors.background.tertiary }\n          ]}>\n            <View style={[\n              styles.headerRow,\n              { \n                borderBottomColor: colors.border,\n                backgroundColor: colors.background.secondary,\n              }\n            ]}>\n              {columns.map(column => column.isVisible && (\n                <Pressable\n                  key={column.id}\n                  style={[\n                    styles.headerCell,\n                    { \n                      width: getColumnWidth(column.id),\n                      borderRightColor: colors.text.tertiary + '40',\n                      borderBottomColor: isColumnFiltered(column.id) ? colors.primary : colors.border,\n                      backgroundColor: colors.background.tertiary,\n                      borderRightWidth: 1,\n                    },\n                    isColumnFiltered(column.id) && styles.headerCellFiltered\n                  ]}\n                  onPress={() => handleSort(column.id as SortField)}\n                >\n                  <Text style={[\n                    styles.headerText,\n                    { \n                      color: isColumnFiltered(column.id) ? colors.primary : colors.text.primary,\n                      fontWeight: '600',\n                    }\n                  ]}>\n                    {column.label}\n                  </Text>\n                  {renderSortIcon(column.id)}\n                </Pressable>\n              ))}\n            </View>\n          </View>\n          <ScrollView \n            style={[styles.scrollView, { backgroundColor: colors.background.primary }]}\n            showsVerticalScrollIndicator={true}\n            bounces={false}\n          >\n            {foils.map((foil, index) => {\n              const selected = isSelected(foil);\n              const temporary = isTemporary?.(foil);\n              const rowKey = `${foil.model}-${foil.specs?.area || 'unknown'}-${index}`;\n              \n              return (\n                <Pressable\n                  key={rowKey}\n                  onPress={() => onFoilSelect(foil)}\n                  style={({ pressed }) => [\n                    styles.row,\n                    { borderBottomColor: colors.border },\n                    index % 2 === 0 && [styles.rowEven, { backgroundColor: colors.background.secondary + '50' }],\n                    selected && [styles.rowSelected, { \n                      backgroundColor: `${colors.primary}15`,\n                    }],\n                    temporary && [styles.rowTemporary, {\n                      backgroundColor: `${colors.success}10`,\n                    }],\n                    Platform.OS === 'web' && pressed && !selected && [styles.rowHovered, { \n                      backgroundColor: `${colors.primary}10`,\n                    }]\n                  ]}\n                >\n                  {columns.map(column => column.isVisible && (\n                    <View\n                      key={`${rowKey}-${column.id}`}\n                      style={[\n                        styles.cell,\n                        { \n                          width: getColumnWidth(column.id),\n                          borderRightColor: colors.border,\n                          borderRightWidth: 1,\n                        }\n                      ]}\n                    >\n                      {getCellContent(foil, column.id)}\n                    </View>\n                  ))}\n                </Pressable>\n              );\n            })}\n          </ScrollView>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    overflow: 'hidden',\n  },\n  horizontalScrollView: {\n    flex: 1,\n    width: '100%',\n  },\n  tableContent: {\n    flex: 1,\n    width: '100%',\n  },\n  tableHeader: {\n    borderBottomWidth: 1,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.05,\n    shadowRadius: 1,\n    elevation: 2,\n  },\n  headerRow: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    width: '100%',\n    minWidth: 'fit-content',\n    flexShrink: 0,\n  },\n  headerCell: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: spacing.MEDIUM,\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      transition: 'all 0.2s ease',\n    }),\n  },\n  headerCellFiltered: {\n    borderBottomWidth: 2,\n  },\n  headerText: {\n    fontSize: 14,\n    flex: 1,\n    letterSpacing: 0.3,\n  },\n  row: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    width: '100%',\n    minWidth: 'fit-content',\n    flexShrink: 0,\n    ...(Platform.OS === 'web' && {\n      margin: 0,\n      padding: 0,\n    }),\n  },\n  rowEven: {},\n  rowSelected: {\n    borderStyle: 'solid',\n  },\n  rowHovered: {\n    borderStyle: 'solid',\n  },\n  cell: {\n    padding: spacing.MEDIUM,\n    borderRightWidth: 1,\n  },\n  cellText: {\n    fontSize: 14,\n  },\n  numberText: {\n    textAlign: 'right',\n  },\n  scrollView: {\n    flex: 1,\n  },\n  sortIconContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: 28,\n    justifyContent: 'center',\n    width: 16,\n    gap: spacing.XSMALL,\n    marginLeft: spacing.SMALL,\n  },\n  sortIcon: {\n    fontSize: 12,\n    width: 12,\n    height: 10,\n    lineHeight: 10,\n    textAlign: 'center',\n  },\n  sortIconUpActive: {\n    fontSize: 13,\n  },\n  sortIconDownActive: {\n    fontSize: 13,\n  },\n  linkButton: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    minWidth: 44,\n    alignItems: 'center',\n    position: 'relative',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  linkText: {\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  externalLinkIcon: {\n    position: 'absolute',\n    top: 0,\n    right: 2,\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  rowTemporary: {\n    borderStyle: 'dashed',\n  },\n});\n","import { Helmet } from 'react-helmet-async';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  canonicalUrl?: string;\n  imageUrl?: string;\n}\n\nexport const SEOHead: React.FC<SEOHeadProps> = ({\n  title,\n  description,\n  canonicalUrl,\n  imageUrl\n}) => {\n  const siteTitle = 'FoilQuiver';\n  const fullTitle = `${title} | ${siteTitle}`;\n  \n  return (\n    <Helmet>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      {imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n      \n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      {imageUrl && <meta name=\"twitter:image\" content={imageUrl} />}\n    </Helmet>\n  );\n}; ","import React, { useEffect, useRef } from 'react';\nimport { View, Text, StyleSheet, Animated, Platform } from 'react-native';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\ninterface ToastProps {\n  message: string;\n  type?: 'success' | 'error' | 'info';\n  duration?: number;\n}\n\nexport const Toast: React.FC<ToastProps> = ({\n  message,\n  type = 'success',\n  duration = 2000,\n}) => {\n  const { colors } = useTheme();\n  const opacity = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    // Fade in\n    Animated.sequence([\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 200,\n        useNativeDriver: true,\n      }),\n      // Hold\n      Animated.delay(duration - 400),\n      // Fade out\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver: true,\n      }),\n    ]).start();\n  }, [duration, opacity]);\n\n  const getBackgroundColor = () => {\n    switch (type) {\n      case 'success':\n        return colors.success;\n      case 'error':\n        return colors.error;\n      case 'info':\n        return colors.primary;\n      default:\n        return colors.primary;\n    }\n  };\n\n  return (\n    <Animated.View\n      style={[\n        styles.container,\n        {\n          backgroundColor: getBackgroundColor(),\n          opacity,\n        },\n      ]}\n    >\n      <Text style={[styles.message, { color: colors.text.inverse }]}>\n        {message}\n      </Text>\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    bottom: spacing.LARGE,\n    left: '50%',\n    transform: [{ translateX: -150 }],\n    minWidth: 300,\n    maxWidth: 400,\n    padding: spacing.MEDIUM,\n    borderRadius: 8,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n    elevation: 4,\n    zIndex: 1000,\n    ...(Platform.OS === 'web' && {\n      cursor: 'default',\n      userSelect: 'none',\n    }),\n  },\n  message: {\n    fontSize: 14,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n}); ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useSearchFoils(foils: BaseProduct[], searchQuery: string) {\n  const searchedFoils = useMemo(() => {\n    if (!searchQuery.trim()) {\n      return foils;\n    }\n\n    const query = searchQuery.toLowerCase().trim();\n    return foils.filter(foil => {\n      const searchableText = [\n        foil.brand,\n        foil.model,\n        foil.series || '',\n        foil.type || '',\n        foil.specs?.area?.toString() || '',\n        foil.specs?.wingspan?.toString() || '',\n        foil.specs?.aspectRatio?.toString() || '',\n      ].join(' ').toLowerCase();\n\n      return searchableText.includes(query);\n    });\n  }, [foils, searchQuery]);\n\n  return { searchedFoils };\n} ","import { useState, useMemo } from 'react';\nimport { BaseProduct, SortField } from '../types/scraper';\nimport { sortProducts } from '../utils/sorting';\n\nexport interface SortOption {\n  field: SortField;\n  direction: 'asc' | 'desc';\n}\n\nexport function useSortedFoils(foils: BaseProduct[]) {\n  const [sortOption, setSortOption] = useState<SortOption>({\n    field: 'area',\n    direction: 'desc'\n  });\n\n  const sortedFoils = useMemo(() => {\n    return sortProducts(foils, sortOption.field, sortOption.direction);\n  }, [foils, sortOption]);\n\n  return {\n    sortOption,\n    setSortOption,\n    sortedFoils\n  };\n} ","import { BaseProduct } from '../types/scraper';\nimport { SortField, SortDirection } from '../hooks/useSortedFoils';\n\nexport function sortProducts(\n  products: BaseProduct[],\n  field: SortField,\n  direction: SortDirection\n): BaseProduct[] {\n  return [...products].sort((a, b) => {\n    let valueA: string | number;\n    let valueB: string | number;\n\n    if (field === 'brand' || field === 'series' || field === 'model' || field === 'type') {\n      valueA = a[field].toLowerCase();\n      valueB = b[field].toLowerCase();\n    } else if (field === 'price') {\n      valueA = a.price || 0;\n      valueB = b.price || 0;\n    } else if (field in a.specs) {\n      valueA = a.specs[field as keyof typeof a.specs] || 0;\n      valueB = b.specs[field as keyof typeof b.specs] || 0;\n    } else {\n      valueA = '';\n      valueB = '';\n    }\n    \n    const multiplier = direction === 'asc' ? 1 : -1;\n    \n    if (typeof valueA === 'string' && typeof valueB === 'string') {\n      return valueA.localeCompare(valueB) * multiplier;\n    }\n    if (typeof valueA === 'number' && typeof valueB === 'number') {\n      return (valueA - valueB) * multiplier;\n    }\n    return 0;\n  });\n} ","import React from 'react';\nimport { View, Text, Pressable, StyleSheet } from 'react-native';\n\ninterface ErrorMessageProps {\n  message: string;\n  onRetry?: () => void;\n}\n\nexport function ErrorMessage({ message, onRetry }: ErrorMessageProps) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.message}>{message}</Text>\n      {onRetry && (\n        <Pressable\n          style={({ pressed }) => [\n            styles.retryButton,\n            pressed && styles.retryButtonPressed\n          ]}\n          onPress={onRetry}\n        >\n          <Text style={styles.retryButtonText}>Retry</Text>\n        </Pressable>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: '#ffebee',\n    borderRadius: 8,\n    margin: 16,\n  },\n  message: {\n    color: '#c62828',\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 12,\n  },\n  retryButton: {\n    backgroundColor: '#c62828',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 6,\n  },\n  retryButtonPressed: {\n    backgroundColor: '#b71c1c',\n  },\n  retryButtonText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n}); ","import React, { useState, useCallback, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, Platform, StyleSheet, Alert } from 'react-native';\nimport { FoilCollectionView } from './FoilCollectionView';\nimport { LoadingIndicator } from './LoadingIndicator';\nimport { BaseProduct } from '../types/scraper';\nimport { Column } from '../constants/layout';\nimport { useTheme } from '../theme/ThemeContext';\nimport { trackAction, ANALYTICS_EVENTS } from '../utils/analytics';\nimport { QuiverViewProps } from '../types/quiver';\nimport { spacing } from '../theme/spacing';\nimport { FilterOptions } from '../types/scraper';\nimport { useApp } from '../context/AppContext';\nimport { generateFoilId } from '../utils/foilUtils';\n\nexport const QuiverView: React.FC<QuiverViewProps> = ({\n  foils: initialFoils,\n  allFoils,\n  columns,\n  quiverName = 'Untitled Quiver',\n  quiverId,\n  searchQuery = '',\n  onSearch,\n  onUpdateQuiver,\n  onClose,\n  isLoading,\n  error,\n}) => {\n  const { colors } = useTheme();\n  const { filters, setFilters, selectedFoils, setSelectedFoils } = useApp();\n  const [localFoils, setLocalFoils] = useState<BaseProduct[]>(initialFoils);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n\n  // Sync local foils with selected foils when they change\n  useEffect(() => {\n    if (selectedFoils.length > 0) {\n      setLocalFoils(selectedFoils);\n      setHasUnsavedChanges(false);\n    }\n  }, [selectedFoils]);\n\n  const handleUpdateFoils = (updatedFoils: BaseProduct[]) => {\n    setLocalFoils(updatedFoils);\n    setHasUnsavedChanges(true);\n  };\n\n  const handleSaveChanges = async () => {\n    try {\n      // Convert foils to foil_ids before saving\n      const foil_ids = localFoils.map(foil => generateFoilId(foil));\n      \n      await onUpdateQuiver?.(localFoils);\n      setHasUnsavedChanges(false);\n      trackAction(ANALYTICS_EVENTS.UPDATE_QUIVER, {\n        quiverId,\n        quiverName,\n        foilCount: localFoils.length\n      });\n    } catch (error) {\n      console.error('Error saving quiver changes:', error);\n      if (Platform.OS === 'web') {\n        window.alert('Failed to save changes. Please try again.');\n      } else {\n        Alert.alert('Error', 'Failed to save changes. Please try again.');\n      }\n    }\n  };\n\n  const handleRevertChanges = () => {\n    if (Platform.OS === 'web') {\n      const confirmed = window.confirm('Are you sure you want to revert all changes?');\n      if (confirmed) {\n        setLocalFoils(initialFoils);\n        setHasUnsavedChanges(false);\n      }\n    } else {\n      Alert.alert(\n        'Revert Changes',\n        'Are you sure you want to revert all changes?',\n        [\n          { text: 'Cancel', style: 'cancel' },\n          { \n            text: 'Revert', \n            style: 'destructive', \n            onPress: () => {\n              setLocalFoils(initialFoils);\n              setHasUnsavedChanges(false);\n            }\n          }\n        ]\n      );\n    }\n  };\n\n  const handleClose = () => {\n    if (hasUnsavedChanges) {\n      if (Platform.OS === 'web') {\n        const confirmed = window.confirm('You have unsaved changes. Are you sure you want to close?');\n        if (confirmed) {\n          onClose?.();\n        }\n      } else {\n        Alert.alert(\n          'Unsaved Changes',\n          'You have unsaved changes. Are you sure you want to close?',\n          [\n            { text: 'Cancel', style: 'cancel' },\n            { text: 'Close', style: 'destructive', onPress: () => onClose?.() }\n          ]\n        );\n      }\n    } else {\n      onClose?.();\n    }\n  };\n\n  // Handle filter changes\n  const handleFilterChange = (type: keyof FilterOptions, value: string) => {\n    setFilters(prev => ({\n      ...prev,\n      [type]: prev[type].includes(value)\n        ? prev[type].filter(item => item !== value)\n        : [...prev[type], value]\n    }));\n  };\n\n  const handleClearFilters = () => {\n    setFilters({ brands: [], series: [], type: [] });\n  };\n\n  if (isLoading) {\n    return (\n      <View style={styles.centerContainer}>\n        <LoadingIndicator />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.centerContainer}>\n        <Text style={[styles.errorText, { color: colors.error }]}>\n          {error}\n        </Text>\n        <TouchableOpacity\n          style={[styles.retryButton, { backgroundColor: colors.primary }]}\n          onPress={handleClose}\n        >\n          <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n            Go Back\n          </Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  const renderHeader = () => (\n    <View style={styles.header}>\n      <Text style={[styles.headerText, { color: colors.text.primary }]}>\n        Viewing Saved Quiver: {quiverName}\n      </Text>\n      {hasUnsavedChanges && (\n        <Text style={[styles.unsavedText, { color: colors.warning }]}>\n          You have unsaved changes\n        </Text>\n      )}\n    </View>\n  );\n\n  const renderControls = () => (\n    <View style={styles.controlsContainer}>\n      <View style={styles.controlsInnerContainer}>\n        <View style={styles.controlsColumn}>\n          {hasUnsavedChanges && (\n            <>\n              <TouchableOpacity\n                style={[styles.saveButton, { backgroundColor: colors.success }]}\n                onPress={handleSaveChanges}\n              >\n                <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n                  Save Changes\n                </Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.revertButton, { backgroundColor: colors.warning }]}\n                onPress={handleRevertChanges}\n              >\n                <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n                  Revert Changes\n                </Text>\n              </TouchableOpacity>\n            </>\n          )}\n          <TouchableOpacity\n            style={[styles.closeButton, { backgroundColor: colors.primary }]}\n            onPress={handleClose}\n          >\n            <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n              Close Quiver\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <FoilCollectionView\n        foils={localFoils}\n        allFoils={allFoils}\n        columns={columns}\n        searchQuery={searchQuery}\n        onSearch={onSearch}\n        onUpdateFoils={handleUpdateFoils}\n        renderHeader={renderHeader}\n        renderControls={renderControls}\n        filterOptions={{\n          brands: Array.from(new Set(allFoils?.map(f => f.brand) || [])),\n          series: Array.from(new Set(allFoils?.map(f => f.series).filter((s): s is string => !!s) || [])),\n          types: Array.from(new Set(allFoils?.map(f => f.type).filter((t): t is 'front' | 'tail' => t === 'front' || t === 'tail') || []))\n        }}\n        selectedFilters={filters}\n        onFilterChange={handleFilterChange}\n        onClearFilters={handleClearFilters}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative',\n  },\n  centerContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n  },\n  header: {\n    padding: spacing.LARGE,\n    borderBottomWidth: 1,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: '600',\n  },\n  unsavedText: {\n    fontSize: 14,\n    marginTop: spacing.SMALL,\n  },\n  errorText: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: spacing.LARGE,\n  },\n  controlsContainer: {\n    position: 'absolute',\n    bottom: spacing.CONTROLS_BOTTOM,\n    right: 0,\n    left: 0,\n    paddingHorizontal: spacing.CONTAINER_PADDING,\n    zIndex: 1000,\n    ...(Platform.OS === 'web' && {\n      pointerEvents: 'none',\n    }),\n  },\n  controlsInnerContainer: {\n    alignItems: 'flex-end',\n  },\n  controlsColumn: {\n    alignItems: 'flex-end',\n    gap: spacing.BUTTON_GAP,\n    ...(Platform.OS === 'web' && {\n      pointerEvents: 'auto',\n    }),\n  },\n  closeButton: {\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n  saveButton: {\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n  revertButton: {\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n  retryButton: {\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    marginTop: spacing.MEDIUM,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  buttonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    ...(Platform.OS === 'web' && {\n      userSelect: 'none',\n    }),\n  },\n}); ","import React, { useEffect, useState, useTransition } from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { AppLayout } from '../components/AppLayout';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { ErrorMessage } from '../components/ErrorMessage';\nimport { useApp } from '../context/AppContext';\nimport { useFoils } from '../hooks/useFoils';\nimport { useQuivers } from '../hooks/useQuivers';\nimport { QuiverView } from '../components/QuiverView';\nimport { SEOHead } from '../components/SEOHead';\nimport { getEnvironmentConfig } from '../config/environment';\nimport { trackPageView, trackAction, ANALYTICS_EVENTS } from '../utils/analytics';\nimport { useRoute, useNavigation } from '@react-navigation/native';\nimport { RootStackParamList, QuiverScreenNavigationProp } from '../types/navigation';\nimport { spacing } from '../theme/spacing';\nimport { useTheme } from '../theme/ThemeContext';\nimport { Toast } from '../components/Toast';\nimport { Quiver } from '../types/quiver';\nimport { generateFoilId } from '../utils/foilUtils';\nimport { routes } from '../utils/routes';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\nimport { RouteProp } from '@react-navigation/native';\n\ninterface QuiverScreenProps {\n  route: RouteProp<RootStackParamList, 'Quiver'>;\n  navigation: QuiverScreenNavigationProp;\n  searchProps?: {\n    value: string;\n    onChangeText: (text: string) => void;\n    onClear: () => void;\n    mode?: 'browse' | 'comparison' | 'quiver';\n    placeholder?: string;\n  };\n  tableSettingsProps?: {\n    filterOptions: any;\n    selectedBrands: string[];\n    selectedSeries: string[];\n    selectedTypes: string[];\n    onFilterChange: (type: string, value: string) => void;\n    onClearFilters: () => void;\n    columns: any[];\n    onColumnVisibilityChange: (columnId: string) => void;\n    onResetColumns: () => void;\n    foils: BaseProduct[];\n  };\n}\n\nconst QuiverScreen: React.FC<QuiverScreenProps> = ({\n  route,\n  navigation,\n  searchProps,\n  tableSettingsProps\n}) => {\n  const [isPending, startTransition] = useTransition();\n  const { \n    setCurrentScreen, \n    columns, \n    setColumns,\n    filters, \n    setFilters, \n    searchQuery, \n    setSearchQuery,\n    setSelectedFoils \n  } = useApp();\n  const { \n    foils = [], \n    loading: foilsLoading, \n    error: foilsError \n  } = useFoils();\n  const { \n    quivers = [], \n    isLoading: quiversLoading, \n    error: quiversError, \n    deleteQuiver, \n    updateQuiver,\n    reloadQuivers \n  } = useQuivers();\n  const { colors } = useTheme();\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastType, setToastType] = useState<'success' | 'error'>('success');\n  const config = getEnvironmentConfig();\n\n  // Get the current quiver's foils based on foil_ids\n  const currentQuiverFoils = React.useMemo(() => {\n    if (!route.params?.foil_ids || !Array.isArray(foils)) return [];\n    return foils.filter(f => {\n      if (!f) return false;\n      const foilId = generateFoilId(f);\n      return route.params.foil_ids?.includes(foilId) ?? false;\n    });\n  }, [route.params?.foil_ids, foils]);\n\n  // Find the current quiver object\n  const currentQuiver = React.useMemo(() => {\n    return quivers.find(q => q.id === route.params?.quiverId);\n  }, [quivers, route.params?.quiverId]);\n\n  // Filter options for the table settings\n  const filterOptions = React.useMemo(() => ({\n    brands: Array.from(new Set(foils?.map(f => f.brand) || [])),\n    series: Array.from(new Set(foils?.map(f => f.series).filter(Boolean) || [])),\n    types: Array.from(new Set(foils?.map(f => f.type).filter(Boolean) || []))\n  }), [foils]);\n\n  useEffect(() => {\n    setCurrentScreen('Quiver');\n    \n    // Reload quivers when the screen mounts or quiverId changes\n    if (route.params?.quiverId) {\n      reloadQuivers();\n      \n      trackPageView(ANALYTICS_EVENTS.VIEW_QUIVER, {\n        quiverId: route.params.quiverId,\n        quiverName: route.params.quiverName || 'Untitled Quiver',\n        foilCount: currentQuiverFoils.length\n      });\n    }\n  }, [route.params?.quiverId]); // Only depend on quiverId changes\n\n  const handleUpdateQuiver = async (updatedFoils: BaseProduct[]) => {\n    const { quiverId } = route.params;\n\n    try {\n      // Update the app context with the new foils\n      setSelectedFoils(updatedFoils);\n      \n      // Convert the foils array to foil_ids\n      const foil_ids = updatedFoils.map(foil => generateFoilId(foil));\n      \n      // Update the quiver with the new foil_ids\n      const success = await updateQuiver(quiverId, { foil_ids });\n      \n      if (success) {\n        // Update route params to reflect the new foil_ids\n        navigation.setParams({\n          quiverId,\n          quiverName: route.params.quiverName || 'Untitled Quiver',\n          foil_ids,\n          searchQuery: route.params.searchQuery\n        });\n        \n        // Reload quivers to ensure we have the latest data\n        await reloadQuivers();\n        \n        trackAction(ANALYTICS_EVENTS.UPDATE_QUIVER, {\n          quiverId,\n          quiverName: route.params.quiverName,\n          foilCount: updatedFoils.length\n        });\n        setToastMessage('Quiver updated successfully');\n        setToastType('success');\n      } else {\n        setToastMessage('Failed to update quiver');\n        setToastType('error');\n      }\n    } catch (error) {\n      console.error('Error updating quiver:', error);\n      setToastMessage('An error occurred while updating the quiver');\n      setToastType('error');\n    }\n    setShowToast(true);\n    setTimeout(() => setShowToast(false), 3000);\n  };\n\n  const handleUpdateQuiverSettings = async (updates: Partial<Quiver>): Promise<boolean> => {\n    if (!route.params?.quiverId) return false;\n\n    try {\n      const success = await updateQuiver(route.params.quiverId, updates);\n      if (success) {\n        setToastMessage('Quiver settings updated successfully');\n        setToastType('success');\n        setShowToast(true);\n        setTimeout(() => setShowToast(false), 3000);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Error updating quiver settings:', error);\n      setToastMessage('Failed to update quiver settings');\n      setToastType('error');\n      setShowToast(true);\n      setTimeout(() => setShowToast(false), 3000);\n      return false;\n    }\n  };\n\n  const handleDeleteQuiver = async () => {\n    if (!route.params?.quiverId) return;\n\n    try {\n      const success = await deleteQuiver(route.params.quiverId);\n      if (success) {\n        trackAction(ANALYTICS_EVENTS.DELETE_QUIVER, {\n          quiverId: route.params.quiverId\n        });\n        navigation.navigate('Browse', {});\n      }\n    } catch (error) {\n      console.error('Error deleting quiver:', error);\n      setToastMessage('Failed to delete quiver');\n      setToastType('error');\n      setShowToast(true);\n      setTimeout(() => setShowToast(false), 3000);\n    }\n  };\n\n  const handleClose = () => {\n    startTransition(() => {\n      navigation.goBack();\n    });\n  };\n\n  const handleSearch = (query: string) => {\n    setSearchQuery(query);\n    trackAction(ANALYTICS_EVENTS.SEARCH_FOILS, {\n      screen: 'quiver',\n      query\n    });\n  };\n\n  const handleFilterChange = (type: string, value: string) => {\n    setFilters(prev => ({\n      ...prev,\n      [type]: prev[type as keyof FilterOptions].includes(value)\n        ? prev[type as keyof FilterOptions].filter(item => item !== value)\n        : [...prev[type as keyof FilterOptions], value]\n    }));\n  };\n\n  const handleClearFilters = () => {\n    setFilters({ brands: [], series: [], type: [] });\n  };\n\n  const handleColumnVisibilityChange = (columnId: string) => {\n    setColumns(prev => \n      prev.map(col => \n        col.id === columnId ? { ...col, isVisible: !col.isVisible } : col\n      )\n    );\n  };\n\n  const handleResetColumns = () => {\n    // Reset to default column visibility\n    setColumns(prev => prev.map(col => ({ ...col, isVisible: true })));\n  };\n\n  // Show loading state while data is being fetched or during transitions\n  if (foilsLoading || quiversLoading || isPending) {\n    return (\n      <AppLayout showFooter={true}>\n        <LoadingIndicator />\n      </AppLayout>\n    );\n  }\n\n  // Show error state if there's an error\n  const error = foilsError || quiversError;\n  if (error) {\n    return (\n      <AppLayout showFooter={true}>\n        <ErrorMessage message={error} />\n      </AppLayout>\n    );\n  }\n\n  // Validate data\n  if (!Array.isArray(foils) || !Array.isArray(currentQuiverFoils)) {\n    return (\n      <AppLayout showFooter={true}>\n        <ErrorMessage message=\"Invalid data structure received\" />\n      </AppLayout>\n    );\n  }\n\n  if (!currentQuiver) {\n    return (\n      <AppLayout showFooter={true}>\n        <ErrorMessage message=\"Quiver not found\" />\n      </AppLayout>\n    );\n  }\n\n  return (\n    <AppLayout showFooter={true}>\n      <SEOHead\n        title={`${route.params?.quiverName || 'Quiver'} - FoilQuiver`}\n        description={`View and manage your ${route.params?.quiverName || 'Untitled'} quiver containing ${currentQuiverFoils.length} foils.`}\n        canonicalUrl={`${config.webUrl}${routes.quiver}/${route.params?.quiverId}`}\n      />\n      <View style={styles.container}>\n        <QuiverView\n          foils={currentQuiverFoils}\n          allFoils={foils}\n          columns={columns}\n          quiverName={route.params?.quiverName || 'Untitled Quiver'}\n          quiverId={route.params?.quiverId || ''}\n          searchQuery={searchQuery}\n          onSearch={handleSearch}\n          onUpdateQuiver={handleUpdateQuiver}\n          onClose={handleClose}\n          isLoading={isPending}\n          error={error}\n        />\n\n        {showToast && (\n          <Toast\n            message={toastMessage}\n            type={toastType}\n            duration={3000}\n          />\n        )}\n      </View>\n    </AppLayout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: spacing.MEDIUM,\n  }\n});\n\nexport default QuiverScreen;"],"names":["Footer","navigation","useNavigation","width","useWindowDimensions","colors","useTheme","isMobile","_jsx","View","style","styles","container","containerMobile","backgroundColor","background","primary","borderTopColor","border","children","content","contentMobile","linksContainer","linksContainerMobile","_jsxs","linkGroup","linkGroupMobile","Pressable","onPress","navigate","Text","link","color","text","secondary","separator","tertiary","StyleSheet","create","padding","spacing","LARGE","borderTopWidth","maxWidth","marginHorizontal","flexDirection","gap","justifyContent","alignItems","SMALL","fontSize","AppLayout","showFooter","flex","display","FoilCollectionView","foils","allFoils","columns","searchQuery","onSearch","onUpdateFoils","renderHeader","renderControls","onColumnVisibilityChange","onResetColumns","filterOptions","selectedFilters","onFilterChange","onClearFilters","showToast","setShowToast","useState","toastMessage","setToastMessage","isComparisonView","useRoute","name","searchedFoils","useSearchFoils","displayFoils","React","filter","searchFoil","some","existingFoil","model","brand","newSearchResults","sortOption","setSortOption","sortedFoils","useSortedFoils","removeFoil","useCallback","foil","updatedFoils","f","setTimeout","handleFoilSelect","isExisting","Platform","OS","window","confirm","Alert","alert","isSelected","isTemporary","FoilsTable","field","ascending","direction","onSort","prev","onFoilSelect","filters","brands","series","type","Toast","message","Object","assign","overflow","MEDIUM","selectedFoils","onCompare","onClearSelection","MOBILE_BREAKPOINT","useEffect","async","savedSort","loadSortOption","error","loadSavedSort","saveSortOption","saveSortSettings","getColumnWidth","columnId","COLUMN_WIDTHS","isColumnFiltered","length","getCellContent","specs","area","toFixed","wingspan","aspectRatio","price","linkButton","open","sourceUrl","linkText","inverse","externalLinkIcon","cellText","includes","numberText","tableWidth","getTableWidth","ScrollView","horizontal","showsHorizontalScrollIndicator","horizontalScrollView","contentContainerStyle","flexGrow","margin","tableContent","tableHeader","headerRow","borderBottomColor","map","column","isVisible","headerCell","id","borderRightColor","borderRightWidth","headerCellFiltered","handleSort","trackAction","ANALYTICS_EVENTS","SORT_FOILS","headerText","fontWeight","label","sortIconContainer","sortIcon","sortIconUpActive","sortIconDownActive","scrollView","showsVerticalScrollIndicator","bounces","index","selected","temporary","rowKey","pressed","row","rowEven","rowSelected","rowTemporary","success","rowHovered","cell","borderBottomWidth","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","minWidth","flexShrink","cursor","transition","letterSpacing","borderStyle","textAlign","XSMALL","marginLeft","lineHeight","paddingHorizontal","paddingVertical","borderRadius","position","top","right","SEOHead","title","description","canonicalUrl","imageUrl","fullTitle","Helmet","rel","href","property","duration","opacity","useRef","Animated","Value","current","sequence","timing","toValue","useNativeDriver","delay","start","getBackgroundColor","bottom","left","transform","translateX","zIndex","userSelect","useMemo","trim","query","toLowerCase","toString","join","products","sort","a","b","valueA","valueB","multiplier","localeCompare","ErrorMessage","onRetry","retryButton","retryButtonPressed","retryButtonText","marginBottom","QuiverView","initialFoils","quiverName","quiverId","onUpdateQuiver","onClose","isLoading","setFilters","setSelectedFoils","useApp","localFoils","setLocalFoils","hasUnsavedChanges","setHasUnsavedChanges","handleSaveChanges","generateFoilId","UPDATE_QUIVER","foilCount","handleRevertChanges","handleClose","centerContainer","LoadingIndicator","errorText","TouchableOpacity","buttonText","header","unsavedText","warning","controlsContainer","controlsInnerContainer","controlsColumn","_Fragment","saveButton","revertButton","closeButton","Array","from","Set","s","types","t","handleFilterChange","value","item","handleClearFilters","marginTop","CONTROLS_BOTTOM","CONTAINER_PADDING","pointerEvents","BUTTON_GAP","boxShadow","QuiverScreen","route","searchProps","tableSettingsProps","isPending","startTransition","useTransition","setCurrentScreen","setColumns","setSearchQuery","loading","foilsLoading","foilsError","useFoils","quivers","quiversLoading","quiversError","deleteQuiver","updateQuiver","reloadQuivers","useQuivers","toastType","setToastType","config","getEnvironmentConfig","currentQuiverFoils","params","foil_ids","isArray","foilId","currentQuiver","find","q","Boolean","trackPageView","VIEW_QUIVER","webUrl","routes","quiver","SEARCH_FOILS","screen","setParams","goBack"],"sourceRoot":""}