{"version":3,"file":"static/js/main.be215420.js","mappings":"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","sources":["src/components/ErrorBoundary.tsx","src/components/SearchBar.tsx","src/components/TableSettings.tsx","src/navigation/AppNavigator.tsx","index.ts","App.tsx","src/components/LoadingIndicator.tsx","src/hooks/useFilteredFoils.ts","src/services/productService.ts","src/hooks/useFoils.ts","src/theme/colors.ts"],"sourcesContent":["import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n    error: null\n  };\n\n  public static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Uncaught error:', error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return (\n        <View style={styles.container}>\n          <Text style={styles.text}>Something went wrong.</Text>\n          <Text style={styles.errorText}>{this.state.error?.message}</Text>\n        </View>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  text: {\n    fontSize: 16,\n    marginBottom: 10,\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 14,\n  },\n}); ","import React from 'react';\nimport { View, TextInput, Pressable, Text, StyleSheet, Platform } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { colors } from '../theme/colors';\n\ninterface SearchBarProps {\n  value: string;\n  onChangeText: (text: string) => void;\n  onClear: () => void;\n  placeholder?: string;\n}\n\nexport function SearchBar({\n  value,\n  onChangeText,\n  onClear,\n  placeholder = '🔍 Search foils...'\n}: SearchBarProps) {\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        value={value}\n        onChangeText={onChangeText}\n        placeholder={placeholder}\n        placeholderTextColor={colors.text.muted}\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n      />\n      {value.length > 0 && (\n        <Pressable\n          style={styles.clearButton}\n          onPress={onClear}\n        >\n          <Text style={styles.clearButtonText}>✕</Text>\n        </Pressable>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: colors.background.secondary,\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    borderWidth: 1,\n    borderColor: colors.border,\n    height: '100%',\n    minHeight: 36,\n  },\n  input: {\n    flex: 1,\n    fontSize: 14,\n    color: colors.text.primary,\n    height: '100%',\n    padding: 0,\n  },\n  clearButton: {\n    padding: 4,\n  },\n  clearButtonText: {\n    color: colors.text.muted,\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n}); ","import React, { useState } from 'react';\nimport { View, Text, Pressable, StyleSheet, Modal, Platform } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { colors } from '../theme/colors';\nimport { FilterOptions } from '../types/filters';\n\ninterface Column {\n  id: string;\n  label: string;\n  isVisible: boolean;\n}\n\ninterface TableSettingsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n  onClearFilters: () => void;\n  columns: Column[];\n  onColumnVisibilityChange: (columnId: string) => void;\n  onResetColumns: () => void;\n}\n\nexport function TableSettings({\n  filterOptions,\n  selectedBrands,\n  selectedSeries,\n  selectedTypes,\n  onFilterChange,\n  onClearFilters,\n  columns,\n  onColumnVisibilityChange,\n  onResetColumns,\n}: TableSettingsProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [activeTab, setActiveTab] = useState<'filters' | 'columns'>('filters');\n\n  return (\n    <>\n      <Pressable \n        onPress={() => setIsOpen(true)}\n        style={styles.iconButton}\n      >\n        <MaterialIcons name=\"settings\" size={24} color={colors.text.primary} />\n      </Pressable>\n\n      <Modal\n        visible={isOpen}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => setIsOpen(false)}\n      >\n        <Pressable \n          style={styles.modalOverlay}\n          onPress={() => setIsOpen(false)}\n        >\n          <Pressable \n            style={styles.modalContent}\n            onPress={e => e.stopPropagation()}\n          >\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>Table Settings</Text>\n              <Pressable \n                onPress={() => setIsOpen(false)}\n                style={styles.closeButton}\n              >\n                <MaterialIcons name=\"close\" size={24} color={colors.text.secondary} />\n              </Pressable>\n            </View>\n\n            <View style={styles.tabs}>\n              <Pressable\n                style={[styles.tab, activeTab === 'filters' && styles.activeTab]}\n                onPress={() => setActiveTab('filters')}\n              >\n                <Text style={[styles.tabText, activeTab === 'filters' && styles.activeTabText]}>\n                  Filters {(selectedBrands.length > 0 || selectedSeries.length > 0 || selectedTypes.length > 0) && '•'}\n                </Text>\n              </Pressable>\n              <Pressable\n                style={[styles.tab, activeTab === 'columns' && styles.activeTab]}\n                onPress={() => setActiveTab('columns')}\n              >\n                <Text style={[styles.tabText, activeTab === 'columns' && styles.activeTabText]}>\n                  Columns {columns.some(col => !col.isVisible) && '•'}\n                </Text>\n              </Pressable>\n            </View>\n\n            {activeTab === 'filters' ? (\n              <View style={styles.content}>\n                <View style={styles.headerWithAction}>\n                  <Text style={styles.contentTitle}>Active Filters</Text>\n                  {(selectedBrands.length > 0 || selectedSeries.length > 0 || selectedTypes.length > 0) && (\n                    <Pressable \n                      onPress={onClearFilters}\n                      style={styles.clearButton}\n                    >\n                      <Text style={styles.clearButtonText}>Clear All</Text>\n                    </Pressable>\n                  )}\n                </View>\n                <View style={styles.section}>\n                  <Text style={styles.sectionTitle}>Brand</Text>\n                  <View style={styles.chipContainer}>\n                    {filterOptions.brands.map((brand) => (\n                      <Pressable\n                        key={brand}\n                        style={[\n                          styles.chip,\n                          selectedBrands.includes(brand) && styles.chipSelected,\n                        ]}\n                        onPress={() => onFilterChange('brands', brand)}\n                      >\n                        <Text \n                          style={[\n                            styles.chipText,\n                            selectedBrands.includes(brand) && styles.chipTextSelected,\n                          ]}\n                        >\n                          {brand}\n                        </Text>\n                      </Pressable>\n                    ))}\n                  </View>\n                </View>\n\n                <View style={styles.section}>\n                  <Text style={styles.sectionTitle}>Type</Text>\n                  <View style={styles.chipContainer}>\n                    {filterOptions.types.map((type) => (\n                      <Pressable\n                        key={type}\n                        style={[\n                          styles.chip,\n                          selectedTypes.includes(type) && styles.chipSelected,\n                        ]}\n                        onPress={() => onFilterChange('type', type)}\n                      >\n                        <Text \n                          style={[\n                            styles.chipText,\n                            selectedTypes.includes(type) && styles.chipTextSelected,\n                          ]}\n                        >\n                          {type}\n                        </Text>\n                      </Pressable>\n                    ))}\n                  </View>\n                </View>\n\n                <View style={styles.section}>\n                  <Text style={styles.sectionTitle}>Series</Text>\n                  <View style={styles.chipContainer}>\n                    {filterOptions.series.map((series) => (\n                      <Pressable\n                        key={series}\n                        style={[\n                          styles.chip,\n                          selectedSeries.includes(series) && styles.chipSelected,\n                        ]}\n                        onPress={() => onFilterChange('series', series)}\n                      >\n                        <Text \n                          style={[\n                            styles.chipText,\n                            selectedSeries.includes(series) && styles.chipTextSelected,\n                          ]}\n                        >\n                          {series}\n                        </Text>\n                      </Pressable>\n                    ))}\n                  </View>\n                </View>\n              </View>\n            ) : (\n              <View style={styles.content}>\n                <View style={styles.headerWithAction}>\n                  <Text style={styles.contentTitle}>Visible Columns</Text>\n                  {columns.some(col => !col.isVisible) && (\n                    <Pressable \n                      onPress={onResetColumns}\n                      style={styles.clearButton}\n                    >\n                      <Text style={styles.clearButtonText}>Reset</Text>\n                    </Pressable>\n                  )}\n                </View>\n                <View style={styles.columnList}>\n                  {columns.map(column => (\n                    <Pressable\n                      key={column.id}\n                      style={styles.columnItem}\n                      onPress={() => onColumnVisibilityChange(column.id)}\n                    >\n                      <Text style={styles.columnLabel}>{column.label}</Text>\n                      <View style={[styles.checkbox, column.isVisible && styles.checkboxChecked]}>\n                        {column.isVisible && (\n                          <MaterialIcons name=\"check\" size={16} color={colors.background.primary} />\n                        )}\n                      </View>\n                    </Pressable>\n                  ))}\n                </View>\n              </View>\n            )}\n          </Pressable>\n        </Pressable>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  iconButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 8,\n    backgroundColor: colors.background.secondary,\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      transition: 'all 0.2s ease',\n      ':hover': {\n        backgroundColor: colors.primary,\n      },\n    }),\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: colors.background.primary,\n    borderRadius: 8,\n    width: '90%',\n    maxWidth: 480,\n    maxHeight: '90%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: colors.text.primary,\n  },\n  closeButton: {\n    padding: 4,\n  },\n  tabs: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border,\n  },\n  tab: {\n    flex: 1,\n    padding: 12,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n    borderBottomColor: colors.primary,\n  },\n  tabText: {\n    color: colors.text.secondary,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  activeTabText: {\n    color: colors.primary,\n  },\n  content: {\n    padding: 16,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: colors.text.primary,\n    marginBottom: 12,\n  },\n  chipContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  chip: {\n    backgroundColor: colors.background.secondary,\n    borderRadius: 16,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n  },\n  chipSelected: {\n    backgroundColor: colors.primary,\n  },\n  chipText: {\n    color: colors.text.secondary,\n    fontSize: 14,\n  },\n  chipTextSelected: {\n    color: colors.background.primary,\n  },\n  columnList: {\n    gap: 12,\n  },\n  columnItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n  },\n  columnLabel: {\n    fontSize: 14,\n    color: colors.text.primary,\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderRadius: 4,\n    borderWidth: 2,\n    borderColor: colors.border,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  checkboxChecked: {\n    backgroundColor: colors.primary,\n    borderColor: colors.primary,\n  },\n  headerWithAction: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  contentTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: colors.text.primary,\n  },\n  clearButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    backgroundColor: colors.background.secondary,\n  },\n  clearButtonText: {\n    color: colors.text.secondary,\n    fontSize: 14,\n  },\n}); ","import React, { lazy, Suspense, useState } from 'react';\nimport { View, Text, StyleSheet, Pressable, Platform, useWindowDimensions } from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackParamList, RootStackNavigationProp } from '../types/navigation';\nimport { SearchBar } from '../components/SearchBar';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { TableSettings } from '../components/TableSettings';\nimport { colors } from '../theme/colors';\nimport { useFoils } from '../hooks/useFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { FilterOptions } from '../types/filters';\n\n// Lazy load screens\nconst BrowseScreen = lazy(() => import('../screens/BrowseScreen'));\nconst PrivacyPolicy = lazy(() => import('../screens/legal/PrivacyPolicy'));\nconst TermsOfService = lazy(() => import('../screens/legal/TermsOfService'));\nconst Contact = lazy(() => import('../screens/legal/Contact'));\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\ninterface AppNavigatorProps {\n  searchQuery: string;\n  onSearch: (text: string) => void;\n}\n\nconst DEFAULT_COLUMNS = [\n  { id: 'brand', label: 'Brand', isVisible: true },\n  { id: 'series', label: 'Series', isVisible: true },\n  { id: 'model', label: 'Model', isVisible: true },\n  { id: 'area', label: 'Area', isVisible: true },\n  { id: 'wingspan', label: 'Span', isVisible: true },\n  { id: 'aspectRatio', label: 'AR', isVisible: true },\n  { id: 'type', label: 'Type', isVisible: true },\n  { id: 'price', label: 'Price', isVisible: true },\n  { id: 'link', label: 'Link', isVisible: true }\n];\n\n// Add constants for layout\nconst CONTAINER_PADDING = 24;\nconst MAX_CONTENT_WIDTH = 1200;\nconst MOBILE_BREAKPOINT = 768;\n\nconst COLUMN_WIDTHS = {\n  brand: 150,\n  series: 120,\n  model: 150,\n  area: 80,\n  wingspan: 80,\n  aspectRatio: 80,\n  type: 80,\n  price: 105,\n  link: 80,\n} as const;\n\nexport const AppNavigator = ({ searchQuery, onSearch }: AppNavigatorProps) => {\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { foils } = useFoils();\n  const [columns, setColumns] = useState(DEFAULT_COLUMNS);\n  const [filters, setFilters] = useState<FilterOptions>({\n    brands: [],\n    series: [],\n    type: []\n  });\n  const { filterOptions } = useFilteredFoils(foils, filters);\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n\n  const handleLogoPress = () => {\n    navigation.reset({\n      index: 0,\n      routes: [{ name: 'Browse', params: { searchQuery } }],\n    });\n  };\n\n  const handleFilterChange = (type: keyof FilterOptions, value: string) => {\n    setFilters(prev => {\n      const newFilters = { ...prev };\n      if (type === 'type') {\n        const array = prev.type as string[];\n        newFilters.type = array.includes(value)\n          ? array.filter(item => item !== value)\n          : [...array, value];\n      } else {\n        const array = prev[type] as string[];\n        newFilters[type] = array.includes(value)\n          ? array.filter(item => item !== value)\n          : [...array, value];\n      }\n      return newFilters;\n    });\n  };\n\n  const handleColumnVisibilityChange = (columnId: string) => {\n    setColumns(prev => prev.map(col => \n      col.id === columnId ? { ...col, isVisible: !col.isVisible } : col\n    ));\n  };\n\n  const handleClearFilters = () => {\n    setFilters({\n      brands: [],\n      series: [],\n      type: []\n    });\n  };\n\n  const handleResetColumns = () => {\n    setColumns(DEFAULT_COLUMNS);\n  };\n\n  // Calculate table width based on visible columns\n  const tableWidth = React.useMemo(() => {\n    return columns.reduce((total, column) => {\n      if (column.isVisible) {\n        return total + (COLUMN_WIDTHS[column.id as keyof typeof COLUMN_WIDTHS] || 100);\n      }\n      return total;\n    }, 0);\n  }, [columns]);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: colors.background.primary,\n        },\n        headerShadowVisible: false,\n      }}\n    >\n      <Stack.Screen \n        name=\"Browse\"\n        options={{\n          headerTitle: '',\n          headerLeft: () => (\n            <View style={styles.headerOuterContainer}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <Pressable \n                    onPress={handleLogoPress}\n                    style={({ pressed }) => [\n                      styles.logoContainer,\n                      pressed && styles.logoPressed\n                    ]}\n                  >\n                    <Text style={styles.headerTitle}>FoilQuiver</Text>\n                  </Pressable>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  { width: Math.min(tableWidth, MAX_CONTENT_WIDTH) }\n                ]}>\n                  <View style={styles.headerContentWeb}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={styles.headerTitle}>FoilQuiver</Text>\n                    </Pressable>\n                    <View style={styles.searchBarContainerWeb}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={onSearch}\n                        onClear={() => onSearch('')}\n                      />\n                    </View>\n                    <TableSettings\n                      filterOptions={filterOptions}\n                      selectedBrands={filters.brands}\n                      selectedSeries={filters.series}\n                      selectedTypes={filters.type}\n                      onFilterChange={handleFilterChange}\n                      onClearFilters={handleClearFilters}\n                      columns={columns}\n                      onColumnVisibilityChange={handleColumnVisibilityChange}\n                      onResetColumns={handleResetColumns}\n                    />\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n          headerRight: () => isMobile ? (\n            <View style={styles.headerRightContainerMobile}>\n              <View style={styles.searchBarContainerMobile}>\n                <SearchBar \n                  value={searchQuery}\n                  onChangeText={onSearch}\n                  onClear={() => onSearch('')}\n                />\n              </View>\n              <TableSettings\n                filterOptions={filterOptions}\n                selectedBrands={filters.brands}\n                selectedSeries={filters.series}\n                selectedTypes={filters.type}\n                onFilterChange={handleFilterChange}\n                onClearFilters={handleClearFilters}\n                columns={columns}\n                onColumnVisibilityChange={handleColumnVisibilityChange}\n                onResetColumns={handleResetColumns}\n              />\n            </View>\n          ) : null,\n        }}\n      >\n        {(props) => (\n          <Suspense fallback={<LoadingIndicator />}>\n            <BrowseScreen \n              {...props} \n              filters={filters}\n              onFilterChange={handleFilterChange}\n              columns={columns}\n            />\n          </Suspense>\n        )}\n      </Stack.Screen>\n      <Stack.Screen \n        name=\"Terms\"\n        options={{\n          title: 'Terms of Service',\n          headerStyle: {\n            backgroundColor: '#f4f4f4',\n          },\n        }}\n      >\n        {(props) => (\n          <Suspense fallback={<LoadingIndicator />}>\n            <TermsOfService {...props} />\n          </Suspense>\n        )}\n      </Stack.Screen>\n      <Stack.Screen \n        name=\"Privacy\"\n        options={{\n          title: 'Privacy Policy',\n          headerStyle: {\n            backgroundColor: '#f4f4f4',\n          },\n        }}\n      >\n        {(props) => (\n          <Suspense fallback={<LoadingIndicator />}>\n            <PrivacyPolicy {...props} />\n          </Suspense>\n        )}\n      </Stack.Screen>\n      <Stack.Screen \n        name=\"Contact\"\n        options={{\n          title: 'Contact Us',\n          headerStyle: {\n            backgroundColor: '#f4f4f4',\n          },\n        }}\n      >\n        {(props) => (\n          <Suspense fallback={<LoadingIndicator />}>\n            <Contact {...props} />\n          </Suspense>\n        )}\n      </Stack.Screen>\n    </Stack.Navigator>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerOuterContainer: {\n    flex: 1,\n    backgroundColor: colors.background.primary,\n    paddingHorizontal: CONTAINER_PADDING,\n    alignItems: 'center',\n  },\n  // Mobile Styles\n  headerMainContainerMobile: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n  },\n  headerRightContainerMobile: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    paddingRight: 12,\n  },\n  searchBarContainerMobile: {\n    width: 160,\n    height: 36,\n  },\n  // Web Styles\n  headerMainContainerWeb: {\n    height: 72,\n    width: '100%',\n  },\n  headerContentWeb: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 24,\n    height: '100%',\n    width: '100%',\n  },\n  searchBarContainerWeb: {\n    flex: 1,\n    height: 40,\n  },\n  // Common Styles\n  logoContainer: {\n    height: '100%',\n    justifyContent: 'center',\n    minWidth: 120,\n  },\n  logoPressed: {\n    opacity: 0.7,\n  },\n  headerTitle: {\n    color: colors.primary,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n}); ","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import React, { useState, useRef } from 'react';\nimport { NavigationContainer, NavigationContainerRef, LinkingOptions } from '@react-navigation/native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { RootStackParamList } from './src/types/navigation';\nimport { ErrorBoundary } from './src/components/ErrorBoundary';\nimport { AppNavigator } from './src/navigation/AppNavigator';\nimport { LoadingIndicator } from './src/components/LoadingIndicator';\nimport { routes } from './src/utils/routes';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const navigationRef = useRef<NavigationContainerRef<RootStackParamList>>(null);\n\n  const linking: LinkingOptions<RootStackParamList> = {\n    prefixes: ['https://foilquiver.com', 'http://localhost:19006'],\n    config: {\n      screens: {\n        browse: '',\n        terms: 'terms',\n        privacy: 'privacy',\n        contact: 'contact',\n        comparison: 'comparison',\n        brand: 'brand/:brandName',\n        foil: 'foil/:brandName/:modelName',\n      },\n    },\n    getInitialURL() {\n      const url = new URL(window.location.href);\n      const searchQuery = url.searchParams.get('searchQuery') || '';\n      return `/?searchQuery=${searchQuery}`;\n    },\n  };\n\n  const handleSearch = (text: string) => {\n    setSearchQuery(text);\n    if (navigationRef.current) {\n      navigationRef.current.setParams({ searchQuery: text });\n    }\n  };\n\n  return (\n    <HelmetProvider>\n      <ErrorBoundary>\n        <SafeAreaProvider>\n          <NavigationContainer \n            ref={navigationRef}\n            linking={linking}\n            fallback={<LoadingIndicator />}\n          >\n            <AppNavigator \n              searchQuery={searchQuery}\n              onSearch={handleSearch}\n            />\n          </NavigationContainer>\n        </SafeAreaProvider>\n      </ErrorBoundary>\n    </HelmetProvider>\n  );\n} ","import React from 'react';\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\n\nexport function LoadingIndicator() {\n  return (\n    <View style={styles.container}>\n      <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}); ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\n\nexport function useFilteredFoils(foils: BaseProduct[], filters: FilterOptions) {\n  const filterOptions = useMemo(() => {\n    const brands = Array.from(new Set(foils.map(foil => foil.brand))).sort();\n    const series = Array.from(new Set(foils.map(foil => foil.series))).sort();\n    const types = ['front', 'tail'];\n\n    return { brands, series, types };\n  }, [foils]);\n\n  const filteredFoils = useMemo(() => {\n    return foils.filter(foil => {\n      const brandMatch = filters.brands.length === 0 || filters.brands.includes(foil.brand);\n      const seriesMatch = filters.series.length === 0 || filters.series.includes(foil.series);\n      const typeMatch = filters.type.length === 0 || filters.type.includes(foil.type);\n\n      return brandMatch && seriesMatch && typeMatch;\n    });\n  }, [foils, filters.brands, filters.series, filters.type]);\n\n  return {\n    filteredFoils,\n    filterOptions,\n  };\n} ","import { BaseProduct } from '../types/scraper';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport class ProductService {\n  private static isWeb = Platform.OS === 'web';\n  private static DATA_PATH = '/data/foils.json';\n  private static CACHE_DIR = '.cache';\n\n  // Get base URL for data loading\n  private static getBaseUrl(): string {\n    if (process.env.NODE_ENV === 'development') {\n      return '';\n    }\n    return process.env.NODE_ENV === 'staging' \n      ? 'https://staging.foilquiver.com'\n      : 'https://foilquiver.com';\n  }\n\n  static async getAllProducts(): Promise<BaseProduct[]> {\n    try {\n      if (this.isWeb) {\n        const baseUrl = this.getBaseUrl();\n\n        // Try loading from data directory first\n        try {\n          const response = await fetch(`${baseUrl}${this.DATA_PATH}`);\n          if (response.ok) {\n            const products = await response.json();\n            console.log(`Loaded ${products.length} products from ${this.DATA_PATH}`);\n            return products;\n          } else {\n            console.warn(`Failed to load from ${this.DATA_PATH} (${response.status}), trying .cache directory...`);\n          }\n        } catch (error) {\n          console.warn(`Failed to load from ${this.DATA_PATH}, trying .cache directory...`, error);\n        }\n\n        // Try loading from .cache as fallback\n        try {\n          // Normalize brand names to match file names\n          const brands = ['armstrong', 'lift-foils', 'axis-foils', 'code-foils', 'kt-foils', 'uni-foil'];\n          const allProducts: BaseProduct[] = [];\n          \n          for (const brand of brands) {\n            try {\n              const response = await fetch(`${baseUrl}/${this.CACHE_DIR}/${brand}.json`);\n              if (response.ok) {\n                const products = await response.json();\n                console.log(`Loaded ${products.length} products for ${brand} from .cache`);\n                allProducts.push(...products);\n              }\n            } catch (error) {\n              console.warn(`No cache file found for ${brand}`);\n            }\n          }\n\n          if (allProducts.length > 0) {\n            return allProducts;\n          }\n        } catch (error) {\n          console.warn('Failed to load from .cache directory', error);\n        }\n      } else {\n        // For mobile, use AsyncStorage\n        const cached = await AsyncStorage.getItem('foils');\n        if (cached) {\n          const products = JSON.parse(cached);\n          console.log(`Loaded ${products.length} products from AsyncStorage`);\n          return products;\n        }\n      }\n    } catch (error) {\n      console.error('Error loading foils data:', error);\n    }\n    \n    console.warn('No foils data found in any location');\n    return [];\n  }\n} ","import { useState, useEffect } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { ProductService } from '../services/productService';\n\nexport function useFoils() {\n  const [foils, setFoils] = useState<BaseProduct[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadFoils = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const products = await ProductService.getAllProducts();\n      setFoils(products);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load foils');\n      console.error('Error loading foils:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadFoils();\n  }, []);\n\n  const refreshFoils = () => {\n    loadFoils();\n  };\n\n  return {\n    foils,\n    loading,\n    error,\n    refreshFoils\n  };\n} ","export const colors = {\n  primary: '#BF3475',    // Main blue for primary actions, links\n  secondary: '#1F214D',  // Orange for accents, highlights\n  link: '#0066cc',       // Alternative link color\n  background: {\n    primary: '#FFFFFF',  // Main background\n    secondary: '#F5F7FA', // Secondary background (e.g., cards, hover states)\n    hover: '#f8f9fa',    // Hover state background\n    selected: '#e6f3ff'  // Selected state background\n  },\n  text: {\n    primary: '#1A1A1A',\n    secondary: '#4A4A4A',\n    muted: '#757575'\n  },\n  border: 'rgba(0, 0, 0, .1)',\n  palette: {\n    deepBlue: '#00659D',    // Deep ocean blue\n    teal: '#00ABBC',        // Vibrant teal\n    sand: '#E2C58A',        // Warm beige/sand\n    coral: '#FC8890',       // Soft coral pink\n    raspberry: '#B35D7F'    // Muted raspberry\n  },\n  palette2: {\n    midnight: '#1F214D',    // Deep navy/midnight blue\n    purple: '#50366F',      // Rich purple\n    magenta: '#BF3475',     // Vibrant magenta\n    coral: '#EE6C45',       // Warm coral orange\n    gold: '#FFCE61'         // Bright yellow gold\n  }\n} as const; \n\n"],"names":["ErrorBoundary","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","concat","state","hasError","error","_inherits","_createClass","key","value","errorInfo","_this$state$error","this","_jsxs","View","style","styles","container","children","_jsx","Text","text","errorText","message","props","Component","StyleSheet","create","flex","justifyContent","alignItems","padding","fontSize","marginBottom","color","SearchBar","onChangeText","onClear","placeholder","TextInput","input","placeholderTextColor","colors","muted","autoCapitalize","autoCorrect","Pressable","clearButton","onPress","clearButtonText","flexDirection","backgroundColor","background","secondary","borderRadius","paddingHorizontal","borderWidth","borderColor","border","height","minHeight","primary","fontWeight","TableSettings","filterOptions","selectedBrands","selectedSeries","selectedTypes","onFilterChange","onClearFilters","columns","onColumnVisibilityChange","onResetColumns","isOpen","setIsOpen","useState","activeTab","setActiveTab","_Fragment","iconButton","MaterialIcons","name","size","Modal","visible","transparent","animationType","onRequestClose","modalOverlay","modalContent","e","stopPropagation","modalHeader","modalTitle","closeButton","tabs","tab","tabText","activeTabText","some","col","isVisible","content","headerWithAction","contentTitle","section","sectionTitle","chipContainer","brands","map","brand","chip","includes","chipSelected","chipText","chipTextSelected","types","type","series","columnList","column","columnItem","id","columnLabel","label","checkbox","checkboxChecked","Object","assign","width","Platform","OS","cursor","transition","maxWidth","maxHeight","borderBottomWidth","borderBottomColor","flexWrap","gap","paddingVertical","BrowseScreen","lazy","PrivacyPolicy","TermsOfService","Contact","Stack","createNativeStackNavigator","DEFAULT_COLUMNS","COLUMN_WIDTHS","model","area","wingspan","aspectRatio","price","link","AppNavigator","searchQuery","onSearch","navigation","useNavigation","foils","useFoils","setColumns","filters","setFilters","useFilteredFoils","useWindowDimensions","isMobile","handleLogoPress","reset","index","routes","params","handleFilterChange","prev","newFilters","array","filter","item","handleColumnVisibilityChange","columnId","handleClearFilters","handleResetColumns","tableWidth","React","reduce","total","Navigator","screenOptions","headerStyle","headerShadowVisible","Screen","options","headerTitle","headerLeft","headerOuterContainer","headerMainContainerMobile","pressed","logoContainer","logoPressed","headerMainContainerWeb","Math","min","headerContentWeb","searchBarContainerWeb","headerRight","headerRightContainerMobile","searchBarContainerMobile","Suspense","fallback","LoadingIndicator","title","paddingRight","minWidth","opacity","registerRootComponent","_useState","_useState2","_slicedToArray","setSearchQuery","navigationRef","useRef","linking","prefixes","config","screens","browse","terms","privacy","contact","comparison","foil","getInitialURL","URL","window","location","href","searchParams","get","HelmetProvider","SafeAreaProvider","NavigationContainer","ref","current","setParams","ActivityIndicator","useMemo","from","Set","sort","filteredFoils","brandMatch","seriesMatch","typeMatch","ProductService","_getAllProducts","_asyncToGenerator","isWeb","baseUrl","getBaseUrl","response","fetch","DATA_PATH","ok","json","allProducts","CACHE_DIR","products","push","apply","_toConsumableArray","cached","AsyncStorage","getItem","JSON","parse","setFoils","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setError","loadFoils","_ref","getAllProducts","err","Error","useEffect","refreshFoils","hover","selected","palette","deepBlue","teal","sand","coral","raspberry","palette2","midnight","purple","magenta","gold"],"sourceRoot":""}