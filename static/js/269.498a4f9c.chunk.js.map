{"version":3,"file":"static/js/269.498a4f9c.chunk.js","mappings":"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","sources":["src/components/Footer.tsx","src/components/AppLayout.tsx","src/components/ComparisonControls.tsx","src/components/FoilsTable.tsx","src/components/SEOHead.tsx","src/hooks/useSearchFoils.ts","src/hooks/useSortedFoils.ts","src/utils/sorting.ts","src/screens/BrowseScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\nexport default function Footer() {\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { width } = useWindowDimensions();\n  const { colors } = useTheme();\n  const isMobile = width < 768;\n\n  return (\n    <View style={[\n      styles.container, \n      isMobile && styles.containerMobile,\n      { \n        backgroundColor: colors.background.primary,\n        borderTopColor: colors.border\n      }\n    ]}>\n      <View style={[styles.content, isMobile && styles.contentMobile]}>\n        <View style={[styles.linksContainer, isMobile && styles.linksContainerMobile]}>\n          <View style={[styles.linkGroup, isMobile && styles.linkGroupMobile]}>\n            <Pressable onPress={() => navigation.navigate('Terms')}>\n              <Text style={[styles.link, { color: colors.text.secondary }]}>Terms of Service</Text>\n            </Pressable>\n            <Text style={[styles.separator, { color: colors.text.tertiary }]}>•</Text>\n            <Pressable onPress={() => navigation.navigate('Privacy')}>\n              <Text style={[styles.link, { color: colors.text.secondary }]}>Privacy Policy</Text>\n            </Pressable>\n            <Text style={[styles.separator, { color: colors.text.tertiary }]}>•</Text>\n            <Pressable onPress={() => navigation.navigate('Contact')}>\n              <Text style={[styles.link, { color: colors.text.secondary }]}>Contact Us</Text>\n            </Pressable>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    padding: spacing.LARGE,\n  },\n  containerMobile: {\n    padding: 0,\n  },\n  content: {\n    padding: 0,\n    borderTopWidth: 1,\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n  },\n  contentMobile: {\n    flexDirection: 'column',\n    gap: 8,\n  },\n  linksContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  linksContainerMobile: {\n    flexDirection: 'column',\n    gap: spacing.SMALL,\n  },\n  linkGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.LARGE,\n  },\n  linkGroupMobile: {\n    gap: 8,\n  },\n  link: {\n    fontSize: 14,\n  },\n  separator: {\n    fontSize: 14,\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Footer from './Footer';\nimport { useTheme } from '../theme/ThemeContext';\n\ninterface AppLayoutProps {\n  children: React.ReactNode;\n  showFooter?: boolean;\n}\n\nexport const AppLayout: React.FC<AppLayoutProps> = ({ \n  children, \n  showFooter = true,\n}) => {\n  const { colors } = useTheme();\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.primary }]}>\n      <View style={styles.content}>\n        {children}\n      </View>\n      {showFooter && <Footer />}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: 1,\n    width: '100%',\n  },\n}); ","import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform, TouchableOpacity } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../theme/spacing';\nimport { colors } from '../theme/colors';\nimport { useTheme } from '../theme/ThemeContext';\nimport { useNavigation } from '@react-navigation/native';\nimport { Button } from './Button';\n\ninterface ComparisonControlsProps {\n  selectedFoils: BaseProduct[];\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  onClearSelection: () => void;\n  isComparisonView?: boolean;\n  isQuiverView?: boolean;\n}\n\nconst ComparisonControls = ({ \n  selectedFoils, \n  onCompareSelected, \n  onExitCompare, \n  onClearSelection, \n  isComparisonView = false,\n  isQuiverView = false\n}: ComparisonControlsProps) => {\n  const { colors } = useTheme();\n  const navigation = useNavigation();\n\n  // Only show controls if there are selected foils or we're in comparison view\n  if (selectedFoils.length === 0 && !isComparisonView) {\n    return null;\n  }\n\n  const handleCompare = () => {\n    if (selectedFoils.length === 0) return;\n    \n    // Navigate to the dedicated comparison screen\n    navigation.navigate('Comparison', {\n      foils: selectedFoils,\n    });\n  };\n\n  return !isComparisonView ? (\n    <View style={styles.comparisonBar}>\n      <View style={styles.buttonGroup}>\n        <Pressable\n          style={[styles.button, styles.clearButton]}\n          onPress={onClearSelection}\n        >\n          <Text style={[styles.buttonText, styles.clearButtonText]}>Clear</Text>\n        </Pressable>\n        <Pressable\n          style={[styles.button, styles.compareButton, selectedFoils.length < 2 && styles.buttonDisabled]}\n          onPress={handleCompare}\n          disabled={selectedFoils.length < 2}\n        >\n          <Text style={[styles.buttonText, styles.compareButtonText]}>Compare</Text>\n        </Pressable>\n      </View>\n    </View>\n  ) : (\n    <View style={styles.comparisonBar}>\n      <TouchableOpacity\n        style={[styles.button, { backgroundColor: colors.background.secondary }]}\n        onPress={onExitCompare}\n      >\n        <Text style={[styles.buttonText, { color: colors.text.primary }]}>\n          {isQuiverView ? 'Close Quiver' : 'Back'}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default ComparisonControls;\n\nconst styles = StyleSheet.create({\n  comparisonBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: spacing.MEDIUM,\n    paddingVertical: spacing.SMALL,\n    borderRadius: 8,\n    gap: 6,\n    minHeight: 32,\n    minWidth: 90,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n  buttonDisabled: {\n    opacity: 0.5,\n  },\n  clearButton: {\n    backgroundColor: colors.background.primary,\n    borderWidth: 1,\n    borderColor: colors.primary,\n  },\n  compareButton: {\n    backgroundColor: colors.primary,\n  },\n  buttonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    textAlign: 'center',\n    ...(Platform.OS === 'web' && {\n      userSelect: 'none',\n    }),\n  },\n  clearButtonText: {\n    color: colors.primary,\n  },\n  compareButtonText: {\n    color: colors.background.primary,\n  },\n}); ","/**\n * FoilsTable Component\n * \n * IMPORTANT: Column Alignment\n * - The table uses fixed column widths for consistent layout and horizontal scrolling\n * - Each column width in headerCell must match the corresponding cell width\n * - Current widths:\n *   - Regular columns (brand, model, type, series): 150px\n *   - Number columns (area, wingspan, AR, price): 100px\n *   - Link column: 100px\n * - When modifying column styles, always update both headerCell and cell styles to maintain alignment\n * - Table has a minWidth of 1200px to ensure proper layout on all screen sizes\n */\n\nimport React, { useEffect } from 'react';\nimport { View, Text, Pressable, ScrollView, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { BaseProduct, SortField } from '../types/scraper';\nimport { useTheme } from '../theme/ThemeContext';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT, COLUMN_WIDTHS, getTableWidth, getContentWidth, Column } from '../constants/layout';\nimport { saveSortOption, loadSortOption } from '../utils/storage';\nimport { trackAction, ANALYTICS_EVENTS } from '../utils/analytics';\nimport { spacing } from '../theme/spacing';\n\ninterface FilterOptions {\n  brands: string[];\n  series: string[];\n  type: string[];\n}\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  onSort: (field: SortField) => void;\n  onFoilSelect: (foil: BaseProduct) => void;\n  isSelected: (foil: BaseProduct) => boolean;\n  isTemporary?: (foil: BaseProduct) => boolean;\n  sortOption: { field: SortField; ascending: boolean };\n  columns: Column[];\n  filters: FilterOptions;\n  filterOptions?: {\n    brands: string[];\n    series: string[];\n    types: string[];\n  };\n  selectedFoils?: BaseProduct[];\n  onCompare?: () => void;\n  onClearSelection?: () => void;\n}\n\nconst DEFAULT_COLUMNS = [\n  { id: 'brand', label: 'Brand', isVisible: true },\n  { id: 'series', label: 'Series', isVisible: false },\n  { id: 'model', label: 'Model', isVisible: true },\n  { id: 'area', label: 'Area', isVisible: true },\n  { id: 'wingspan', label: 'Span', isVisible: true },\n  { id: 'aspectRatio', label: 'AR', isVisible: true },\n  { id: 'type', label: 'Type', isVisible: true },\n  { id: 'price', label: 'Price', isVisible: true },\n  { id: 'link', label: 'Link', isVisible: true },\n];\n\nexport const FoilsTable: React.FC<FoilsTableProps> = ({\n  foils,\n  onSort,\n  onFoilSelect,\n  isSelected,\n  isTemporary,\n  sortOption,\n  columns,\n  filters,\n  filterOptions,\n  selectedFoils,\n  onCompare,\n  onClearSelection,\n}) => {\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const { colors } = useTheme();\n\n  // Load saved sort option on mount\n  useEffect(() => {\n    const loadSavedSort = async () => {\n      try {\n        const savedSort = await loadSortOption();\n        if (savedSort && (savedSort.field !== sortOption.field || savedSort.ascending !== sortOption.ascending)) {\n          onSort(savedSort.field);\n        }\n      } catch (error) {\n        console.error('Error loading sort option:', error);\n      }\n    };\n\n    loadSavedSort();\n  }, []);\n\n  // Save sort option when it changes\n  useEffect(() => {\n    const saveSortSettings = async () => {\n      try {\n        await saveSortOption({\n          field: sortOption.field,\n          ascending: sortOption.ascending\n        });\n      } catch (error) {\n        console.error('Error saving sort option:', error);\n      }\n    };\n\n    saveSortSettings();\n  }, [sortOption]);\n\n  const getColumnWidth = (columnId: string) => {\n    return COLUMN_WIDTHS[columnId as keyof typeof COLUMN_WIDTHS] || 150;\n  };\n\n  const isColumnFiltered = (columnId: string) => {\n    switch (columnId) {\n      case 'brand':\n        return filters.brands.length > 0;\n      case 'series':\n        return filters.series.length > 0;\n      case 'type':\n        return filters.type.length > 0;\n      default:\n        return false;\n    }\n  };\n\n  const renderSortIcon = (columnId: string) => {\n    if (sortOption.field !== columnId) {\n      return (\n        <View style={styles.sortIconContainer}>\n          <Text style={[styles.sortIcon, { color: colors.text.tertiary }]}>▲</Text>\n          <Text style={[styles.sortIcon, { color: colors.text.tertiary }]}>▼</Text>\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.sortIconContainer}>\n        <Text style={[\n          styles.sortIcon,\n          sortOption.ascending && [styles.sortIconUpActive, { color: colors.primary }]\n        ]}>▲</Text>\n        <Text style={[\n          styles.sortIcon,\n          !sortOption.ascending && [styles.sortIconDownActive, { color: colors.primary }]\n        ]}>▼</Text>\n      </View>\n    );\n  };\n\n  const getCellContent = (foil: BaseProduct, columnId: string) => {\n    let content: React.ReactNode = '-';\n    \n    switch (columnId) {\n      case 'brand':\n        content = foil.brand;\n        break;\n      case 'model':\n        content = foil.model;\n        break;\n      case 'series':\n        content = foil.series || '-';\n        break;\n      case 'area':\n        content = foil.specs?.area?.toFixed(2) || '-';\n        break;\n      case 'wingspan':\n        content = foil.specs?.wingspan?.toFixed(2) || '-';\n        break;\n      case 'aspectRatio':\n        content = foil.specs?.aspectRatio?.toFixed(2) || '-';\n        break;\n      case 'type':\n        content = foil.type || '-';\n        break;\n      case 'price':\n        content = foil.price ? `$${foil.price}` : '-';\n        break;\n      case 'link':\n        return (\n          <Pressable\n            style={[styles.linkButton, { backgroundColor: colors.primary }]}\n            onPress={() => window.open(foil.sourceUrl, '_blank')}\n          >\n            <Text style={[styles.linkText, { color: colors.text.inverse }]}>View</Text>\n            <Text style={[styles.externalLinkIcon, { color: colors.text.inverse }]}>↗</Text>\n          </Pressable>\n        );\n    }\n\n    return (\n      <Text \n        style={[\n          styles.cellText,\n          { color: colors.text.primary },\n          ['area', 'wingspan', 'aspectRatio', 'price'].includes(columnId) && styles.numberText\n        ]}\n      >\n        {content}\n      </Text>\n    );\n  };\n\n  const handleSort = (field: SortField) => {\n    trackAction(ANALYTICS_EVENTS.SORT_FOILS, {\n      field,\n      direction: sortOption.field === field && sortOption.ascending ? 'desc' : 'asc'\n    });\n    onSort(field);\n  };\n\n  const tableWidth = getTableWidth(columns);\n\n  return (\n    <View style={styles.container}>\n      <ScrollView \n        horizontal\n        showsHorizontalScrollIndicator={true}\n        style={styles.horizontalScrollView}\n        contentContainerStyle={{\n          width: tableWidth,\n          flexGrow: 0,\n          margin: 0,\n          padding: 0,\n        }}\n      >\n        <View style={[\n          styles.tableContent,\n          { width: tableWidth }\n        ]}>\n          <View style={[\n            styles.tableHeader,\n            { backgroundColor: colors.background.tertiary }\n          ]}>\n            <View style={[\n              styles.headerRow,\n              { \n                borderBottomColor: colors.border,\n                backgroundColor: colors.background.secondary,\n              }\n            ]}>\n              {columns.map(column => column.isVisible && (\n                <Pressable\n                  key={column.id}\n                  style={[\n                    styles.headerCell,\n                    { \n                      width: getColumnWidth(column.id),\n                      borderRightColor: colors.text.tertiary + '40',\n                      borderBottomColor: isColumnFiltered(column.id) ? colors.primary : colors.border,\n                      backgroundColor: colors.background.tertiary,\n                      borderRightWidth: 1,\n                    },\n                    isColumnFiltered(column.id) && styles.headerCellFiltered\n                  ]}\n                  onPress={() => handleSort(column.id as SortField)}\n                >\n                  <Text style={[\n                    styles.headerText,\n                    { \n                      color: isColumnFiltered(column.id) ? colors.primary : colors.text.primary,\n                      fontWeight: '600',\n                    }\n                  ]}>\n                    {column.label}\n                  </Text>\n                  {renderSortIcon(column.id)}\n                </Pressable>\n              ))}\n            </View>\n          </View>\n          <ScrollView \n            style={[styles.scrollView, { backgroundColor: colors.background.primary }]}\n            showsVerticalScrollIndicator={true}\n            bounces={false}\n          >\n            {foils.map((foil, index) => {\n              const selected = isSelected(foil);\n              const temporary = isTemporary?.(foil);\n              const rowKey = `${foil.model}-${foil.specs?.area || 'unknown'}-${index}`;\n              \n              return (\n                <Pressable\n                  key={rowKey}\n                  onPress={() => onFoilSelect(foil)}\n                  style={({ pressed }) => [\n                    styles.row,\n                    { borderBottomColor: colors.border },\n                    index % 2 === 0 && [styles.rowEven, { backgroundColor: colors.background.secondary + '50' }],\n                    selected && [styles.rowSelected, { \n                      backgroundColor: `${colors.primary}15`,\n                    }],\n                    temporary && [styles.rowTemporary, {\n                      backgroundColor: `${colors.success}10`,\n                    }],\n                    Platform.OS === 'web' && pressed && !selected && [styles.rowHovered, { \n                      backgroundColor: `${colors.primary}10`,\n                    }]\n                  ]}\n                >\n                  {columns.map(column => column.isVisible && (\n                    <View\n                      key={`${rowKey}-${column.id}`}\n                      style={[\n                        styles.cell,\n                        { \n                          width: getColumnWidth(column.id),\n                          borderRightColor: colors.border,\n                          borderRightWidth: 1,\n                        }\n                      ]}\n                    >\n                      {getCellContent(foil, column.id)}\n                    </View>\n                  ))}\n                </Pressable>\n              );\n            })}\n          </ScrollView>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    overflow: 'hidden',\n  },\n  horizontalScrollView: {\n    flex: 1,\n    width: '100%',\n  },\n  tableContent: {\n    flex: 1,\n    width: '100%',\n  },\n  tableHeader: {\n    borderBottomWidth: 1,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.05,\n    shadowRadius: 1,\n    elevation: 2,\n  },\n  headerRow: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    width: '100%',\n    minWidth: 'fit-content',\n    flexShrink: 0,\n  },\n  headerCell: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: spacing.MEDIUM,\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      transition: 'all 0.2s ease',\n    }),\n  },\n  headerCellFiltered: {\n    borderBottomWidth: 2,\n  },\n  headerText: {\n    fontSize: 14,\n    flex: 1,\n    letterSpacing: 0.3,\n  },\n  row: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    width: '100%',\n    minWidth: 'fit-content',\n    flexShrink: 0,\n    ...(Platform.OS === 'web' && {\n      margin: 0,\n      padding: 0,\n    }),\n  },\n  rowEven: {},\n  rowSelected: {\n    borderStyle: 'solid',\n  },\n  rowHovered: {\n    borderStyle: 'solid',\n  },\n  cell: {\n    padding: spacing.MEDIUM,\n    borderRightWidth: 1,\n  },\n  cellText: {\n    fontSize: 14,\n  },\n  numberText: {\n    textAlign: 'right',\n  },\n  scrollView: {\n    flex: 1,\n  },\n  sortIconContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: 28,\n    justifyContent: 'center',\n    width: 16,\n    gap: spacing.XSMALL,\n    marginLeft: spacing.SMALL,\n  },\n  sortIcon: {\n    fontSize: 12,\n    width: 12,\n    height: 10,\n    lineHeight: 10,\n    textAlign: 'center',\n  },\n  sortIconUpActive: {\n    fontSize: 13,\n  },\n  sortIconDownActive: {\n    fontSize: 13,\n  },\n  linkButton: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    minWidth: 44,\n    alignItems: 'center',\n    position: 'relative',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  linkText: {\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  externalLinkIcon: {\n    position: 'absolute',\n    top: 0,\n    right: 2,\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  rowTemporary: {\n    borderStyle: 'dashed',\n  },\n});\n","import { Helmet } from 'react-helmet-async';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  canonicalUrl?: string;\n  imageUrl?: string;\n}\n\nexport const SEOHead: React.FC<SEOHeadProps> = ({\n  title,\n  description,\n  canonicalUrl,\n  imageUrl\n}) => {\n  const siteTitle = 'FoilQuiver';\n  const fullTitle = `${title} | ${siteTitle}`;\n  \n  return (\n    <Helmet>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      {imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n      \n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      {imageUrl && <meta name=\"twitter:image\" content={imageUrl} />}\n    </Helmet>\n  );\n}; ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useSearchFoils(foils: BaseProduct[], searchQuery: string) {\n  const searchedFoils = useMemo(() => {\n    if (!searchQuery.trim()) {\n      return foils;\n    }\n\n    const query = searchQuery.toLowerCase().trim();\n    return foils.filter(foil => {\n      const searchableText = [\n        foil.brand,\n        foil.model,\n        foil.series || '',\n        foil.type || '',\n        foil.specs?.area?.toString() || '',\n        foil.specs?.wingspan?.toString() || '',\n        foil.specs?.aspectRatio?.toString() || '',\n      ].join(' ').toLowerCase();\n\n      return searchableText.includes(query);\n    });\n  }, [foils, searchQuery]);\n\n  return { searchedFoils };\n} ","import { useState, useMemo } from 'react';\nimport { BaseProduct, SortField } from '../types/scraper';\nimport { sortProducts } from '../utils/sorting';\n\nexport interface SortOption {\n  field: SortField;\n  direction: 'asc' | 'desc';\n}\n\nexport function useSortedFoils(foils: BaseProduct[]) {\n  const [sortOption, setSortOption] = useState<SortOption>({\n    field: 'area',\n    direction: 'desc'\n  });\n\n  const sortedFoils = useMemo(() => {\n    return sortProducts(foils, sortOption.field, sortOption.direction);\n  }, [foils, sortOption]);\n\n  return {\n    sortOption,\n    setSortOption,\n    sortedFoils\n  };\n} ","import { BaseProduct } from '../types/scraper';\nimport { SortField, SortDirection } from '../hooks/useSortedFoils';\n\nexport function sortProducts(\n  products: BaseProduct[],\n  field: SortField,\n  direction: SortDirection\n): BaseProduct[] {\n  return [...products].sort((a, b) => {\n    let valueA: string | number;\n    let valueB: string | number;\n\n    if (field === 'brand' || field === 'series' || field === 'model' || field === 'type') {\n      valueA = a[field].toLowerCase();\n      valueB = b[field].toLowerCase();\n    } else if (field === 'price') {\n      valueA = a.price || 0;\n      valueB = b.price || 0;\n    } else if (field in a.specs) {\n      valueA = a.specs[field as keyof typeof a.specs] || 0;\n      valueB = b.specs[field as keyof typeof b.specs] || 0;\n    } else {\n      valueA = '';\n      valueB = '';\n    }\n    \n    const multiplier = direction === 'asc' ? 1 : -1;\n    \n    if (typeof valueA === 'string' && typeof valueB === 'string') {\n      return valueA.localeCompare(valueB) * multiplier;\n    }\n    if (typeof valueA === 'number' && typeof valueB === 'number') {\n      return (valueA - valueB) * multiplier;\n    }\n    return 0;\n  });\n} ","import React, { useState, useEffect, useMemo, useTransition } from 'react';\nimport { View, Text, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport type { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { useFoils } from '../hooks/useFoils';\nimport { useSearchFoils } from '../hooks/useSearchFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\nimport { FoilsTable } from '../components/FoilsTable';\nimport ComparisonControls from '../components/ComparisonControls';\nimport { AppLayout } from '../components/AppLayout';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { SEOHead } from '../components/SEOHead';\nimport { RootStackParamList } from '../types/navigation';\nimport { useTheme } from '../theme/ThemeContext';\nimport { BaseProduct, SortField } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT, Column } from '../constants/layout';\nimport { spacing } from '../theme/spacing';\nimport { getEnvironmentConfig } from '../config/environment';\nimport { useApp } from '../context/AppContext';\nimport { routes } from '../utils/routes';\n\ninterface BrowseScreenProps extends NativeStackScreenProps<RootStackParamList, 'Browse'> {\n  filters: FilterOptions;\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n  columns: Column[];\n  brands: string[];\n}\n\nconst BrowseScreen = ({ \n  route,\n  navigation,\n  filters,\n  onFilterChange,\n  columns,\n  brands,\n}: BrowseScreenProps) => {\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const { foils, loading, error } = useFoils();\n  const { filteredFoils, filterOptions } = useFilteredFoils(foils, filters);\n  const { colors } = useTheme();\n  const [selectedFoils, setSelectedFoils] = useState<BaseProduct[]>([]);\n  const { searchQuery, setSearchQuery } = useApp();\n  const config = getEnvironmentConfig();\n  const [isPending, startTransition] = useTransition();\n\n  const { searchedFoils } = useSearchFoils(filteredFoils, searchQuery);\n  \n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(searchedFoils);\n\n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleFoilSelect = (foil: BaseProduct) => {\n    setSelectedFoils(prev => {\n      const isSelected = prev.some(f => \n        f.model === foil.model && \n        f.specs?.area === foil.specs?.area\n      );\n      if (isSelected) {\n        return prev.filter(f => \n          !(f.model === foil.model && f.specs?.area === foil.specs?.area)\n        );\n      }\n      return [...prev, foil];\n    });\n  };\n\n  const handleCompare = () => {\n    if (selectedFoils.length < 2) return;\n    startTransition(() => {\n      navigation.navigate('Comparison', {\n        foils: selectedFoils,\n        title: `Comparing ${selectedFoils.length} Foils`\n      });\n    });\n  };\n\n  const handleClearSelection = () => {\n    setSelectedFoils([]);\n  };\n\n  const isSelected = (foil: BaseProduct) => {\n    return selectedFoils.some(f => \n      f.model === foil.model && \n      f.specs?.area === foil.specs?.area\n    );\n  };\n\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return <Text style={[styles.error, { color: colors.error }]}>{error}</Text>;\n  }\n\n  return (\n    <AppLayout\n      showFooter={true}\n    >\n      <SEOHead\n        title=\"FoilQuiver - Browse and compare hydrofoils\"\n        description={`Compare ${foils.length} hydrofoils across ${brands.length} brands. Filter by type, brand, and specifications to find your perfect foil.`}\n        canonicalUrl={`${config.webUrl}${routes.browse}`}\n      />\n      <View style={styles.tableContainer}>\n        <FoilsTable\n          foils={sortedFoils}\n          onSort={handleSort}\n          onFoilSelect={handleFoilSelect}\n          isSelected={isSelected}\n          sortOption={{\n            field: sortOption.field,\n            ascending: sortOption.direction === 'asc'\n          }}\n          columns={columns}\n          filters={filters}\n          selectedFoils={selectedFoils}\n          onCompare={handleCompare}\n          onClearSelection={handleClearSelection}\n        />\n        {selectedFoils.length > 0 && (\n          <View style={styles.comparisonControlsContainer}>\n            <ComparisonControls\n              selectedFoils={selectedFoils}\n              onCompareSelected={handleCompare}\n              onClearSelection={handleClearSelection}\n              onExitCompare={() => {}}\n              isComparisonView={false}\n            />\n          </View>\n        )}\n      </View>\n    </AppLayout>\n  );\n};\n\nexport default BrowseScreen;\n\nconst styles = StyleSheet.create({\n  tableContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    width: '100%',\n    position: 'relative',\n  },\n  comparisonControlsContainer: {\n    position: 'absolute',\n    bottom: spacing.CONTROLS_CONTAINER_BOTTOM,\n    right: 0,\n    left: 0,\n    paddingHorizontal: spacing.CONTROLS_CONTAINER_PADDING,\n  },\n  error: {\n    padding: spacing.CONTENT_PADDING,\n    textAlign: 'center',\n  },\n}); "],"names":["Footer","navigation","useNavigation","width","useWindowDimensions","colors","useTheme","isMobile","_jsx","View","style","styles","container","containerMobile","backgroundColor","background","primary","borderTopColor","border","children","content","contentMobile","linksContainer","linksContainerMobile","_jsxs","linkGroup","linkGroupMobile","Pressable","onPress","navigate","Text","link","color","text","secondary","separator","tertiary","StyleSheet","create","padding","spacing","LARGE","borderTopWidth","maxWidth","marginHorizontal","flexDirection","gap","justifyContent","alignItems","SMALL","fontSize","AppLayout","showFooter","flex","display","ComparisonControls","selectedFoils","onCompareSelected","onExitCompare","onClearSelection","isComparisonView","isQuiverView","length","comparisonBar","TouchableOpacity","button","buttonText","buttonGroup","clearButton","clearButtonText","compareButton","buttonDisabled","handleCompare","foils","disabled","compareButtonText","MEDIUM","Object","assign","paddingHorizontal","paddingVertical","borderRadius","minHeight","minWidth","Platform","OS","cursor","pointerEvents","userSelect","boxShadow","opacity","borderWidth","borderColor","fontWeight","textAlign","FoilsTable","onSort","onFoilSelect","isSelected","isTemporary","sortOption","columns","filters","filterOptions","onCompare","MOBILE_BREAKPOINT","useEffect","async","savedSort","loadSortOption","field","ascending","error","loadSavedSort","saveSortOption","saveSortSettings","getColumnWidth","columnId","COLUMN_WIDTHS","isColumnFiltered","brands","series","type","getCellContent","foil","brand","model","specs","area","toFixed","wingspan","aspectRatio","price","linkButton","window","open","sourceUrl","linkText","inverse","externalLinkIcon","cellText","includes","numberText","tableWidth","getTableWidth","ScrollView","horizontal","showsHorizontalScrollIndicator","horizontalScrollView","contentContainerStyle","flexGrow","margin","tableContent","tableHeader","headerRow","borderBottomColor","map","column","isVisible","headerCell","id","borderRightColor","borderRightWidth","headerCellFiltered","handleSort","trackAction","ANALYTICS_EVENTS","SORT_FOILS","direction","headerText","label","sortIconContainer","sortIcon","sortIconUpActive","sortIconDownActive","scrollView","showsVerticalScrollIndicator","bounces","index","selected","temporary","rowKey","pressed","row","rowEven","rowSelected","rowTemporary","success","rowHovered","cell","overflow","borderBottomWidth","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","flexShrink","transition","letterSpacing","borderStyle","XSMALL","marginLeft","lineHeight","position","top","right","SEOHead","title","description","canonicalUrl","imageUrl","fullTitle","Helmet","name","rel","href","property","useSearchFoils","searchQuery","searchedFoils","useMemo","trim","query","toLowerCase","filter","toString","join","useSortedFoils","setSortOption","useState","sortedFoils","products","sort","a","b","valueA","valueB","multiplier","localeCompare","BrowseScreen","route","onFilterChange","loading","useFoils","filteredFoils","useFilteredFoils","setSelectedFoils","setSearchQuery","useApp","config","getEnvironmentConfig","isPending","startTransition","useTransition","handleClearSelection","LoadingIndicator","webUrl","routes","browse","tableContainer","prev","some","f","comparisonControlsContainer","bottom","CONTROLS_CONTAINER_BOTTOM","left","CONTROLS_CONTAINER_PADDING","CONTENT_PADDING"],"sourceRoot":""}