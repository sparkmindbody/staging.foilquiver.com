{"version":3,"file":"static/js/167.326f39ee.chunk.js","mappings":"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","sources":["src/hooks/useSortedFoils.ts","src/utils/sorting.ts","src/components/FoilsTable.tsx","src/components/ComparisonControls.tsx","src/constants/spacing.ts","src/components/ComparisonView.tsx","src/components/Footer.tsx","src/components/SEOHead.tsx","src/screens/BrowseScreen.tsx","src/hooks/useSearchFoils.ts","src/hooks/useComparison.ts"],"sourcesContent":["import { useState, useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { sortProducts } from '../utils/sorting';\n\nexport type SortField = 'brand' | 'series' | 'model' | 'price' | 'area' | 'wingspan' | 'aspectRatio' | 'cord' | 'type' | 'link';\nexport type SortDirection = 'asc' | 'desc';\n\nexport interface SortOption {\n  field: SortField;\n  direction: SortDirection;\n}\n\nexport function useSortedFoils(foils: BaseProduct[]) {\n  const [sortOption, setSortOption] = useState<SortOption>({\n    field: 'area',\n    direction: 'asc'\n  });\n\n  const sortedFoils = useMemo(() => {\n    return sortProducts(foils, sortOption.field, sortOption.direction);\n  }, [foils, sortOption]);\n\n  return {\n    sortOption,\n    setSortOption,\n    sortedFoils\n  };\n} ","import { BaseProduct } from '../types/scraper';\nimport { SortField, SortDirection } from '../hooks/useSortedFoils';\n\nexport function sortProducts(\n  products: BaseProduct[],\n  field: SortField,\n  direction: SortDirection\n): BaseProduct[] {\n  return [...products].sort((a, b) => {\n    let valueA: string | number;\n    let valueB: string | number;\n\n    if (field === 'brand' || field === 'series' || field === 'model' || field === 'type') {\n      valueA = a[field].toLowerCase();\n      valueB = b[field].toLowerCase();\n    } else if (field === 'price') {\n      valueA = a.price || 0;\n      valueB = b.price || 0;\n    } else if (field in a.specs) {\n      valueA = a.specs[field as keyof typeof a.specs] || 0;\n      valueB = b.specs[field as keyof typeof b.specs] || 0;\n    } else {\n      valueA = '';\n      valueB = '';\n    }\n    \n    const multiplier = direction === 'asc' ? 1 : -1;\n    \n    if (typeof valueA === 'string' && typeof valueB === 'string') {\n      return valueA.localeCompare(valueB) * multiplier;\n    }\n    if (typeof valueA === 'number' && typeof valueB === 'number') {\n      return (valueA - valueB) * multiplier;\n    }\n    return 0;\n  });\n} ","/**\n * FoilsTable Component\n * \n * IMPORTANT: Column Alignment\n * - The table uses fixed column widths for consistent layout and horizontal scrolling\n * - Each column width in headerCell must match the corresponding cell width\n * - Current widths:\n *   - Regular columns (brand, model, type, series): 150px\n *   - Number columns (area, wingspan, AR, price): 100px\n *   - Link column: 100px\n * - When modifying column styles, always update both headerCell and cell styles to maintain alignment\n * - Table has a minWidth of 1200px to ensure proper layout on all screen sizes\n */\n\nimport React from 'react';\nimport { View, Text, Pressable, ScrollView, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { colors } from '../theme/colors';\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  onSort: (field: SortField) => void;\n  onFoilSelect: (foil: BaseProduct) => void;\n  isSelected: (foil: BaseProduct) => boolean;\n  sortOption: {\n    field: SortField;\n    ascending: boolean;\n  };\n  columns: { id: string; label: string; isVisible: boolean; }[];\n  filters: {\n    brands: string[];\n    series: string[];\n    type: string[];\n  };\n}\n\nconst MOBILE_BREAKPOINT = 768;\n\n// Column width constants - matching AppNavigator\nconst COLUMN_WIDTHS = {\n  brand: 150,\n  series: 120,\n  model: 150,\n  area: 80,\n  wingspan: 80,\n  aspectRatio: 80,\n  type: 80,\n  price: 105,\n  link: 80,\n} as const;\n\nconst DEFAULT_COLUMNS = [\n  { id: 'brand', label: 'Brand', isVisible: true },\n  { id: 'series', label: 'Series', isVisible: true },\n  { id: 'model', label: 'Model', isVisible: true },\n  { id: 'area', label: 'Area', isVisible: true },\n  { id: 'wingspan', label: 'Span', isVisible: true },\n  { id: 'aspectRatio', label: 'AR', isVisible: true },\n  { id: 'type', label: 'Type', isVisible: true },\n  { id: 'price', label: 'Price', isVisible: true },\n  { id: 'link', label: 'Link', isVisible: true },\n];\n\nexport function FoilsTable({\n  foils,\n  onSort,\n  onFoilSelect,\n  isSelected,\n  sortOption,\n  columns,\n  filters,\n}: FoilsTableProps) {\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n\n  // Calculate total width based on visible columns\n  const tableWidth = React.useMemo(() => {\n    return columns.reduce((total, column) => {\n      if (column.isVisible) {\n        return total + (COLUMN_WIDTHS[column.id as keyof typeof COLUMN_WIDTHS] || 100);\n      }\n      return total;\n    }, 0);\n  }, [columns]);\n\n  const renderSortIcon = (field: SortField) => {\n    const isActive = sortOption.field === field;\n    \n    return (\n      <View style={styles.sortIconContainer}>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconUp,\n          isActive && sortOption.ascending && styles.sortIconUpActive\n        ]}>▲</Text>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconDown,\n          isActive && !sortOption.ascending && styles.sortIconDownActive\n        ]}>▼</Text>\n      </View>\n    );\n  };\n\n  const getHeaderTextStyle = (field: SortField) => {\n    const isFiltered = \n      (field === 'brand' && filters.brands.length > 0) ||\n      (field === 'series' && filters.series.length > 0) ||\n      (field === 'type' && filters.type.length > 0);\n\n    return [\n      styles.headerText,\n      isFiltered && styles.headerTextFiltered\n    ];\n  };\n\n  const getColumnWidth = (columnId: string) => {\n    return COLUMN_WIDTHS[columnId as keyof typeof COLUMN_WIDTHS] || 100;\n  };\n\n  const renderHeaderCell = (column: typeof columns[0]) => {\n    if (!column.isVisible) return null;\n\n    const commonProps = {\n      style: [\n        styles.headerCell,\n        { width: getColumnWidth(column.id) },\n        (column.id === 'brand' && filters.brands.length > 0) && styles.headerCellFiltered,\n        (column.id === 'series' && filters.series.length > 0) && styles.headerCellFiltered,\n        (column.id === 'type' && filters.type.length > 0) && styles.headerCellFiltered,\n      ],\n    };\n\n    if (column.id === 'link') {\n      return (\n        <View {...commonProps}>\n          <Text style={[styles.headerText, styles.linkHeaderText]}>{column.label}</Text>\n        </View>\n      );\n    }\n\n    return (\n      <Pressable \n        {...commonProps}\n        onPress={() => onSort(column.id as SortField)}\n      >\n        <Text style={[\n          getHeaderTextStyle(column.id as SortField),\n          ['area', 'wingspan', 'aspectRatio', 'price'].includes(column.id) && styles.numberHeaderText\n        ]}>{column.label}</Text>\n        {renderSortIcon(column.id as SortField)}\n      </Pressable>\n    );\n  };\n\n  const renderCell = (foil: BaseProduct, column: typeof columns[0]) => {\n    if (!column.isVisible) return null;\n\n    const commonStyle = [\n      styles.cell,\n      { width: getColumnWidth(column.id) },\n    ];\n\n    switch (column.id) {\n      case 'brand':\n        return <Text style={commonStyle}>{foil.brand}</Text>;\n      case 'series':\n        return <Text style={commonStyle}>{foil.series}</Text>;\n      case 'model':\n        return <Text style={commonStyle}>{foil.model}</Text>;\n      case 'area':\n        return <Text style={commonStyle}>{foil.specs.area === 0 ? '-' : foil.specs.area}</Text>;\n      case 'wingspan':\n        return <Text style={commonStyle}>{foil.specs.wingspan === 0 ? '-' : foil.specs.wingspan}</Text>;\n      case 'aspectRatio':\n        return <Text style={commonStyle}>{!foil.specs.aspectRatio || foil.specs.aspectRatio === 0 ? '-' : foil.specs.aspectRatio.toFixed(2)}</Text>;\n      case 'type':\n        return <Text style={commonStyle}>{foil.type}</Text>;\n      case 'price':\n        return <Text style={commonStyle}>{foil.price ? `$${foil.price}` : '-'}</Text>;\n      case 'link':\n        return (\n          <View style={commonStyle}>\n            {foil.sourceUrl && (\n              <Pressable \n                onPress={(e) => {\n                  e.stopPropagation();\n                  window.open(foil.sourceUrl, '_blank');\n                }}\n                style={({ pressed }) => [\n                  styles.linkButton,\n                  pressed && styles.linkButtonPressed\n                ]}\n              >\n                <Text style={styles.linkText}>View</Text>\n              </Pressable>\n            )}\n          </View>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView \n        horizontal \n        showsHorizontalScrollIndicator={true}\n        contentContainerStyle={[\n          styles.scrollViewContent,\n          { minWidth: Math.min(tableWidth, width - 48) }\n        ]}\n        style={styles.horizontalScrollView}\n      >\n        <View style={[\n          styles.tableContent,\n          { width: Math.min(tableWidth, width - 48) }\n        ]}>\n          <View style={[styles.tableHeader, { width: tableWidth }]}>\n            <View style={styles.headerRow}>\n              {columns.map(column => (\n                <React.Fragment key={column.id}>\n                  {renderHeaderCell(column)}\n                </React.Fragment>\n              ))}\n            </View>\n          </View>\n          <View style={styles.scrollViewContainer}>\n            <ScrollView style={styles.scrollView}>\n              {foils.map((foil, index) => (\n                <Pressable\n                  key={`${foil.brand}-${foil.model}`}\n                  onPress={() => onFoilSelect(foil)}\n                  style={({ pressed }) => [\n                    styles.row,\n                    { width: tableWidth },\n                    index % 2 === 0 && styles.rowEven,\n                    isSelected(foil) && styles.rowSelected,\n                    Platform.OS === 'web' && pressed && styles.rowHovered\n                  ]}\n                >\n                  {columns.map(column => (\n                    <React.Fragment key={column.id}>\n                      {renderCell(foil, column)}\n                    </React.Fragment>\n                  ))}\n                </Pressable>\n              ))}\n            </ScrollView>\n          </View>\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    backgroundColor: colors.background.primary,\n    alignItems: 'center',\n  },\n  horizontalScrollView: {\n    flex: 1,\n    width: '100%',\n  },\n  scrollViewContent: {\n    flexGrow: 0,\n  },\n  tableContent: {\n    flex: 1,\n    backgroundColor: colors.background.primary,\n  },\n  tableHeader: {\n    backgroundColor: colors.background.secondary,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.primary,\n  },\n  headerRow: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.secondary,\n  },\n  headerCell: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  headerText: {\n    color: colors.text.secondary,\n    fontWeight: '600',\n    fontSize: 16,\n  },\n  headerTextFiltered: {\n    color: colors.primary,\n  },\n  row: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  rowEven: {\n    backgroundColor: colors.background.secondary,\n  },\n  rowSelected: {\n    backgroundColor: `${colors.primary}15`,\n  },\n  rowHovered: {\n    backgroundColor: `${colors.primary}10`,\n  },\n  cell: {\n    color: colors.text.primary,\n    fontSize: 14,\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n  },\n  modelCell: {\n    width: 150,\n  },\n  typeCell: {\n    width: 80,\n  },\n  seriesCell: {\n    width: 120,\n  },\n  numberCell: {\n    width: 80,\n    textAlign: 'right',\n  },\n  priceCell: {\n    width: 105,\n    textAlign: 'right',\n  },\n  numberHeaderCell: {\n    width: 80,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    gap: 4,\n  },\n  priceHeaderCell: {\n    width: 105,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    gap: 4,\n  },\n  numberHeaderText: {\n    textAlign: 'left',\n    flex: 1,\n  },\n  linkCell: {\n    width: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n    borderBottomRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderCell: {\n    width: 80,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderText: {\n    textAlign: 'center',\n  },\n  linkButton: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    minWidth: 44,\n    alignItems: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  linkButtonPressed: {\n    opacity: 0.8,\n  },\n  linkText: {\n    color: colors.background.primary,\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  sortIconContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: 28,\n    justifyContent: 'center',\n    width: 16,\n    gap: 2,\n  },\n  sortIcon: {\n    color: colors.text.muted,\n    fontSize: 12,\n    width: 12,\n    height: 10,\n    lineHeight: 10,\n    textAlign: 'center',\n  },\n  sortIconUp: {\n    marginBottom: 0,\n  },\n  sortIconDown: {\n    marginTop: 0,\n  },\n  sortIconUpActive: {\n    color: colors.primary,\n    fontSize: 13,\n  },\n  sortIconDownActive: {\n    color: colors.primary,\n    fontSize: 13,\n  },\n  scrollViewContainer: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  headerCellFiltered: {\n    borderBottomWidth: 2,\n    borderBottomColor: colors.primary,\n  },\n});\n","import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../constants/spacing';\nimport { colors } from '../theme/colors';\n\ninterface ComparisonControlsProps {\n  selectedFoils: BaseProduct[];\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  onClearSelection: () => void;\n  isComparisonView?: boolean;\n}\n\nconst WebWrapper = Platform.select({\n  web: ({ children }: { children: React.ReactNode }) => (\n    <div style={{\n      position: 'fixed',\n      bottom: 64,  // 48px footer height + 16px spacing\n      left: 0,\n      right: 0,\n      zIndex: 2000,\n      pointerEvents: 'none',\n    }}>\n      <div style={{ \n        pointerEvents: 'auto', \n        display: 'flex', \n        justifyContent: 'flex-end', \n        paddingRight: spacing.LARGE,\n        paddingBottom: 0,\n      }}>\n        {children}\n      </div>\n    </div>\n  ),\n  default: ({ children }: { children: React.ReactNode }) => <>{children}</>,\n});\n\nconst ComparisonControls = ({ selectedFoils, onCompareSelected, onExitCompare, onClearSelection, isComparisonView }: ComparisonControlsProps) => {\n  // Only show controls if there are selected foils or we're in comparison view\n  if (selectedFoils.length === 0 && !isComparisonView) {\n    return null;\n  }\n\n  const content = !isComparisonView ? (\n    <View style={styles.comparisonBar}>\n      <View style={styles.buttonGroup}>\n        <Pressable\n          style={[styles.button, styles.clearButton]}\n          onPress={onClearSelection}\n        >\n          <Text style={[styles.buttonText, styles.clearButtonText]}>Clear</Text>\n        </Pressable>\n        <Pressable\n          style={[styles.button, selectedFoils.length < 2 && styles.buttonDisabled]}\n          onPress={onCompareSelected}\n          disabled={selectedFoils.length < 2}\n        >\n          <Text style={styles.buttonText}>Compare</Text>\n        </Pressable>\n      </View>\n    </View>\n  ) : (\n    <View style={styles.comparisonBar}>\n      <Pressable\n        style={[styles.button, styles.cancelButton]}\n        onPress={onExitCompare}\n      >\n        <Text style={styles.buttonText}>Back</Text>\n      </Pressable>\n    </View>\n  );\n\n  return Platform.OS === 'web' ? (\n    <WebWrapper>{content}</WebWrapper>\n  ) : (\n    <View style={styles.container}>\n      {content}\n    </View>\n  );\n};\n\nexport default ComparisonControls;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    paddingBottom: 8,\n    backgroundColor: colors.background.secondary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n  },\n  comparisonBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  floatingButton: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonDisabled: {\n    backgroundColor: colors.text.muted,\n    opacity: 0.5,\n  },\n  clearButton: {\n    backgroundColor: colors.background.primary,\n    borderWidth: 1,\n    borderColor: colors.secondary,\n  },\n  cancelButton: {\n    backgroundColor: colors.secondary,\n  },\n  buttonText: {\n    color: colors.background.primary,\n    fontWeight: '600',\n    fontSize: 14,\n  },\n  selectionText: {\n    fontSize: 14,\n    color: colors.text.secondary,\n    marginRight: spacing.MEDIUM,\n  },\n  selectedCount: {\n    color: colors.text.secondary,\n    fontSize: 16,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  compareButton: {\n    backgroundColor: colors.primary,\n  },\n  compareButtonText: {\n    color: colors.background.primary,\n  },\n  clearButtonText: {\n    color: colors.secondary,\n  }\n}); ","export const spacing = {\n  SMALL: 8,\n  MEDIUM: 12,\n  LARGE: 16,\n  XLARGE: 24,\n}; ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FoilsTable } from './FoilsTable';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\n\ninterface ComparisonViewProps {\n  foils: BaseProduct[];\n  onClose?: () => void;\n  onCompare?: () => void;\n  columns: { id: string; label: string; isVisible: boolean; }[];\n}\n\nconst ComparisonView = ({ foils, onClose, onCompare, columns }: ComparisonViewProps) => {\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(foils);\n  \n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleSelect = () => {};\n  const isSelected = () => false;\n\n  // Empty filters for comparison view\n  const filters = {\n    brands: [],\n    series: [],\n    type: []\n  };\n\n  return (\n    <View style={styles.container}>\n      <FoilsTable\n        foils={sortedFoils}\n        onSort={handleSort}\n        onFoilSelect={handleSelect}\n        isSelected={isSelected}\n        sortOption={{\n          field: sortOption.field,\n          ascending: sortOption.direction === 'asc'\n        }}\n        columns={columns}\n        filters={filters}\n      />\n    </View>\n  );\n};\n\nexport default ComparisonView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  }\n});","import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { colors } from '../theme/colors';\n\nexport default function Footer() {\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { width } = useWindowDimensions();\n  const isMobile = width < 768;\n\n  return (\n    <View style={[styles.container, isMobile && styles.containerMobile]}>\n      <View style={[styles.content, isMobile && styles.contentMobile]}>\n        <View style={[styles.linkGroup, isMobile && styles.linkGroupMobile]}>\n          <Pressable onPress={() => navigation.navigate('Terms')}>\n            <Text style={styles.link}>Terms of Service</Text>\n          </Pressable>\n          <Text style={styles.separator}>•</Text>\n          <Pressable onPress={() => navigation.navigate('Privacy')}>\n            <Text style={styles.link}>Privacy Policy</Text>\n          </Pressable>\n          <Text style={styles.separator}>•</Text>\n          <Pressable onPress={() => navigation.navigate('Contact')}>\n            <Text style={styles.link}>Contact Us</Text>\n          </Pressable>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.background.primary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n    padding: 16,\n  },\n  containerMobile: {\n    padding: 12,\n  },\n  content: {\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  contentMobile: {\n    flexDirection: 'column',\n    gap: 8,\n  },\n  linkGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n  },\n  linkGroupMobile: {\n    gap: 8,\n  },\n  link: {\n    color: colors.text.secondary,\n    fontSize: 14,\n  },\n  separator: {\n    color: colors.text.muted,\n    fontSize: 14,\n  },\n}); ","import { Helmet } from 'react-helmet-async';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  canonicalUrl?: string;\n  imageUrl?: string;\n}\n\nexport const SEOHead: React.FC<SEOHeadProps> = ({\n  title,\n  description,\n  canonicalUrl,\n  imageUrl\n}) => {\n  const siteTitle = 'FoilQuiver';\n  const fullTitle = `${title} | ${siteTitle}`;\n  \n  return (\n    <Helmet>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      {imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n      \n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      {imageUrl && <meta name=\"twitter:image\" content={imageUrl} />}\n    </Helmet>\n  );\n}; ","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, Platform } from 'react-native';\nimport type { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { useFoils } from '../hooks/useFoils';\nimport { useSearchFoils } from '../hooks/useSearchFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { useSortedFoils, SortField, SortOption } from '../hooks/useSortedFoils';\nimport { useComparison } from '../hooks/useComparison';\nimport { FoilsTable } from '../components/FoilsTable';\nimport ComparisonControls from '../components/ComparisonControls';\nimport ComparisonView from '../components/ComparisonView';\nimport Footer from '../components/Footer';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { SEOHead } from '../components/SEOHead';\nimport { RootStackParamList } from '../types/navigation';\nimport { colors } from '../theme/colors';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Browse'> & {\n  filters: {\n    brands: string[];\n    series: string[];\n    type: string[];\n  };\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n  columns: { id: string; label: string; isVisible: boolean; }[];\n};\n\nconst CONTAINER_PADDING = 24;\n\nexport default function BrowseScreen({ route, navigation, filters, onFilterChange, columns }: Props) {\n  const { foils, loading, error, refreshFoils } = useFoils();\n  const [isComparisonView, setIsComparisonView] = useState(false);\n  const { filteredFoils, filterOptions } = useFilteredFoils(foils, filters);\n\n  const { searchedFoils } = useSearchFoils(filteredFoils, route.params?.searchQuery || '');\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(searchedFoils);\n  const { \n    selectedFoils,\n    toggleFoilSelection,\n    isSelected,\n    clearSelection\n  } = useComparison();\n\n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleCompareSelected = () => {\n    setIsComparisonView(true);\n  };\n\n  const handleExitCompare = () => {\n    setIsComparisonView(false);\n  };\n\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return <Text style={styles.error}>{error}</Text>;\n  }\n\n  return (\n    <View style={styles.container}>\n      <SEOHead\n        title=\"FoilQuiver - Browse and compare hydrofoils\"\n        description={`Compare ${foils.length} hydrofoils across ${filterOptions.brands.length} brands. Filter by type, brand, and specifications to find your perfect foil.`}\n        canonicalUrl=\"https://foilquiver.com/browse\"\n      />\n      <View style={styles.content}>\n        <View style={styles.tableContainer}>\n          {isComparisonView ? (\n            <ComparisonView \n              foils={selectedFoils} \n              onClose={handleExitCompare}\n              onCompare={() => {}}\n              columns={columns}\n            />\n          ) : (\n            <FoilsTable\n              foils={sortedFoils}\n              onSort={handleSort}\n              onFoilSelect={toggleFoilSelection}\n              isSelected={isSelected}\n              sortOption={{\n                field: sortOption.field,\n                ascending: sortOption.direction === 'asc'\n              }}\n              columns={columns}\n              filters={filters}\n            />\n          )}\n        </View>\n        <ComparisonControls\n          selectedFoils={selectedFoils}\n          onCompareSelected={handleCompareSelected}\n          onExitCompare={handleExitCompare}\n          onClearSelection={clearSelection}\n          isComparisonView={isComparisonView}\n        />\n      </View>\n      <Footer />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background.primary,\n  },\n  content: {\n    flex: 1,\n    paddingHorizontal: CONTAINER_PADDING,\n    width: '100%',\n    alignItems: 'flex-start',\n  },\n  tableContainer: {\n    flex: 1,\n    width: '100%',\n  },\n  error: {\n    color: 'red',\n    padding: 16,\n    textAlign: 'center',\n  },\n}); ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useSearchFoils(foils: BaseProduct[], searchQuery: string) {\n  const searchedFoils = useMemo(() => {\n    if (!searchQuery.trim()) {\n      return foils;\n    }\n\n    const query = searchQuery.toLowerCase().trim();\n    return foils.filter(foil => {\n      const searchableFields = [\n        foil.brand,\n        foil.model,\n        foil.series,\n        foil.specs.area.toString(),\n        foil.specs.wingspan.toString(),\n        foil.specs.aspectRatio.toString(),\n      ];\n\n      return searchableFields.some(field => \n        field.toLowerCase().includes(query)\n      );\n    });\n  }, [foils, searchQuery]);\n\n  return { searchedFoils };\n} ","import { useState, useCallback } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useComparison() {\n  const [selectedFoils, setSelectedFoils] = useState<BaseProduct[]>([]);\n\n  const toggleFoilSelection = useCallback((foil: BaseProduct) => {\n    setSelectedFoils(prev => {\n      const isAlreadySelected = prev.some(f => f.model === foil.model && f.brand === foil.brand);\n      if (isAlreadySelected) {\n        return prev.filter(f => !(f.model === foil.model && f.brand === foil.brand));\n      }\n      return [...prev, foil];\n    });\n  }, []);\n\n  const isSelected = useCallback((foil: BaseProduct) => {\n    return selectedFoils.some(f => f.model === foil.model && f.brand === foil.brand);\n  }, [selectedFoils]);\n\n  const clearSelection = useCallback(() => {\n    setSelectedFoils([]);\n  }, []);\n\n  return {\n    selectedFoils,\n    toggleFoilSelection,\n    isSelected,\n    clearSelection,\n  };\n} "],"names":["useSortedFoils","foils","_useState","useState","field","direction","_useState2","_slicedToArray","sortOption","setSortOption","sortedFoils","useMemo","products","_toConsumableArray","sort","a","b","valueA","valueB","toLowerCase","price","specs","multiplier","localeCompare","COLUMN_WIDTHS","brand","series","model","area","wingspan","aspectRatio","type","link","FoilsTable","onSort","onFoilSelect","isSelected","columns","filters","width","useWindowDimensions","tableWidth","React","reduce","total","column","isVisible","id","renderSortIcon","isActive","_jsxs","View","style","styles","sortIconContainer","children","_jsx","Text","sortIcon","sortIconUp","ascending","sortIconUpActive","sortIconDown","sortIconDownActive","getHeaderTextStyle","isFiltered","brands","length","headerText","headerTextFiltered","getColumnWidth","columnId","renderHeaderCell","commonProps","headerCell","headerCellFiltered","Object","assign","linkHeaderText","label","Pressable","onPress","includes","numberHeaderText","renderCell","foil","commonStyle","cell","toFixed","sourceUrl","e","stopPropagation","window","open","pressed","linkButton","linkButtonPressed","linkText","container","ScrollView","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","scrollViewContent","minWidth","Math","min","horizontalScrollView","tableContent","tableHeader","headerRow","map","scrollViewContainer","scrollView","index","row","rowEven","rowSelected","Platform","OS","rowHovered","StyleSheet","create","flex","backgroundColor","colors","background","primary","alignItems","flexGrow","secondary","borderBottomWidth","borderBottomColor","flexDirection","justifyContent","padding","borderRightWidth","borderRightColor","border","cursor","color","text","fontWeight","fontSize","modelCell","typeCell","seriesCell","numberCell","textAlign","priceCell","numberHeaderCell","gap","priceHeaderCell","linkCell","borderTopRightRadius","borderBottomRightRadius","linkHeaderCell","paddingHorizontal","paddingVertical","borderRadius","opacity","height","muted","lineHeight","marginBottom","marginTop","WebWrapper","select","web","position","bottom","left","right","zIndex","pointerEvents","display","paddingRight","paddingBottom","default","_Fragment","ComparisonControls","selectedFoils","onCompareSelected","onExitCompare","onClearSelection","isComparisonView","content","comparisonBar","button","cancelButton","buttonText","buttonGroup","clearButton","clearButtonText","buttonDisabled","disabled","borderTopWidth","borderTopColor","floatingButton","alignSelf","boxShadow","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderWidth","borderColor","selectionText","marginRight","selectedCount","buttonContainer","compareButton","compareButtonText","ComparisonView","onClose","onCompare","prev","handleSelect","Footer","navigation","useNavigation","isMobile","containerMobile","contentMobile","linkGroup","linkGroupMobile","navigate","separator","maxWidth","marginHorizontal","SEOHead","_ref","title","description","canonicalUrl","imageUrl","fullTitle","Helmet","name","rel","href","property","BrowseScreen","route","onFilterChange","loading","error","refreshFoils","useFoils","setIsComparisonView","filteredFoils","filterOptions","useFilteredFoils","searchedFoils","searchQuery","trim","query","filter","toString","some","useSearchFoils","params","toggleFoilSelection","clearSelection","setSelectedFoils","useCallback","f","concat","useComparison","handleExitCompare","LoadingIndicator","tableContainer","handleCompareSelected"],"sourceRoot":""}