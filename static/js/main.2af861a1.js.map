{"version":3,"file":"static/js/main.2af861a1.js","mappings":"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","sources":["src/components/ErrorBoundary.tsx","src/components/SearchBar.tsx","src/components/TableSettings.tsx","src/hooks/useGoogleAuth.ts","src/components/GoogleSignIn.tsx","src/components/QuiversMenu.tsx","src/components/UserMenu.tsx","src/navigation/AppHeader.tsx","index.ts","App.tsx","src/components/LoadingIndicator.tsx","src/components/QuiverManager.tsx","src/config/environment.ts","src/constants/layout.ts","src/context/AppContext.tsx","src/hooks/useFilteredFoils.ts","src/utils/dataTransform.ts","src/services/productService.ts","src/hooks/useFoils.ts","src/hooks/useQuivers.ts","src/theme/ThemeContext.tsx","src/theme/colors.ts","src/theme/spacing.ts","src/utils/analytics.ts","src/utils/foilUtils.ts","src/utils/logger.ts","src/utils/routes.ts","src/utils/storage.ts","src/config/env.ts","src/utils/supabase.ts"],"sourcesContent":["import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Platform } from 'react-native';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    // Log error to your error reporting service\n    console.error('Error caught by boundary:', error, errorInfo);\n  }\n\n  handleRetry = () => {\n    this.setState({ hasError: false, error: null });\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorView error={this.state.error} onRetry={this.handleRetry} />;\n    }\n\n    return this.props.children;\n  }\n}\n\ninterface ErrorViewProps {\n  error: Error | null;\n  onRetry: () => void;\n}\n\nconst ErrorView: React.FC<ErrorViewProps> = ({ error, onRetry }) => {\n  const { colors } = useTheme();\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.primary }]}>\n      <View style={styles.content}>\n        <Text style={[styles.title, { color: colors.error }]}>\n          Something went wrong\n        </Text>\n        <Text style={[styles.message, { color: colors.text.secondary }]}>\n          {error?.message || 'An unexpected error occurred'}\n        </Text>\n        <TouchableOpacity\n          style={[styles.button, { backgroundColor: colors.primary }]}\n          onPress={onRetry}\n        >\n          <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n            Try Again\n          </Text>\n        </TouchableOpacity>\n        {__DEV__ && error && (\n          <Text style={[styles.stack, { color: colors.text.tertiary }]}>\n            {error.stack}\n          </Text>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: spacing.LARGE,\n  },\n  content: {\n    maxWidth: 600,\n    width: '100%',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: spacing.MEDIUM,\n    textAlign: 'center',\n  },\n  message: {\n    fontSize: 16,\n    marginBottom: spacing.LARGE,\n    textAlign: 'center',\n  },\n  button: {\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    marginBottom: spacing.LARGE,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  stack: {\n    fontSize: 12,\n    fontFamily: Platform.OS === 'ios' ? 'Menlo' : 'monospace',\n    marginTop: spacing.LARGE,\n    padding: spacing.MEDIUM,\n    width: '100%',\n  },\n}); ","import React, { useState, useEffect, useRef } from 'react';\nimport { View, TextInput, StyleSheet, TouchableOpacity, Platform, Text } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\ninterface SearchBarProps {\n  value: string;\n  onChangeText: (text: string) => void;\n  onClear: () => void;\n  placeholder?: string;\n  autoFocus?: boolean;\n  mode?: 'browse' | 'comparison' | 'quiver';\n  onFocus?: () => void;\n}\n\nexport const SearchBar: React.FC<SearchBarProps> = ({\n  value,\n  onChangeText,\n  onClear,\n  placeholder = 'Search foils...',\n  autoFocus = false,\n  mode = 'browse',\n  onFocus,\n}) => {\n  const { colors } = useTheme();\n\n  const getPlaceholder = () => {\n    switch (mode) {\n      case 'comparison':\n        return 'Search foils to add to comparison...';\n      case 'quiver':\n        return 'Search foils to add to quiver...';\n      default:\n        return 'Search foils...';\n    }\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.secondary }]}>\n      {Platform.OS === 'web' ? (\n        <Text style={[styles.searchIcon, { color: colors.text.secondary }]}>🔍</Text>\n      ) : (\n        <Ionicons name=\"search\" size={20} color={colors.text.secondary} />\n      )}\n      <TextInput\n        style={[styles.input, { color: colors.text.primary }]}\n        value={value}\n        onChangeText={onChangeText}\n        placeholder={getPlaceholder()}\n        placeholderTextColor={colors.text.tertiary}\n        autoFocus={autoFocus}\n        onFocus={onFocus}\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n        clearButtonMode=\"never\"\n        returnKeyType=\"search\"\n        maxFontSizeMultiplier={1}\n        {...(Platform.OS === 'web' ? {\n          spellCheck: false,\n          autoComplete: 'off',\n        } : {\n          keyboardType: 'web-search',\n        })}\n      />\n      {value !== '' && (\n        <TouchableOpacity onPress={onClear} style={styles.clearButton}>\n          {Platform.OS === 'web' ? (\n            <Text style={[styles.clearIcon, { color: colors.text.secondary }]}>✕</Text>\n          ) : (\n            <Ionicons name=\"close-circle\" size={20} color={colors.text.secondary} />\n          )}\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: spacing.MEDIUM,\n    height: 40,\n    borderRadius: 8,\n    gap: spacing.SMALL,\n  },\n  input: {\n    flex: 1,\n    fontSize: 16,\n    height: '100%',\n    ...(Platform.OS === 'web' && {\n      outlineStyle: 'none',\n      border: 'none',\n      background: 'transparent',\n      lineHeight: 40,\n    }),\n  },\n  clearButton: {\n    height: '100%',\n    aspectRatio: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  searchIcon: {\n    fontSize: 16,\n    width: 20,\n    height: 20,\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n  clearIcon: {\n    fontSize: 16,\n    width: 20,\n    height: 20,\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n}); ","import React, { useState, useMemo, useEffect } from 'react';\nimport { View, Text, Pressable, StyleSheet, Modal, Platform, ScrollView } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useTheme } from '../theme/ThemeContext';\nimport { FilterOptions } from '../types/filters';\nimport { BaseProduct } from '../types/scraper';\nimport { saveFilters, saveColumns, loadFilters, loadColumns, StoredFilters, StoredColumns } from '../utils/storage';\nimport { spacing } from '../theme/spacing';\n\ninterface Column {\n  id: string;\n  label: string;\n  isVisible: boolean;\n}\n\ninterface TableSettingsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n  onClearFilters: () => void;\n  columns: Column[];\n  onColumnVisibilityChange: (columnId: string) => void;\n  onResetColumns: () => void;\n  foils: BaseProduct[];\n}\n\nexport function TableSettings({\n  filterOptions,\n  selectedBrands,\n  selectedSeries,\n  selectedTypes,\n  onFilterChange,\n  onClearFilters,\n  columns,\n  onColumnVisibilityChange,\n  onResetColumns,\n  foils,\n}: TableSettingsProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [activeTab, setActiveTab] = useState<'filters' | 'columns'>('filters');\n  const { colors, isDark, toggleTheme } = useTheme();\n\n  // Load saved settings on mount\n  useEffect(() => {\n    const loadSavedSettings = async () => {\n      try {\n        // Load and apply saved filters\n        const savedFilters = await loadFilters();\n        if (savedFilters) {\n          savedFilters.brands.forEach(brand => onFilterChange('brands', brand));\n          savedFilters.series.forEach(series => onFilterChange('series', series));\n          savedFilters.types.forEach(type => onFilterChange('type', type));\n        }\n\n        // Load and apply saved column settings\n        const savedColumns = await loadColumns();\n        if (savedColumns) {\n          // Create a map of current column visibility\n          const currentColumns = Object.fromEntries(\n            columns.map(col => [col.id, col.isVisible])\n          );\n\n          // Update each column's visibility if it differs from saved state\n          Object.entries(savedColumns).forEach(([columnId, isVisible]) => {\n            if (currentColumns[columnId] !== isVisible) {\n              onColumnVisibilityChange(columnId);\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Error loading settings:', error);\n      }\n    };\n\n    loadSavedSettings();\n  }, []); // Empty dependency array to only run on mount\n\n  // Save filters when they change\n  useEffect(() => {\n    const saveFilterSettings = async () => {\n      try {\n        const filters: StoredFilters = {\n          brands: selectedBrands,\n          series: selectedSeries,\n          types: selectedTypes,\n        };\n        await saveFilters(filters);\n      } catch (error) {\n        console.error('Error saving filter settings:', error);\n      }\n    };\n\n    saveFilterSettings();\n  }, [selectedBrands, selectedSeries, selectedTypes]);\n\n  // Save column settings when they change\n  useEffect(() => {\n    const saveColumnSettings = async () => {\n      try {\n        const columnSettings: StoredColumns = {};\n        columns.forEach(column => {\n          columnSettings[column.id] = column.isVisible;\n        });\n        await saveColumns(columnSettings);\n      } catch (error) {\n        console.error('Error saving column settings:', error);\n      }\n    };\n\n    saveColumnSettings();\n  }, [columns]);\n\n  // Handle column visibility change\n  const handleColumnVisibilityChange = async (columnId: string) => {\n    onColumnVisibilityChange(columnId);\n  };\n\n  // Handle reset columns\n  const handleResetColumns = async () => {\n    onResetColumns();\n    try {\n      const columnSettings: StoredColumns = {};\n      columns.forEach(column => {\n        columnSettings[column.id] = column.isVisible;\n      });\n      await saveColumns(columnSettings);\n    } catch (error) {\n      console.error('Error resetting column settings:', error);\n    }\n  };\n\n  // Filter series based on selected brands\n  const availableSeries = useMemo(() => {\n    if (selectedBrands.length === 0) {\n      return filterOptions.series;\n    }\n\n    // Get all series from foils that match selected brands\n    const seriesSet = new Set<string>();\n    foils.forEach(foil => {\n      if (selectedBrands.includes(foil.brand) && foil.series) {\n        seriesSet.add(foil.series);\n      }\n    });\n\n    return Array.from(seriesSet).sort();\n  }, [filterOptions.series, selectedBrands, foils]);\n\n  return (\n    <>\n      <Pressable \n        onPress={() => setIsOpen(true)}\n        style={[styles.iconButton, { backgroundColor: colors.background.secondary }]}\n      >\n        <MaterialIcons name=\"settings\" size={24} color={colors.text.primary} />\n      </Pressable>\n\n      <Modal\n        visible={isOpen}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => setIsOpen(false)}\n      >\n        <Pressable \n          style={[styles.modalOverlay, { backgroundColor: isDark ? 'rgba(0, 0, 0, 0.7)' : 'rgba(0, 0, 0, 0.5)' }]}\n          onPress={() => setIsOpen(false)}\n        >\n          <Pressable \n            style={[styles.modalContent, { backgroundColor: colors.background.primary }]}\n            onPress={e => e.stopPropagation()}\n          >\n            <View style={[styles.modalHeader, { borderBottomColor: colors.border }]}>\n              <Text style={[styles.modalTitle, { color: colors.text.primary }]}>Table Settings</Text>\n              <Pressable \n                onPress={() => setIsOpen(false)}\n                style={styles.closeButton}\n              >\n                <MaterialIcons name=\"close\" size={24} color={colors.text.secondary} />\n              </Pressable>\n            </View>\n\n            <View style={[styles.tabs, { borderBottomColor: colors.border }]}>\n              <Pressable\n                style={[styles.tab, activeTab === 'filters' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('filters')}\n              >\n                <Text style={[\n                  styles.tabText, \n                  { color: colors.text.secondary },\n                  activeTab === 'filters' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Filters {(selectedBrands.length > 0 || selectedSeries.length > 0 || selectedTypes.length > 0) && '•'}\n                </Text>\n              </Pressable>\n              <Pressable\n                style={[styles.tab, activeTab === 'columns' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('columns')}\n              >\n                <Text style={[\n                  styles.tabText,\n                  { color: colors.text.secondary },\n                  activeTab === 'columns' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Columns {columns.some(col => !col.isVisible) && '•'}\n                </Text>\n              </Pressable>\n            </View>\n\n            {activeTab === 'filters' ? (\n              <View style={styles.contentWrapper}>\n                <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n                  <View style={styles.content}>\n                    <View style={styles.headerWithAction}>\n                      <Text style={[styles.contentTitle, { color: colors.text.primary }]}>Active Filters</Text>\n                      {(selectedBrands.length > 0 || selectedSeries.length > 0 || selectedTypes.length > 0) && (\n                        <Pressable \n                          onPress={onClearFilters}\n                          style={[styles.clearButton, { backgroundColor: colors.background.secondary }]}\n                        >\n                          <Text style={[styles.clearButtonText, { color: colors.text.secondary }]}>Clear All</Text>\n                        </Pressable>\n                      )}\n                    </View>\n                    <View style={styles.section}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Brand</Text>\n                      <View style={styles.chipContainer}>\n                        {filterOptions.brands.map((brand) => (\n                          <Pressable\n                            key={brand}\n                            style={[\n                              styles.chip,\n                              { backgroundColor: colors.background.secondary },\n                              selectedBrands.includes(brand) && [styles.chipSelected, { backgroundColor: colors.primary }],\n                            ]}\n                            onPress={() => onFilterChange('brands', brand)}\n                          >\n                            <Text \n                              style={[\n                                styles.chipText,\n                                { color: colors.text.secondary },\n                                selectedBrands.includes(brand) && [styles.chipTextSelected, { color: colors.text.inverse }],\n                              ]}\n                            >\n                              {brand}\n                            </Text>\n                          </Pressable>\n                        ))}\n                      </View>\n                    </View>\n\n                    <View style={styles.section}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Type</Text>\n                      <View style={styles.chipContainer}>\n                        {filterOptions.types.map((type) => (\n                          <Pressable\n                            key={type}\n                            style={[\n                              styles.chip,\n                              { backgroundColor: colors.background.secondary },\n                              selectedTypes.includes(type) && [styles.chipSelected, { backgroundColor: colors.primary }],\n                            ]}\n                            onPress={() => onFilterChange('type', type)}\n                          >\n                            <Text \n                              style={[\n                                styles.chipText,\n                                { color: colors.text.secondary },\n                                selectedTypes.includes(type) && [styles.chipTextSelected, { color: colors.text.inverse }],\n                              ]}\n                            >\n                              {type}\n                            </Text>\n                          </Pressable>\n                        ))}\n                      </View>\n                    </View>\n\n                    <View style={styles.section}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Series</Text>\n                      <View style={styles.chipContainer}>\n                        {availableSeries.length > 0 ? (\n                          availableSeries.map((series) => (\n                            <Pressable\n                              key={series}\n                              style={[\n                                styles.chip,\n                                { backgroundColor: colors.background.secondary },\n                                selectedSeries.includes(series) && [styles.chipSelected, { backgroundColor: colors.primary }],\n                              ]}\n                              onPress={() => onFilterChange('series', series)}\n                            >\n                              <Text \n                                style={[\n                                  styles.chipText,\n                                  { color: colors.text.secondary },\n                                  selectedSeries.includes(series) && [styles.chipTextSelected, { color: colors.text.inverse }],\n                                ]}\n                              >\n                                {series}\n                              </Text>\n                            </Pressable>\n                          ))\n                        ) : (\n                          <Text style={[styles.noSeriesText, { color: colors.text.secondary }]}>\n                            No series available for selected brands\n                          </Text>\n                        )}\n                      </View>\n                    </View>\n\n                    <View style={[styles.section, styles.themeSection]}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Appearance</Text>\n                      <Pressable\n                        style={[styles.themeToggle, { backgroundColor: colors.background.secondary }]}\n                        onPress={toggleTheme}\n                      >\n                        <View style={styles.themeToggleContent}>\n                          <MaterialIcons \n                            name={isDark ? 'dark-mode' : 'light-mode'} \n                            size={20} \n                            color={colors.text.primary} \n                          />\n                          <Text style={[styles.themeToggleText, { color: colors.text.primary }]}>\n                            {isDark ? 'Dark Mode' : 'Light Mode'}\n                          </Text>\n                        </View>\n                        <MaterialIcons \n                          name=\"chevron-right\" \n                          size={20} \n                          color={colors.text.secondary} \n                        />\n                      </Pressable>\n                    </View>\n                  </View>\n                </ScrollView>\n              </View>\n            ) : (\n              <View style={styles.contentWrapper}>\n                <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n                  <View style={styles.content}>\n                    <View style={styles.headerWithAction}>\n                      <Text style={[styles.contentTitle, { color: colors.text.primary }]}>Visible Columns</Text>\n                      {columns.some(col => !col.isVisible) && (\n                        <Pressable \n                          onPress={handleResetColumns}\n                          style={[styles.clearButton, { backgroundColor: colors.background.secondary }]}\n                        >\n                          <Text style={[styles.clearButtonText, { color: colors.text.secondary }]}>Reset</Text>\n                        </Pressable>\n                      )}\n                    </View>\n                    <View style={styles.columnList}>\n                      {columns.map(column => (\n                        <Pressable\n                          key={column.id}\n                          style={styles.columnItem}\n                          onPress={() => handleColumnVisibilityChange(column.id)}\n                        >\n                          <Text style={[styles.columnLabel, { color: colors.text.primary }]}>{column.label}</Text>\n                          <View style={[\n                            styles.checkbox,\n                            { borderColor: colors.border },\n                            column.isVisible && [styles.checkboxChecked, { backgroundColor: colors.primary, borderColor: colors.primary }]\n                          ]}>\n                            {column.isVisible && (\n                              <MaterialIcons name=\"check\" size={16} color={colors.text.inverse} />\n                            )}\n                          </View>\n                        </Pressable>\n                      ))}\n                    </View>\n                  </View>\n                </ScrollView>\n              </View>\n            )}\n          </Pressable>\n        </Pressable>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n  },\n  button: {\n    padding: spacing.MEDIUM,\n  },\n  iconButton: {\n    padding: spacing.XSMALL,\n  },\n  modalContent: {\n    padding: spacing.MEDIUM,\n  },\n  modalHeader: {\n    padding: spacing.LARGE,\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n  },\n  columnGroup: {\n    flexDirection: 'column',\n    gap: spacing.MEDIUM,\n  },\n  filterGroup: {\n    padding: spacing.MEDIUM,\n  },\n  filterList: {\n    gap: spacing.MEDIUM,\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n  },\n  closeButton: {\n    padding: 4,\n  },\n  tabs: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n  },\n  tab: {\n    flex: 1,\n    padding: 12,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n  },\n  tabText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  activeTabText: {\n    // Remove static color reference since we're applying it dynamically\n  },\n  content: {\n    padding: 16,\n    width: '100%',\n  },\n  contentWrapper: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 12,\n  },\n  chipContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  chip: {\n    borderRadius: 16,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n  },\n  chipSelected: {},\n  chipText: {\n    fontSize: 14,\n  },\n  chipTextSelected: {},\n  columnList: {\n    gap: 12,\n  },\n  columnItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n  },\n  columnLabel: {\n    fontSize: 14,\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderRadius: 4,\n    borderWidth: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  checkboxChecked: {},\n  headerWithAction: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  contentTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  clearButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n  },\n  clearButtonText: {\n    fontSize: 14,\n  },\n  noSeriesText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  themeSection: {\n    marginTop: 32,\n  },\n  themeToggle: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  themeToggleContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n  },\n  themeToggleText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n}); ","import { useState } from 'react';\nimport { Platform } from 'react-native';\nimport { supabase } from '../utils/supabase';\nimport { GOOGLE_CLIENT_ID } from '../config/env';\n\n// Get the Google OAuth redirect URL for web\nconst getRedirectUrl = () => {\n  if (Platform.OS !== 'web') return undefined;\n\n  const origin = window.location.origin;\n  const hostname = window.location.hostname;\n  \n  // For localhost development\n  if (hostname === 'localhost' || hostname.includes('127.0.0.1')) {\n    return 'http://localhost:19006';\n  }\n  \n  // For staging and production, use the actual origin\n  // Supabase will append the necessary path\n  return origin;\n};\n\n// Make sure to configure these URLs in Google Cloud Console:\n// Development:\n// - Origins: http://localhost:19006, http://localhost:3000\n// - Redirect: http://localhost:3000/auth/callback\n//\n// Staging:\n// - Origin: https://staging.foilquiver.com\n// - Redirect: https://staging.foilquiver.com/auth/callback\n//\n// Production:\n// - Origin: https://foilquiver.com\n// - Redirect: https://foilquiver.com/auth/callback\n\nexport const useGoogleAuth = () => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const signInWithGoogle = async () => {\n    try {\n      setIsLoading(true);\n      if (Platform.OS !== 'web') {\n        console.warn('Mobile authentication not yet implemented');\n        return { data: null, error: new Error('Mobile authentication not yet implemented') };\n      }\n\n      const redirectTo = getRedirectUrl();\n      const { data, error } = await supabase.auth.signInWithOAuth({\n        provider: 'google',\n        options: {\n          redirectTo,\n          queryParams: {\n            access_type: 'offline',\n            prompt: 'consent',\n          },\n        },\n      });\n\n      if (error) {\n        console.error('Google OAuth error:', error);\n      }\n\n      return { data, error };\n    } catch (error) {\n      console.error('Unexpected error during Google sign in:', error);\n      return { data: null, error };\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    signInWithGoogle,\n    isLoading,\n  };\n}; ","import React from 'react';\nimport { TouchableOpacity, StyleSheet, Text, ActivityIndicator, Alert } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { colors } from '../theme/colors';\nimport { useGoogleAuth } from '../hooks/useGoogleAuth';\nimport { AuthError } from '@supabase/supabase-js';\n\ninterface GoogleSignInProps {\n  onSuccess?: () => void;\n}\n\nexport const GoogleSignIn = ({ onSuccess }: GoogleSignInProps) => {\n  const { signInWithGoogle, isLoading } = useGoogleAuth();\n\n  const handleSignIn = async () => {\n    try {\n      const { error } = await signInWithGoogle();\n      \n      if (error) {\n        Alert.alert('Sign In Error', error instanceof AuthError ? error.message : 'Failed to sign in');\n        return;\n      }\n\n      onSuccess?.();\n    } catch (error) {\n      Alert.alert('Error', 'An unexpected error occurred during sign in.');\n      console.error('Sign in error:', error);\n    }\n  };\n\n  return (\n    <TouchableOpacity\n      style={styles.button}\n      onPress={handleSignIn}\n      disabled={isLoading}\n    >\n      {isLoading ? (\n        <ActivityIndicator color={colors.text.inverse} />\n      ) : (\n        <>\n          <Ionicons name=\"logo-google\" size={24} color={colors.text.inverse} style={styles.icon} />\n          <Text style={styles.buttonText}>Sign in with Google</Text>\n        </>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    minWidth: 220,\n  },\n  buttonText: {\n    color: colors.text.inverse,\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  icon: {\n    marginRight: 8,\n  },\n}); ","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Platform } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from '../theme/ThemeContext';\nimport { useQuivers } from '../hooks/useQuivers';\n\ninterface QuiversMenuProps {\n  onPress: () => void;\n}\n\nexport const QuiversMenu: React.FC<QuiversMenuProps> = ({ onPress }) => {\n  const { colors } = useTheme();\n  const { quivers } = useQuivers();\n\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <View style={styles.menuItemContent}>\n        {Platform.OS === 'web' ? (\n          <Text style={[styles.menuItemText, { color: colors.text.primary }]}>\n            My Quivers {quivers.length > 0 ? `(${quivers.length})` : ''}\n          </Text>\n        ) : (\n          <>\n            <Ionicons \n              name=\"bookmark-outline\" \n              size={20} \n              color={colors.text.primary}\n            />\n            <Text style={[styles.menuItemText, { color: colors.text.primary }]}>\n              My Quivers {quivers.length > 0 ? `(${quivers.length})` : ''}\n            </Text>\n          </>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  menuItemContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  menuItemText: {\n    fontSize: 16,\n  },\n}); ","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, Alert, Image, Platform } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { supabase } from '../utils/supabase';\nimport { spacing } from '../theme/spacing';\nimport { GoogleSignIn } from './GoogleSignIn';\nimport { Session, User } from '@supabase/supabase-js';\nimport { QuiversMenu } from './QuiversMenu';\nimport { QuiverManager } from './QuiverManager';\nimport { useTheme } from '../theme/ThemeContext';\n\nexport const UserMenu = () => {\n  const { colors } = useTheme();\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n  const [session, setSession] = useState<Session | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [isAuthModalVisible, setIsAuthModalVisible] = useState(false);\n  const [isQuiversModalVisible, setIsQuiversModalVisible] = useState(false);\n\n  useEffect(() => {\n    // Get initial session\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n      setUser(session?.user ?? null);\n    });\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n      setUser(session?.user ?? null);\n      if (session) {\n        console.log('User logged in:', session.user);\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const handleSignOut = async () => {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n      setSession(null);\n      setUser(null);\n      setIsMenuVisible(false);\n    } catch (error) {\n      Alert.alert('Error', 'Failed to sign out');\n      console.error('Sign out error:', error);\n    }\n  };\n\n  const renderAuthModal = () => (\n    <Modal\n      visible={isAuthModalVisible}\n      transparent\n      animationType=\"fade\"\n      onRequestClose={() => setIsAuthModalVisible(false)}\n    >\n      <TouchableOpacity\n        style={[styles.modalOverlay, { backgroundColor: 'rgba(0, 0, 0, 0.5)' }]}\n        activeOpacity={1}\n        onPress={() => setIsAuthModalVisible(false)}\n      >\n        <View \n          style={[styles.modalContent, { backgroundColor: colors.background.primary }]} \n          onStartShouldSetResponder={() => true}\n        >\n          <View style={[styles.modalHeader, { borderBottomColor: colors.border }]}>\n            <Text style={[styles.modalTitle, { color: colors.text.primary }]}>Sign In</Text>\n            <TouchableOpacity onPress={() => setIsAuthModalVisible(false)}>\n              {Platform.OS === 'web' ? (\n                <Text style={{ fontSize: 24, color: colors.text.primary }}>×</Text>\n              ) : (\n                <Ionicons name=\"close\" size={24} color={colors.text.primary} />\n              )}\n            </TouchableOpacity>\n          </View>\n          <GoogleSignIn onSuccess={() => setIsAuthModalVisible(false)} />\n        </View>\n      </TouchableOpacity>\n    </Modal>\n  );\n\n  if (!session) {\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          style={[styles.signInButton, { backgroundColor: colors.primary }]}\n          onPress={() => setIsAuthModalVisible(true)}\n        >\n          <Text style={[styles.signInText, { color: colors.text.inverse }]}>Sign In</Text>\n        </TouchableOpacity>\n        {renderAuthModal()}\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity\n        style={styles.profileButton}\n        onPress={() => setIsMenuVisible(!isMenuVisible)}\n      >\n        {user?.user_metadata?.avatar_url ? (\n          <Image \n            source={{ uri: user.user_metadata.avatar_url }} \n            style={styles.avatarImage}\n          />\n        ) : Platform.OS === 'web' ? (\n          <Text style={{ fontSize: 24, color: colors.text.primary }}>👤</Text>\n        ) : (\n          <Ionicons name=\"person-circle-outline\" size={24} color={colors.text.primary} />\n        )}\n      </TouchableOpacity>\n      \n      {isMenuVisible && (\n        <View style={[styles.menu, { \n          backgroundColor: colors.background.primary,\n          borderColor: colors.border,\n        }]}>\n          <View style={styles.userInfo}>\n            <Text style={[styles.userName, { color: colors.text.primary }]}>\n              {user?.user_metadata?.full_name || user?.email}\n            </Text>\n            <Text style={[styles.userEmail, { color: colors.text.secondary }]}>\n              {user?.email}\n            </Text>\n          </View>\n          <View style={[styles.menuDivider, { backgroundColor: colors.border }]} />\n          <View style={styles.menuItem}>\n            <QuiversMenu onPress={() => {\n              setIsQuiversModalVisible(true);\n              setIsMenuVisible(false);\n            }} />\n          </View>\n          <TouchableOpacity style={styles.menuItem} onPress={handleSignOut}>\n            {Platform.OS === 'web' ? (\n              <Text style={{ fontSize: 20, color: colors.text.primary }}>⇥</Text>\n            ) : (\n              <Ionicons name=\"log-out-outline\" size={20} color={colors.text.primary} />\n            )}\n            <Text style={[styles.menuItemText, { color: colors.text.primary }]}>Sign Out</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n\n      <Modal\n        visible={isQuiversModalVisible}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => setIsQuiversModalVisible(false)}\n      >\n        <View \n          style={[\n            styles.modalOverlay,\n            { backgroundColor: 'rgba(0, 0, 0, 0.5)' }\n          ]}\n          onStartShouldSetResponder={() => true}\n        >\n          <View \n            style={[\n              styles.modalContent,\n              { backgroundColor: colors.background.primary }\n            ]}\n          >\n            <QuiverManager\n              selectedFoils={[]}\n              onClose={() => setIsQuiversModalVisible(false)}\n              initialTab=\"saved\"\n              standalone={true}\n            />\n          </View>\n        </View>\n      </Modal>\n\n      {renderAuthModal()}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n    zIndex: 2100,\n  },\n  signInButton: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 8,\n  },\n  signInText: {\n    fontWeight: '600',\n  },\n  profileButton: {\n    padding: 8,\n    zIndex: 2100,\n  },\n  avatarImage: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n  },\n  menu: {\n    position: 'absolute',\n    top: '100%',\n    right: 0,\n    borderRadius: 8,\n    padding: 8,\n    minWidth: 240,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    borderWidth: 1,\n    zIndex: 2100,\n  },\n  userInfo: {\n    padding: 12,\n  },\n  userName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  userEmail: {\n    fontSize: 14,\n  },\n  menuDivider: {\n    height: 1,\n    marginVertical: 8,\n  },\n  menuItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n    gap: 8,\n  },\n  menuItemText: {\n    fontSize: 16,\n  },\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n    zIndex: 2200,\n  },\n  modalContent: {\n    width: '100%',\n    maxWidth: 600,\n    borderRadius: 12,\n    maxHeight: '90%',\n    overflow: 'hidden',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n    borderBottomWidth: 1,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n  },\n  modalBody: {\n    padding: spacing.LARGE,\n  },\n}); ","import React, { lazy, Suspense, useState, useEffect, useMemo } from 'react';\nimport { View, Text, StyleSheet, Pressable, Platform, useWindowDimensions, Alert } from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackParamList, RootStackNavigationProp } from '../types/navigation';\nimport { SearchBar } from '../components/SearchBar';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { TableSettings } from '../components/TableSettings';\nimport { useTheme } from '../theme/ThemeContext';\nimport { useFoils } from '../hooks/useFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { FilterOptions } from '../types/filters';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT, DEFAULT_COLUMNS, getTableWidth, getContentWidth, Column } from '../constants/layout';\nimport { loadColumns, loadFilters, saveFilters } from '../utils/storage';\nimport { UserMenu } from '../components/UserMenu';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useApp } from '../context/AppContext';\nimport { routes } from '../utils/routes';\nimport { getEnvironmentConfig } from '../config/environment';\nimport { generateFoilId } from '../utils/foilUtils';\n\n// Lazy load screens with proper suspense boundaries\nconst BrowseScreen = React.lazy(() => import('../screens/BrowseScreen'));\nconst ComparisonScreen = React.lazy(() => import('../screens/ComparisonScreen'));\nconst QuiverScreen = React.lazy(() => import('../screens/QuiverScreen'));\nconst PrivacyPolicy = React.lazy(() => import('../screens/legal/PrivacyPolicy'));\nconst TermsOfService = React.lazy(() => import('../screens/legal/TermsOfService'));\nconst Contact = React.lazy(() => import('../screens/legal/Contact'));\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nconst ICON_NAMES = {\n  home: 'home-outline' as const,\n  browse: 'search-outline' as const,\n  compare: 'git-compare-outline' as const,\n  settings: 'settings-outline' as const,\n};\n\nfunction TabBarIcon({ name, color }: { name: keyof typeof ICON_NAMES; color: string }) {\n  if (Platform.OS === 'web') {\n    // Use text alternatives for web\n    const webIcons: Record<keyof typeof ICON_NAMES, string> = {\n      home: '🏠',\n      browse: '🔍',\n      compare: '⚖️',\n      settings: '⚙️'\n    };\n    return <Text style={{ fontSize: 20, color }}>{webIcons[name]}</Text>;\n  }\n  return <Ionicons name={ICON_NAMES[name]} size={24} color={color} />;\n}\n\n// Define linking configuration for web\nconst linking = {\n  prefixes: [getEnvironmentConfig().webUrl],\n  config: {\n    screens: {\n      Browse: {\n        path: routes.browse,\n        parse: {\n          mode: (mode: string) => mode,\n        },\n      },\n      Comparison: routes.comparison,\n      Quiver: routes.quiver,\n      Terms: routes.terms,\n      Privacy: routes.privacy,\n      Contact: routes.contact,\n    },\n  },\n};\n\n// Screen wrapper with suspense and navigation props\nconst ScreenWrapper = ({ \n  children, \n  ...props \n}: { \n  children: React.ReactElement; \n  [key: string]: any;\n}) => (\n  <Suspense fallback={<LoadingIndicator />}>\n    {React.cloneElement(children, props)}\n  </Suspense>\n);\n\nexport const AppHeader = () => {\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { colors } = useTheme();\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const { foils } = useFoils();\n  const { \n    searchQuery, \n    setSearchQuery, \n    filters, \n    setFilters, \n    columns, \n    setColumns,\n    setCurrentScreen \n  } = useApp();\n  const { filterOptions } = useFilteredFoils(foils, filters);\n\n  // Calculate brands from foils\n  const brands = React.useMemo(() => {\n    if (!foils?.length) return [];\n    return [...new Set(foils.map(foil => foil.brand))].sort();\n  }, [foils]);\n\n  // Add missing function definitions\n  const handleLogoPress = () => {\n    navigation.navigate('Browse', {});\n  };\n\n  const handleSearch = (text: string) => {\n    setSearchQuery(text);\n    navigation.setParams({ searchQuery: text });\n  };\n\n  const getViewMode = (route: any) => {\n    if (route.name === 'Comparison') return 'comparison';\n    if (route.name === 'Quiver') return 'quiver';\n    return 'browse';\n  };\n\n  const getSearchPlaceholder = (route: any) => {\n    switch (route.name) {\n      case 'Comparison':\n        return 'Search foils to add to comparison...';\n      case 'Quiver':\n        return 'Search foils to add to quiver...';\n      default:\n        return 'Search foils...';\n    }\n  };\n\n  const handleSearchFocus = (route: any) => {\n    if (route.name === 'Browse') {\n      navigation.setParams({ showSearchDropdown: true });\n    }\n  };\n\n  const handleFilterChange = (type: keyof FilterOptions, value: string) => {\n    setFilters(prev => ({\n      ...prev,\n      [type]: prev[type].includes(value)\n        ? prev[type].filter(item => item !== value)\n        : [...prev[type], value]\n    }));\n  };\n\n  const handleFilterChangeWrapper = (type: string, value: string) => {\n    handleFilterChange(type as keyof FilterOptions, value);\n  };\n\n  const handleClearFilters = () => {\n    setFilters({\n      brands: [],\n      series: [],\n      type: []\n    });\n  };\n\n  const handleColumnVisibilityChange = (columnId: string) => {\n    setColumns(prev => \n      prev.map(col => \n        col.id === columnId ? { ...col, isVisible: !col.isVisible } : col\n      )\n    );\n  };\n\n  const handleResetColumns = () => {\n    setColumns(DEFAULT_COLUMNS);\n  };\n\n  // Calculate table width based on visible columns\n  const tableWidth = React.useMemo(() => getTableWidth(columns), [columns]);\n\n  // Calculate content width including padding\n  const contentWidth = React.useMemo(() => \n    getContentWidth(tableWidth, width, isMobile), \n    [tableWidth, width, isMobile]\n  );\n\n  // Calculate container width for header alignment\n  const containerWidth = React.useMemo(() => {\n    if (isMobile) {\n      return '100%';\n    }\n    // Match the table's container width exactly\n    return Math.min(tableWidth + (CONTAINER_PADDING * 2), width);\n  }, [tableWidth, width, isMobile]);\n\n  // Load saved column settings on mount\n  useEffect(() => {\n    const loadSavedColumnSettings = async () => {\n      try {\n        const savedColumns = await loadColumns();\n        if (savedColumns) {\n          const updatedColumns = DEFAULT_COLUMNS.map(col => ({\n            ...col,\n            isVisible: typeof savedColumns[col.id] === 'boolean' ? savedColumns[col.id] : col.isVisible\n          }));\n          setColumns(updatedColumns);\n        }\n      } catch (error) {\n        console.error('Error loading column settings:', error);\n      }\n    };\n\n    loadSavedColumnSettings();\n  }, []);\n\n  // Load saved filter settings on mount\n  useEffect(() => {\n    const loadSavedSettings = async () => {\n      try {\n        const savedFilters = await loadFilters();\n        if (savedFilters) {\n          setFilters({\n            brands: savedFilters.brands || [],\n            series: savedFilters.series || [],\n            type: savedFilters.types || []\n          });\n        }\n      } catch (error) {\n        console.error('Error loading filter settings:', error);\n      }\n    };\n\n    loadSavedSettings();\n  }, []);\n\n  const headerMainContainerStyle = React.useMemo(() => {\n    if (isMobile) {\n      return {\n        width: '100%' as const,\n        paddingHorizontal: CONTAINER_PADDING\n      };\n    }\n\n    // For web, match the table width exactly without additional padding\n    const containerWidth = getTableWidth(columns);\n    return {\n      width: containerWidth,\n      maxWidth: getContentWidth(containerWidth, width, false),\n      alignSelf: 'center' as const\n    };\n  }, [columns, width, isMobile]);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: colors.background.primary,\n        },\n        headerShadowVisible: false,\n      }}\n    >\n      <Stack.Screen \n        name=\"Browse\"\n        options={({ route }) => ({\n          headerTitle: route.params?.title || '',\n          headerLeft: () => (\n            <View style={[\n              styles.headerOuterContainer,\n              { backgroundColor: colors.background.primary },\n              !isMobile && { alignItems: 'center' }\n            ]}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <Pressable \n                    onPress={handleLogoPress}\n                    style={({ pressed }) => [\n                      styles.logoContainer,\n                      pressed && styles.logoPressed\n                    ]}\n                  >\n                    <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                  </Pressable>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  headerMainContainerStyle\n                ]}>\n                  <View style={[\n                    styles.headerContentWeb,\n                    { \n                      width: '100%',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }\n                  ]}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={[styles.searchBarContainerWeb, { flex: 1 }]}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    <TableSettings\n                      filterOptions={filterOptions}\n                      selectedBrands={filters.brands}\n                      selectedSeries={filters.series}\n                      selectedTypes={filters.type}\n                      onFilterChange={handleFilterChangeWrapper}\n                      onClearFilters={handleClearFilters}\n                      columns={columns}\n                      onColumnVisibilityChange={handleColumnVisibilityChange}\n                      onResetColumns={handleResetColumns}\n                      foils={foils}\n                    />\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n          headerRight: () => isMobile ? (\n            <View style={styles.headerRightContainerMobile}>\n              <View style={styles.searchBarContainerMobile}>\n                <SearchBar \n                  value={searchQuery}\n                  onChangeText={(text) => handleSearch(text)}\n                  onClear={() => handleSearch('')}\n                  mode={getViewMode(route)}\n                  placeholder={getSearchPlaceholder(route)}\n                  onFocus={() => handleSearchFocus(route)}\n                />\n              </View>\n              <TableSettings\n                filterOptions={filterOptions}\n                selectedBrands={filters.brands}\n                selectedSeries={filters.series}\n                selectedTypes={filters.type}\n                onFilterChange={handleFilterChangeWrapper}\n                onClearFilters={handleClearFilters}\n                columns={columns}\n                onColumnVisibilityChange={handleColumnVisibilityChange}\n                onResetColumns={handleResetColumns}\n                foils={foils}\n              />\n              <UserMenu />\n            </View>\n          ) : (\n            <View style={styles.headerRightContainerWeb}>\n              <UserMenu />\n            </View>\n          ),\n        })}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <BrowseScreen\n              {...props}\n              filters={filters}\n              onFilterChange={handleFilterChangeWrapper}\n              columns={columns}\n              brands={brands}\n            />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Comparison\"\n        options={({ route }) => ({\n          headerTitle: route.params?.title || '',\n          headerLeft: () => (\n            <View style={[\n              styles.headerOuterContainer,\n              { backgroundColor: colors.background.primary },\n              !isMobile && { alignItems: 'center' }\n            ]}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <Pressable \n                    onPress={handleLogoPress}\n                    style={({ pressed }) => [\n                      styles.logoContainer,\n                      pressed && styles.logoPressed\n                    ]}\n                  >\n                    <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                  </Pressable>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  headerMainContainerStyle\n                ]}>\n                  <View style={[\n                    styles.headerContentWeb,\n                    { \n                      width: '100%',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }\n                  ]}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={[styles.searchBarContainerWeb, { flex: 1 }]}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    <TableSettings\n                      filterOptions={filterOptions}\n                      selectedBrands={filters.brands}\n                      selectedSeries={filters.series}\n                      selectedTypes={filters.type}\n                      onFilterChange={handleFilterChangeWrapper}\n                      onClearFilters={handleClearFilters}\n                      columns={columns}\n                      onColumnVisibilityChange={handleColumnVisibilityChange}\n                      onResetColumns={handleResetColumns}\n                      foils={foils}\n                    />\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n          headerRight: () => isMobile ? (\n            <View style={styles.headerRightContainerMobile}>\n              <View style={styles.searchBarContainerMobile}>\n                <SearchBar \n                  value={searchQuery}\n                  onChangeText={(text) => handleSearch(text)}\n                  onClear={() => handleSearch('')}\n                  mode={getViewMode(route)}\n                  placeholder={getSearchPlaceholder(route)}\n                  onFocus={() => handleSearchFocus(route)}\n                />\n              </View>\n              <TableSettings\n                filterOptions={filterOptions}\n                selectedBrands={filters.brands}\n                selectedSeries={filters.series}\n                selectedTypes={filters.type}\n                onFilterChange={handleFilterChangeWrapper}\n                onClearFilters={handleClearFilters}\n                columns={columns}\n                onColumnVisibilityChange={handleColumnVisibilityChange}\n                onResetColumns={handleResetColumns}\n                foils={foils}\n              />\n              <UserMenu />\n            </View>\n          ) : (\n            <View style={styles.headerRightContainerWeb}>\n              <UserMenu />\n            </View>\n          ),\n        })}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <ComparisonScreen {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Quiver\"\n        options={({ route }) => ({\n          headerTitle: route.params?.quiverName || 'Quiver',\n          headerLeft: () => (\n            <View style={[\n              styles.headerOuterContainer,\n              { backgroundColor: colors.background.primary },\n              !isMobile && { alignItems: 'center' }\n            ]}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <Pressable \n                    onPress={handleLogoPress}\n                    style={({ pressed }) => [\n                      styles.logoContainer,\n                      pressed && styles.logoPressed\n                    ]}\n                  >\n                    <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                  </Pressable>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  headerMainContainerStyle\n                ]}>\n                  <View style={[\n                    styles.headerContentWeb,\n                    { \n                      width: '100%',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }\n                  ]}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={[styles.searchBarContainerWeb, { flex: 1 }]}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    <TableSettings\n                      filterOptions={filterOptions}\n                      selectedBrands={filters.brands}\n                      selectedSeries={filters.series}\n                      selectedTypes={filters.type}\n                      onFilterChange={handleFilterChangeWrapper}\n                      onClearFilters={handleClearFilters}\n                      columns={columns}\n                      onColumnVisibilityChange={handleColumnVisibilityChange}\n                      onResetColumns={handleResetColumns}\n                      foils={foils}\n                    />\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n          headerRight: () => isMobile ? (\n            <View style={styles.headerRightContainerMobile}>\n              <View style={styles.searchBarContainerMobile}>\n                <SearchBar \n                  value={searchQuery}\n                  onChangeText={(text) => handleSearch(text)}\n                  onClear={() => handleSearch('')}\n                  mode={getViewMode(route)}\n                  placeholder={getSearchPlaceholder(route)}\n                  onFocus={() => handleSearchFocus(route)}\n                />\n              </View>\n              <TableSettings\n                filterOptions={filterOptions}\n                selectedBrands={filters.brands}\n                selectedSeries={filters.series}\n                selectedTypes={filters.type}\n                onFilterChange={handleFilterChangeWrapper}\n                onClearFilters={handleClearFilters}\n                columns={columns}\n                onColumnVisibilityChange={handleColumnVisibilityChange}\n                onResetColumns={handleResetColumns}\n                foils={foils}\n              />\n              <UserMenu />\n            </View>\n          ) : (\n            <View style={styles.headerRightContainerWeb}>\n              <UserMenu />\n            </View>\n          ),\n        })}\n      >\n        {(props) => {\n          const currentQuiverFoils = React.useMemo(() => {\n            if (!props.route.params?.foil_ids || !Array.isArray(foils)) return [];\n            return foils.filter(f => {\n              if (!f) return false;\n              const foilId = generateFoilId(f);\n              return props.route.params.foil_ids.includes(foilId);\n            });\n          }, [props.route.params?.foil_ids, foils]);\n\n          return (\n            <ScreenWrapper>\n              <QuiverScreen {...props}\n                searchProps={{\n                  value: searchQuery,\n                  onChangeText: handleSearch,\n                  onClear: () => setSearchQuery(''),\n                  mode: 'quiver',\n                  placeholder: 'Search foils in quiver...'\n                }}\n                tableSettingsProps={{\n                  filterOptions,\n                  selectedBrands: filters.brands,\n                  selectedSeries: filters.series,\n                  selectedTypes: filters.type,\n                  onFilterChange: handleFilterChangeWrapper,\n                  onClearFilters: handleClearFilters,\n                  columns,\n                  onColumnVisibilityChange: handleColumnVisibilityChange,\n                  onResetColumns: handleResetColumns,\n                  foils: currentQuiverFoils\n                }}\n              />\n            </ScreenWrapper>\n          );\n        }}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Terms\"\n        options={{\n          headerShown: false,\n        }}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <TermsOfService {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Privacy\"\n        options={{\n          headerShown: false,\n        }}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <PrivacyPolicy {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Contact\"\n        options={{\n          headerShown: false,\n        }}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <Contact {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n    </Stack.Navigator>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerOuterContainer: {\n    flex: 1,\n    paddingHorizontal: CONTAINER_PADDING,\n  },\n  // Mobile Styles\n  headerMainContainerMobile: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n  },\n  headerRightContainerMobile: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    paddingRight: 12,\n    zIndex: 2000,\n  },\n  searchBarContainerMobile: {\n    width: 160,\n    height: 36,\n  },\n  // Web Styles\n  headerMainContainerWeb: {\n    height: 72,\n    width: '100%',\n  },\n  headerContentWeb: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 24,\n    height: '100%',\n    width: '100%',\n  },\n  searchBarContainerWeb: {\n    flex: 1,\n    height: 40,\n  },\n  // Common Styles\n  logoContainer: {\n    height: '100%',\n    justifyContent: 'center',\n    minWidth: 120,\n  },\n  logoPressed: {\n    opacity: 0.7,\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  headerRightContainerWeb: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n    paddingRight: CONTAINER_PADDING,\n    zIndex: 2000,\n  },\n}); ","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import React, { useRef } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNavigationContainerRef, LinkingOptions, getStateFromPath, getPathFromState } from '@react-navigation/native';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { ErrorBoundary } from './src/components/ErrorBoundary';\nimport { ThemeProvider } from './src/theme/ThemeContext';\nimport { AppProvider } from './src/context/AppContext';\nimport { LoadingIndicator } from './src/components/LoadingIndicator';\nimport { routes } from './src/utils/routes';\nimport { RootStackParamList } from './src/types/navigation';\nimport { getPrefixes } from './src/config/environment';\nimport { AppHeader } from './src/navigation/AppHeader';\nimport { Platform } from 'react-native';\n\nexport default function App() {\n  const navigationRef = createNavigationContainerRef<RootStackParamList>();\n  \n  const linking: LinkingOptions<RootStackParamList> = {\n    prefixes: getPrefixes(),\n    config: {\n      screens: {\n        Browse: {\n          path: '/',\n          parse: {\n            mode: (mode: string) => mode,\n          },\n          stringify: {\n            mode: (mode: string) => mode,\n          },\n        },\n        Comparison: {\n          path: '/comparison',\n          exact: true,\n          stringify: {\n            quiverName: (name: string) => name,\n            foils: (foils: any[]) => JSON.stringify(foils),\n          },\n        },\n        Quiver: {\n          path: '/quiver/:quiverId',\n          parse: {\n            quiverId: (id: string) => id,\n            quiverName: (name: string) => name,\n            foils: (foils: string) => foils ? JSON.parse(foils) : undefined,\n          },\n          stringify: {\n            quiverId: (id: string) => id,\n            quiverName: (name: string) => name,\n            foils: (foils: any[]) => JSON.stringify(foils),\n          },\n        },\n        Terms: '/terms',\n        Privacy: '/privacy',\n        Contact: '/contact',\n      },\n    },\n    getStateFromPath: (path, options) => {\n      // Handle direct navigation to comparison\n      if (path === '/comparison') {\n        return {\n          routes: [\n            {\n              name: 'Comparison',\n              params: {},\n            },\n          ],\n        };\n      }\n      return getStateFromPath(path, options);\n    },\n    getPathFromState: (state, config) => {\n      // Handle comparison route specially\n      if (state.routes[state.routes.length - 1].name === 'Comparison') {\n        return '/comparison';\n      }\n      const path = getPathFromState(state, config);\n      return path || '/';\n    },\n  };\n\n  return (\n    <ThemeProvider>\n      <AppProvider>\n        <HelmetProvider>\n          <ErrorBoundary>\n            <SafeAreaProvider>\n              <NavigationContainer \n                ref={navigationRef}\n                linking={linking}\n                fallback={<LoadingIndicator />}\n              >\n                <AppHeader />\n              </NavigationContainer>\n            </SafeAreaProvider>\n          </ErrorBoundary>\n        </HelmetProvider>\n      </AppProvider>\n    </ThemeProvider>\n  );\n} ","import React from 'react';\nimport { View, Text, ActivityIndicator, StyleSheet } from 'react-native';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\ninterface LoadingIndicatorProps {\n  message?: string;\n  size?: 'small' | 'large';\n  fullScreen?: boolean;\n}\n\nexport const LoadingIndicator: React.FC<LoadingIndicatorProps> = ({\n  message = 'Loading...',\n  size = 'large',\n  fullScreen = true,\n}) => {\n  const { colors } = useTheme();\n\n  return (\n    <View\n      style={[\n        styles.container,\n        fullScreen && styles.fullScreen,\n        { backgroundColor: colors.background.primary },\n      ]}\n    >\n      <ActivityIndicator size={size} color={colors.primary} />\n      {message && (\n        <Text style={[styles.message, { color: colors.text.secondary }]}>\n          {message}\n        </Text>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: spacing.LARGE,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fullScreen: {\n    flex: 1,\n  },\n  message: {\n    marginTop: spacing.MEDIUM,\n    fontSize: 16,\n    textAlign: 'center',\n  },\n}); ","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Modal,\n  TextInput,\n  ScrollView,\n  Alert,\n  Platform,\n  useWindowDimensions,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { useQuivers } from '../hooks/useQuivers';\nimport { BaseProduct } from '../types/scraper';\nimport { Quiver } from '../types/quiver';\nimport { useTheme } from '../theme/ThemeContext';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT } from '../constants/layout';\nimport { spacing } from '../theme/spacing';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { trackAction, ANALYTICS_EVENTS } from '../utils/analytics';\nimport { logger } from '../utils/logger';\n\ninterface QuiverManagerProps {\n  selectedFoils?: BaseProduct[];\n  onClose?: () => void;\n  initialTab?: 'save' | 'saved';\n  standalone?: boolean;\n  isModalVisible?: boolean;\n  hideStandaloneButton?: boolean;\n}\n\nexport const QuiverManager: React.FC<QuiverManagerProps> = ({\n  selectedFoils = [],\n  onClose,\n  initialTab = 'save',\n  standalone = false,\n  isModalVisible,\n  hideStandaloneButton = false,\n}) => {\n  const { colors } = useTheme();\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const navigation = useNavigation<RootStackNavigationProp>();\n\n  const [isModalVisibleInternal, setIsModalVisibleInternal] = useState(!standalone);\n  const modalVisible = isModalVisible !== undefined ? isModalVisible : isModalVisibleInternal;\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n  const [activeTab, setActiveTab] = useState<'save' | 'saved'>(initialTab);\n  const [editingQuiverId, setEditingQuiverId] = useState<string | null>(null);\n  const [editingName, setEditingName] = useState('');\n\n  const {\n    quivers,\n    isLoading,\n    error,\n    createQuiver,\n    deleteQuiver,\n    reloadQuivers,\n    updateQuiver\n  } = useQuivers();\n\n  const handleCreateQuiver = async () => {\n    if (!name.trim()) {\n      if (Platform.OS === 'web') {\n        window.alert('Please enter a name for your quiver');\n      } else {\n        Alert.alert('Error', 'Please enter a name for your quiver');\n      }\n      return;\n    }\n\n    try {\n      const result = await createQuiver({\n        name: name.trim(),\n        description: description.trim(),\n        foils: selectedFoils,\n        is_public: isPublic,\n      });\n\n      if (result) {\n        trackAction(ANALYTICS_EVENTS.SAVE_QUIVER, {\n          foilCount: selectedFoils.length,\n          isPublic,\n        });\n        \n        if (Platform.OS === 'web') {\n          window.alert('Quiver saved successfully');\n        } else {\n          Alert.alert('Success', 'Quiver saved successfully');\n        }\n        setName('');\n        setDescription('');\n        setIsPublic(false);\n        setIsModalVisibleInternal(false);\n        onClose?.();\n      } else {\n        throw new Error('Failed to create quiver - no result returned');\n      }\n    } catch (error) {\n      console.error('Error creating quiver:', error);\n      if (Platform.OS === 'web') {\n        window.alert(`Failed to save quiver: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      } else {\n        Alert.alert('Error', `Failed to save quiver: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    }\n  };\n\n  const handleDeleteQuiver = async (quiverId: string) => {\n    try {\n      const userConfirmed = await new Promise<boolean>((resolve) => {\n        Alert.alert(\n          'Delete Quiver',\n          'Are you sure you want to delete this quiver? This action cannot be undone.',\n          [\n            {\n              text: 'Cancel',\n              style: 'cancel',\n              onPress: () => resolve(false),\n            },\n            {\n              text: 'Delete',\n              style: 'destructive',\n              onPress: () => resolve(true),\n            },\n          ],\n          { cancelable: false }\n        );\n      });\n\n      if (!userConfirmed) return;\n\n      const success = await deleteQuiver(quiverId);\n      \n      if (success) {\n        trackAction(ANALYTICS_EVENTS.DELETE_QUIVER, {\n          quiverId,\n        });\n        Alert.alert('Success', 'Quiver deleted successfully');\n      } else {\n        Alert.alert('Error', 'Failed to delete quiver. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error deleting quiver:', error);\n      Alert.alert('Error', 'An unexpected error occurred. Please try again.');\n    }\n  };\n\n  const handleViewQuiver = (quiver: Quiver) => {\n    // Close the modal first\n    setIsModalVisibleInternal(false);\n    onClose?.();\n\n    // Navigate to Quiver screen with the quiver's data\n    navigation.navigate('Quiver', {\n        quiverId: quiver.id,\n        quiverName: quiver.name,\n        foil_ids: quiver.foil_ids || []\n    });\n  };\n\n  const handleStartRename = (quiver: Quiver) => {\n    setEditingQuiverId(quiver.id);\n    setEditingName(quiver.name);\n  };\n\n  const handleSaveRename = async () => {\n    if (!editingQuiverId || !editingName.trim()) return;\n\n    try {\n      const success = await updateQuiver(editingQuiverId, { name: editingName.trim() });\n      if (success) {\n        trackAction(ANALYTICS_EVENTS.UPDATE_QUIVER, {\n          quiverId: editingQuiverId,\n          action: 'rename',\n        });\n        \n        if (Platform.OS === 'web') {\n          window.alert('Quiver renamed successfully');\n        } else {\n          Alert.alert('Success', 'Quiver renamed successfully');\n        }\n        setEditingQuiverId(null);\n        setEditingName('');\n        reloadQuivers();\n      }\n    } catch (error) {\n      console.error('Error renaming quiver:', error);\n      Alert.alert('Error', 'Failed to rename quiver');\n    }\n  };\n\n  const getFoilCount = (quiver: Quiver) => {\n    if (quiver.foil_ids && Array.isArray(quiver.foil_ids)) {\n        return quiver.foil_ids.length;\n    }\n    return 0;\n  };\n\n  const renderQuiverList = () => {\n    if (isLoading) {\n      return (\n        <View style={styles.centerContent}>\n          <Text style={[styles.message, { color: colors.text.secondary }]}>\n            Loading quivers...\n          </Text>\n        </View>\n      );\n    }\n\n    if (error) {\n      return (\n        <View style={styles.centerContent}>\n          <Text style={[styles.message, { color: colors.error }]}>\n            {error}\n          </Text>\n        </View>\n      );\n    }\n\n    if (quivers.length === 0) {\n      return (\n        <View style={styles.centerContent}>\n          <Text style={[styles.message, { color: colors.text.secondary }]}>\n            No saved quivers yet\n          </Text>\n        </View>\n      );\n    }\n\n    return quivers.map((quiver) => {\n      return (\n        <View\n          key={quiver.id}\n          style={[\n            styles.quiverItem,\n            { borderBottomColor: colors.border }\n          ]}\n        >\n          <TouchableOpacity \n            style={styles.quiverInfo}\n            onPress={() => handleViewQuiver(quiver)}\n          >\n            {editingQuiverId === quiver.id ? (\n              <View style={styles.renameContainer}>\n                <TextInput\n                  style={[\n                    styles.renameInput,\n                    { \n                      color: colors.text.primary,\n                      borderColor: colors.border,\n                      backgroundColor: colors.background.secondary\n                    }\n                  ]}\n                  value={editingName}\n                  onChangeText={setEditingName}\n                  placeholder=\"Enter new name\"\n                  placeholderTextColor={colors.text.tertiary}\n                  autoFocus\n                />\n                <TouchableOpacity\n                  style={[styles.renameButton, { backgroundColor: colors.error }]}\n                  onPress={() => {\n                    setEditingQuiverId(null);\n                    setEditingName('');\n                  }}\n                >\n                  <Text style={[styles.renameButtonText, { color: colors.text.inverse }]}>Cancel</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={[styles.renameButton, { backgroundColor: colors.primary }]}\n                  onPress={handleSaveRename}\n                >\n                  <Text style={[styles.renameButtonText, { color: colors.text.inverse }]}>Save</Text>\n                </TouchableOpacity>\n              </View>\n            ) : (\n              <>\n                <View style={styles.quiverNameContainer}>\n                  <Text style={[styles.quiverName, { color: colors.text.primary }]}>\n                    {quiver.name}\n                  </Text>\n                  <TouchableOpacity\n                    onPress={() => handleStartRename(quiver)}\n                    style={styles.renameIcon}\n                  >\n                    {Platform.OS === 'web' ? (\n                      <Text style={{ color: colors.text.secondary }}>✎</Text>\n                    ) : (\n                      <Ionicons name=\"pencil\" size={16} color={colors.text.secondary} />\n                    )}\n                  </TouchableOpacity>\n                </View>\n                {quiver.description && (\n                  <Text style={[styles.quiverDescription, { color: colors.text.secondary }]}>\n                    {quiver.description}\n                  </Text>\n                )}\n                <Text style={[styles.quiverMeta, { color: colors.text.tertiary }]}>\n                  {getFoilCount(quiver)} foils • {new Date(quiver.updated_at).toLocaleDateString()}\n                  {quiver.is_public && ' • Public'}\n                </Text>\n              </>\n            )}\n          </TouchableOpacity>\n          {Platform.OS === 'web' ? (\n            <button\n              type=\"button\"\n              onClick={() => {\n                try {\n                  const confirmed = window.confirm('Are you sure you want to delete this quiver? This action cannot be undone.');\n                  if (confirmed) {\n                    deleteQuiver(quiver.id).then(success => {\n                      if (success) {\n                        reloadQuivers();\n                      } else {\n                        window.alert('Failed to delete quiver');\n                      }\n                    }).catch(error => {\n                      console.error('Delete error:', error);\n                      window.alert('Error deleting quiver');\n                    });\n                  }\n                } catch (error) {\n                  console.error('Delete error:', error);\n                  window.alert('Error in delete operation');\n                }\n              }}\n              style={{\n                padding: '8px',\n                borderWidth: '1px',\n                borderStyle: 'solid',\n                borderColor: colors.error,\n                borderRadius: '8px',\n                minWidth: '70px',\n                backgroundColor: colors.background.primary,\n                cursor: 'pointer',\n                color: colors.error,\n                fontWeight: '600',\n                fontSize: '14px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                zIndex: 10,\n                position: 'relative',\n                pointerEvents: 'auto',\n              }}\n            >\n              Delete\n            </button>\n          ) : (\n            <TouchableOpacity\n              style={[\n                styles.deleteButton, \n                { \n                  borderColor: colors.error,\n                  backgroundColor: colors.background.primary \n                }\n              ]}\n              onPress={() => {\n                console.log('=== Delete Button Click (Native) ===');\n                console.log('1. Button clicked for quiver:', quiver.id);\n                handleDeleteQuiver(quiver.id);\n              }}\n            >\n              <Ionicons name=\"trash-outline\" size={20} color={colors.error} />\n            </TouchableOpacity>\n          )}\n        </View>\n      );\n    });\n  };\n\n  const content = (\n    <>\n      <View style={[styles.modalHeader, { borderBottomColor: colors.border }]}>\n        <Text style={[styles.modalTitle, { color: colors.text.primary }]}>\n          Manage Quivers\n        </Text>\n        {onClose && (\n          <TouchableOpacity onPress={onClose}>\n            {Platform.OS === 'web' ? (\n              <Text style={{ fontSize: 24, color: colors.text.primary }}>×</Text>\n            ) : (\n              <Ionicons name=\"close\" size={24} color={colors.text.primary} />\n            )}\n          </TouchableOpacity>\n        )}\n      </View>\n\n      {selectedFoils.length > 0 && (\n        <View style={[styles.tabContainer, { borderBottomColor: colors.border }]}>\n          <TouchableOpacity\n            style={[\n              styles.tab,\n              activeTab === 'save' && [\n                styles.activeTab,\n                { borderBottomColor: colors.primary }\n              ]\n            ]}\n            onPress={() => setActiveTab('save')}\n          >\n            <Text\n              style={[\n                styles.tabText,\n                { color: activeTab === 'save' ? colors.primary : colors.text.secondary }\n              ]}\n            >\n              Save Quiver\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={[\n              styles.tab,\n              activeTab === 'saved' && [\n                styles.activeTab,\n                { borderBottomColor: colors.primary }\n              ]\n            ]}\n            onPress={() => setActiveTab('saved')}\n          >\n            <Text\n              style={[\n                styles.tabText,\n                { color: activeTab === 'saved' ? colors.primary : colors.text.secondary }\n              ]}\n            >\n              Saved Quivers\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n\n      <ScrollView style={styles.modalBody}>\n        {activeTab === 'save' && selectedFoils.length > 0 ? (\n          <View style={styles.form}>\n            <View style={styles.formField}>\n              <Text style={[styles.label, { color: colors.text.secondary }]}>\n                Name\n              </Text>\n              <TextInput\n                style={[\n                  styles.input,\n                  { \n                    color: colors.text.primary,\n                    borderColor: colors.border,\n                    backgroundColor: colors.background.secondary\n                  }\n                ]}\n                value={name}\n                onChangeText={setName}\n                placeholder=\"Enter quiver name\"\n                placeholderTextColor={colors.text.tertiary}\n              />\n            </View>\n\n            <View style={styles.formField}>\n              <Text style={[styles.label, { color: colors.text.secondary }]}>\n                Description (optional)\n              </Text>\n              <TextInput\n                style={[\n                  styles.input,\n                  styles.textArea,\n                  { \n                    color: colors.text.primary,\n                    borderColor: colors.border,\n                    backgroundColor: colors.background.secondary\n                  }\n                ]}\n                value={description}\n                onChangeText={setDescription}\n                placeholder=\"Enter description\"\n                placeholderTextColor={colors.text.tertiary}\n                multiline\n                numberOfLines={3}\n              />\n            </View>\n\n            <TouchableOpacity\n              style={styles.publicToggle}\n              onPress={() => setIsPublic(!isPublic)}\n            >\n              {Platform.OS === 'web' ? (\n                <Text style={{ \n                  fontSize: 24, \n                  color: isPublic ? colors.primary : colors.text.secondary,\n                  marginRight: 8\n                }}>\n                  {isPublic ? '☑' : '☐'}\n                </Text>\n              ) : (\n                <Ionicons\n                  name={isPublic ? 'checkbox' : 'square-outline'}\n                  size={24}\n                  color={isPublic ? colors.primary : colors.text.secondary}\n                />\n              )}\n              <Text style={[styles.publicToggleText, { color: colors.text.primary }]}>\n                Make this quiver public\n              </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              style={[\n                styles.createButton,\n                { backgroundColor: colors.primary }\n              ]}\n              onPress={handleCreateQuiver}\n            >\n              <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n                Save Quiver\n              </Text>\n            </TouchableOpacity>\n          </View>\n        ) : (\n          <View style={styles.quiverList}>\n            {renderQuiverList()}\n          </View>\n        )}\n      </ScrollView>\n    </>\n  );\n\n  if (standalone) {\n    return content;\n  }\n\n  return (\n    <>\n      {selectedFoils.length > 0 && !standalone && !isModalVisible && !hideStandaloneButton && (\n        <TouchableOpacity\n          style={[\n            styles.saveButton,\n            { backgroundColor: colors.primary }\n          ]}\n          onPress={() => setIsModalVisibleInternal(true)}\n        >\n          {Platform.OS === 'web' ? (\n            <Text style={{ fontSize: 20, color: colors.text.inverse, marginRight: 8 }}>+</Text>\n          ) : (\n            <Ionicons name=\"bookmark-outline\" size={20} color={colors.text.inverse} />\n          )}\n          <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n            Save Quiver\n          </Text>\n        </TouchableOpacity>\n      )}\n      <Modal\n        visible={modalVisible}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => {\n          setIsModalVisibleInternal(false);\n          onClose?.();\n        }}\n      >\n        <TouchableOpacity\n          style={[\n            styles.modalOverlay,\n            standalone && styles.standaloneOverlay\n          ]}\n          activeOpacity={1}\n          onPress={() => {\n            setIsModalVisibleInternal(false);\n            onClose?.();\n          }}\n        >\n          <TouchableOpacity\n            style={[\n              styles.modalContent,\n              { backgroundColor: colors.background.primary },\n              isMobile && styles.modalContentMobile\n            ]}\n            activeOpacity={1}\n            onPress={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          >\n            {content}\n          </TouchableOpacity>\n        </TouchableOpacity>\n      </Modal>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  saveButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    gap: 8,\n    minHeight: 40,\n    minWidth: 120,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n  buttonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    textAlign: 'center',\n    ...(Platform.OS === 'web' && {\n      userSelect: 'none',\n    }),\n  },\n  modalOverlay: {\n    position: 'absolute' as const,\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: CONTAINER_PADDING,\n    zIndex: 2000,\n    ...(Platform.OS === 'web' && {\n      position: 'absolute' as const,\n      pointerEvents: 'auto',\n    }),\n  },\n  modalContent: {\n    width: '100%',\n    maxWidth: 600,\n    borderRadius: 12,\n    maxHeight: '90%',\n    zIndex: 2001,\n    ...(Platform.OS === 'web' && {\n      pointerEvents: 'auto',\n      userSelect: 'none',\n    }),\n  },\n  modalContentMobile: {\n    maxWidth: '100%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n    borderBottomWidth: 1,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n  },\n  modalBody: {\n    flex: 1,\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: spacing.MEDIUM,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n  },\n  tabText: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  form: {\n    padding: spacing.LARGE,\n  },\n  formField: {\n    marginBottom: spacing.LARGE,\n  },\n  label: {\n    fontSize: 14,\n    marginBottom: spacing.SMALL,\n  },\n  input: {\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: spacing.MEDIUM,\n    fontSize: 16,\n    ...(Platform.OS === 'web' && {\n      outlineStyle: 'none',\n    }),\n  },\n  textArea: {\n    height: 80,\n    paddingTop: spacing.MEDIUM,\n    textAlignVertical: 'top',\n  },\n  publicToggle: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n    marginBottom: spacing.LARGE,\n  },\n  publicToggleText: {\n    fontSize: 16,\n  },\n  createButton: {\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  quiverList: {\n    padding: spacing.LARGE,\n  },\n  quiverItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: spacing.MEDIUM,\n    borderBottomWidth: 1,\n  },\n  quiverInfo: {\n    flex: 1,\n    marginRight: spacing.MEDIUM,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  quiverName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  quiverDescription: {\n    fontSize: 14,\n    marginBottom: 4,\n  },\n  quiverMeta: {\n    fontSize: 12,\n  },\n  deleteButton: {\n    padding: spacing.SMALL,\n    borderWidth: 1,\n    borderRadius: 8,\n    minWidth: Platform.OS === 'web' ? 70 : 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 10,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      position: 'relative',\n    }),\n  },\n  deleteIcon: {\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  centerContent: {\n    padding: spacing.LARGE,\n    alignItems: 'center',\n  },\n  message: {\n    fontSize: 16,\n  },\n  standaloneOverlay: {\n    position: 'relative',\n    backgroundColor: 'transparent',\n  },\n  renameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n  },\n  renameInput: {\n    flex: 1,\n    height: 32,\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: spacing.SMALL,\n    fontSize: 14,\n  },\n  renameButton: {\n    paddingHorizontal: spacing.MEDIUM,\n    paddingVertical: spacing.SMALL,\n    borderRadius: 4,\n  },\n  renameButtonText: {\n    fontSize: 12,\n    fontWeight: '500',\n  },\n  quiverNameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n  },\n  renameIcon: {\n    padding: spacing.SMALL,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n}); ","import { Platform } from 'react-native';\n\nexport type Environment = 'development' | 'staging' | 'production';\n\ninterface EnvironmentConfig {\n  apiUrl: string;\n  webUrl: string;\n  appScheme: string;\n}\n\nconst ENV: Environment = process.env.EXPO_PUBLIC_ENV as Environment || 'development';\n\nconst configs: Record<Environment, EnvironmentConfig> = {\n  development: {\n    apiUrl: 'http://localhost:3000',\n    webUrl: 'http://localhost:19006',\n    appScheme: 'foilquiver-dev',\n  },\n  staging: {\n    apiUrl: 'https://api.staging.foilquiver.com',\n    webUrl: 'https://staging.foilquiver.com',\n    appScheme: 'foilquiver-staging',\n  },\n  production: {\n    apiUrl: 'https://api.foilquiver.com',\n    webUrl: 'https://foilquiver.com',\n    appScheme: 'foilquiver',\n  },\n};\n\nexport const getEnvironmentConfig = (): EnvironmentConfig => {\n  return configs[ENV];\n};\n\nexport const getPrefixes = (): string[] => {\n  const config = getEnvironmentConfig();\n  if (Platform.OS === 'web') {\n    return [config.webUrl];\n  }\n  return [`${config.appScheme}://`];\n};\n\nexport const isProduction = () => ENV === 'production';\nexport const isDevelopment = () => ENV === 'development';\nexport const isStaging = () => ENV === 'staging'; ","// Layout constants\nexport const CONTAINER_PADDING = 16;\nexport const MAX_CONTENT_WIDTH = 1200;\nexport const MOBILE_BREAKPOINT = 768;\n\n// Column width constants\nexport const COLUMN_WIDTHS = {\n  brand: 100,\n  series: 120,\n  model: 150,\n  area: 80,\n  wingspan: 80,\n  aspectRatio: 80,\n  type: 80,\n  price: 105,\n  link: 80,\n} as const;\n\nexport type Column = {\n  id: keyof typeof COLUMN_WIDTHS;\n  label: string;\n  isVisible: boolean;\n};\n\n// Default column configuration\nexport const DEFAULT_COLUMNS: Column[] = [\n  { id: 'brand', label: 'Brand', isVisible: true },\n  { id: 'series', label: 'Series', isVisible: false },\n  { id: 'model', label: 'Model', isVisible: true },\n  { id: 'area', label: 'Area', isVisible: true },\n  { id: 'wingspan', label: 'Span', isVisible: true },\n  { id: 'aspectRatio', label: 'AR', isVisible: true },\n  { id: 'type', label: 'Type', isVisible: true },\n  { id: 'price', label: 'Price', isVisible: true },\n  { id: 'link', label: 'Link', isVisible: true },\n];\n\n// Helper functions for width calculations\nexport const getTableWidth = (columns: Column[]) => {\n  return columns.reduce((total, column) => {\n    if (column.isVisible) {\n      return total + (COLUMN_WIDTHS[column.id] || 100);\n    }\n    return total;\n  }, 0);\n};\n\nexport const getContentWidth = (tableWidth: number, screenWidth: number, isMobile: boolean) => {\n  if (isMobile) {\n    return screenWidth;\n  }\n  return Math.min(tableWidth, screenWidth - 48);\n}; ","import React, { createContext, useContext, useState, useEffect, Dispatch, SetStateAction } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\nimport { Column } from '../constants/layout';\nimport { loadColumns, loadFilters, saveFilters } from '../utils/storage';\nimport { DEFAULT_COLUMNS } from '../constants/layout';\n\ninterface AppContextType {\n  // Search state\n  searchQuery: string;\n  setSearchQuery: Dispatch<SetStateAction<string>>;\n  \n  // Filter state\n  filters: FilterOptions;\n  setFilters: Dispatch<SetStateAction<FilterOptions>>;\n  \n  // Column settings\n  columns: Column[];\n  setColumns: Dispatch<SetStateAction<Column[]>>;\n  \n  // Selected foils state\n  selectedFoils: BaseProduct[];\n  setSelectedFoils: Dispatch<SetStateAction<BaseProduct[]>>;\n  \n  // Navigation state\n  currentScreen: string | null;\n  setCurrentScreen: Dispatch<SetStateAction<string | null>>;\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nexport const AppProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  // Search state\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  // Filter state\n  const [filters, setFilters] = useState<FilterOptions>({\n    brands: [],\n    series: [],\n    type: []\n  });\n  \n  // Column settings\n  const [columns, setColumns] = useState<Column[]>(DEFAULT_COLUMNS);\n  \n  // Selected foils state\n  const [selectedFoils, setSelectedFoils] = useState<BaseProduct[]>([]);\n  \n  // Navigation state - initialize as null to prevent default routing\n  const [currentScreen, setCurrentScreen] = useState<string | null>(null);\n\n  // Load saved filters and columns on mount\n  useEffect(() => {\n    const loadSavedSettings = async () => {\n      try {\n        const savedFilters = await loadFilters();\n        if (savedFilters) {\n          setFilters({\n            brands: savedFilters.brands || [],\n            series: savedFilters.series || [],\n            type: savedFilters.types || []\n          });\n        }\n\n        const savedColumns = await loadColumns();\n        if (savedColumns && Array.isArray(savedColumns)) {\n          setColumns(savedColumns.map((col: Partial<Column>) => ({\n            ...DEFAULT_COLUMNS.find(defaultCol => defaultCol.id === col.id)!,\n            ...col\n          })));\n        }\n      } catch (error) {\n        console.error('Error loading saved settings:', error);\n      }\n    };\n\n    loadSavedSettings();\n  }, []);\n\n  // Save filters when they change\n  useEffect(() => {\n    saveFilters({\n      brands: filters.brands,\n      series: filters.series,\n      types: filters.type\n    });\n  }, [filters]);\n\n  const value = {\n    searchQuery,\n    setSearchQuery,\n    filters,\n    setFilters,\n    columns,\n    setColumns,\n    selectedFoils,\n    setSelectedFoils,\n    currentScreen,\n    setCurrentScreen,\n  };\n\n  return (\n    <AppContext.Provider value={value}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}; ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\nimport { groupFoilsByBrand, groupFoilsBySeries } from '../utils/dataTransform';\n\nexport function useFilteredFoils(foils: BaseProduct[], filters: FilterOptions) {\n  const filterOptions = useMemo(() => {\n    const brands = Array.from(new Set(foils.map(foil => foil.brand))).sort();\n    \n    // Group foils by brand\n    const foilsByBrand = groupFoilsByBrand(foils);\n    \n    // Get series based on selected brands\n    let availableSeries: string[] = [];\n    if (filters.brands.length === 0) {\n      // If no brands selected, show all series\n      availableSeries = Array.from(new Set(foils.map(foil => foil.series))).sort();\n    } else {\n      // If brands are selected, only show series from those brands\n      const filteredFoils = filters.brands.flatMap(brand => foilsByBrand[brand] || []);\n      availableSeries = Array.from(new Set(filteredFoils.map(foil => foil.series))).sort();\n    }\n\n    const types = ['front', 'tail'];\n\n    return { brands, series: availableSeries, types };\n  }, [foils, filters.brands]);\n\n  const filteredFoils = useMemo(() => {\n    return foils.filter(foil => {\n      const brandMatch = filters.brands.length === 0 || filters.brands.includes(foil.brand);\n      const seriesMatch = filters.series.length === 0 || filters.series.includes(foil.series);\n      const typeMatch = filters.type.length === 0 || filters.type.includes(foil.type);\n\n      return brandMatch && seriesMatch && typeMatch;\n    });\n  }, [foils, filters.brands, filters.series, filters.type]);\n\n  return {\n    filteredFoils,\n    filterOptions,\n  };\n} ","import { BaseProduct } from '../types/scraper';\n\nexport function formatMeasurement(value: number, unit: string): string {\n  return `${value}${unit}`;\n}\n\nexport function convertArea(cmSquared: number): number {\n  return Math.round(cmSquared * 0.155); // Convert to square inches\n}\n\nexport function calculateAspectRatio(wingspan: number, area: number): number {\n  return Math.round((wingspan * wingspan / area) * 100) / 100;\n}\n\nexport function groupFoilsByBrand(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.brand]) {\n      acc[foil.brand] = [];\n    }\n    acc[foil.brand].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function groupFoilsBySeries(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.series]) {\n      acc[foil.series] = [];\n    }\n    acc[foil.series].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function getUniqueValues(foils: BaseProduct[], key: keyof BaseProduct): string[] {\n  return Array.from(new Set(foils.map(foil => foil[key] as string))).sort();\n} ","import { BaseProduct } from '../types/scraper';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport class ProductService {\n  private static isWeb = Platform.OS === 'web';\n  private static DATA_PATH = '/data/foils.json';\n  private static CACHE_DIR = '.cache';\n\n  // Get base URL for data loading\n  private static getBaseUrl(): string {\n    if (process.env.NODE_ENV === 'development') {\n      return '';\n    }\n    return process.env.NODE_ENV === 'staging' \n      ? 'https://staging.foilquiver.com'\n      : 'https://foilquiver.com';\n  }\n\n  static async getAllProducts(): Promise<BaseProduct[]> {\n    try {\n      if (this.isWeb) {\n        const baseUrl = this.getBaseUrl();\n\n        // Try loading from data directory first\n        try {\n          const response = await fetch(`${baseUrl}${this.DATA_PATH}`);\n          if (response.ok) {\n            const products = await response.json();\n            console.log(`Loaded ${products.length} products from ${this.DATA_PATH}`);\n            return products;\n          } else {\n            console.warn(`Failed to load from ${this.DATA_PATH} (${response.status}), trying .cache directory...`);\n          }\n        } catch (error) {\n          console.warn(`Failed to load from ${this.DATA_PATH}, trying .cache directory...`, error);\n        }\n\n        // Try loading from .cache as fallback\n        try {\n          // Normalize brand names to match file names\n          const brands = ['armstrong', 'lift-foils', 'axis-foils', 'code-foils', 'kt-foils', 'uni-foil'];\n          const allProducts: BaseProduct[] = [];\n          \n          for (const brand of brands) {\n            try {\n              const response = await fetch(`${baseUrl}/${this.CACHE_DIR}/${brand}.json`);\n              if (response.ok) {\n                const products = await response.json();\n                console.log(`Loaded ${products.length} products for ${brand} from .cache`);\n                allProducts.push(...products);\n              }\n            } catch (error) {\n              console.warn(`No cache file found for ${brand}`);\n            }\n          }\n\n          if (allProducts.length > 0) {\n            return allProducts;\n          }\n        } catch (error) {\n          console.warn('Failed to load from .cache directory', error);\n        }\n      } else {\n        // For mobile, use AsyncStorage\n        const cached = await AsyncStorage.getItem('foils');\n        if (cached) {\n          const products = JSON.parse(cached);\n          console.log(`Loaded ${products.length} products from AsyncStorage`);\n          return products;\n        }\n      }\n    } catch (error) {\n      console.error('Error loading foils data:', error);\n    }\n    \n    console.warn('No foils data found in any location');\n    return [];\n  }\n} ","import { useState, useEffect } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { ProductService } from '../services/productService';\n\nexport function useFoils() {\n  const [foils, setFoils] = useState<BaseProduct[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadFoils = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const products = await ProductService.getAllProducts();\n      setFoils(products);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load foils');\n      console.error('Error loading foils:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadFoils();\n  }, []);\n\n  const refreshFoils = () => {\n    loadFoils();\n  };\n\n  return {\n    foils,\n    loading,\n    error,\n    refreshFoils\n  };\n} ","import { useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Platform } from 'react-native';\nimport { supabase } from '../utils/supabase';\nimport { Quiver, CreateQuiverInput, UpdateQuiverInput } from '../types/quiver';\nimport { BaseProduct } from '../types/scraper';\nimport { generateFoilId } from '../utils/foilUtils';\nimport { logger } from '../utils/logger';\nimport { Environment } from '../config/environment';\n\nconst STORAGE_KEYS = {\n  QUIVERS: '@foilquiver/quivers',\n} as const;\n\n// Get the current environment\nconst getEnvironment = (): 'dev' | 'staging' | 'prod' => {\n  if (process.env.NODE_ENV === 'development') return 'dev';\n  if (window.location.hostname.includes('staging')) return 'staging';\n  return 'prod';\n};\n\n// Get the table name for the current environment\nconst getTableName = () => {\n  const env = getEnvironment();\n  return `${env}_quivers`;\n};\n\n// Storage helper that works for both web and native\nconst storage = {\n  getItem: async (key: string): Promise<string | null> => {\n    if (Platform.OS === 'web') {\n      return localStorage.getItem(key);\n    }\n    return AsyncStorage.getItem(key);\n  },\n  setItem: async (key: string, value: string): Promise<void> => {\n    if (Platform.OS === 'web') {\n      localStorage.setItem(key, value);\n      return;\n    }\n    return AsyncStorage.setItem(key, value);\n  },\n  removeItem: async (key: string): Promise<void> => {\n    if (Platform.OS === 'web') {\n      localStorage.removeItem(key);\n      return;\n    }\n    return AsyncStorage.removeItem(key);\n  }\n};\n\n// Local interface for creating quivers\ninterface LocalCreateQuiverInput {\n    name: string;\n    description?: string;\n    foils: BaseProduct[];\n    is_public?: boolean;\n}\n\n// Local interface for syncing quivers\ninterface LocalQuiverData {\n    name: string;\n    description?: string;\n    foils: BaseProduct[];\n    is_public?: boolean;\n}\n\nconst ENV: Environment = process.env.EXPO_PUBLIC_ENV as Environment || 'development';\n\nexport const useQuivers = () => {\n  const [quivers, setQuivers] = useState<Quiver[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadQuivers = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const { data: { session } } = await supabase.auth.getSession();\n      \n      if (session?.user) {\n        const { data, error: supabaseError } = await supabase\n          .from(getTableName())\n          .select('*')\n          .eq('environment', getEnvironment())\n          .eq('user_id', session.user.id)\n          .order('updated_at', { ascending: false });\n\n        if (supabaseError) throw supabaseError;\n        setQuivers(data || []);\n      } else {\n        const storedQuivers = await storage.getItem(STORAGE_KEYS.QUIVERS);\n        if (storedQuivers) {\n          setQuivers(JSON.parse(storedQuivers));\n        } else {\n          setQuivers([]);\n        }\n      }\n    } catch (err) {\n      console.error('Error loading quivers:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load quivers');\n      setQuivers([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const createQuiver = async (input: LocalCreateQuiverInput): Promise<Quiver | null> => {\n    try {\n      setError(null);\n      const { data: { session } } = await supabase.auth.getSession();\n\n      if (session?.user) {\n        const tableName = getTableName();\n        const env = getEnvironment();\n\n        const foil_ids = input.foils.map(foil => generateFoilId(foil));\n\n        const insertData = {\n          name: input.name,\n          description: input.description || '',\n          user_id: session.user.id,\n          environment: env,\n          foil_ids,\n          is_public: input.is_public || false\n        };\n\n        const { error: insertError } = await supabase\n          .from(tableName)\n          .insert(insertData);\n\n        if (insertError) {\n          logger.error('Insert error:', {\n            message: insertError.message,\n            details: insertError.details,\n            hint: insertError.hint,\n            code: insertError.code\n          });\n          throw insertError;\n        }\n\n        const { data: newData, error: selectError } = await supabase\n          .from(tableName)\n          .select('*')\n          .eq('user_id', session.user.id)\n          .eq('name', input.name)\n          .order('created_at', { ascending: false })\n          .limit(1)\n          .single();\n\n        if (selectError) throw selectError;\n        if (!newData) throw new Error('Failed to retrieve created quiver');\n\n        const newQuiver = {\n          ...newData,\n          foils: input.foils\n        };\n\n        setQuivers(prev => [newQuiver, ...prev]);\n        return newQuiver;\n      } else {\n        const env = getEnvironment();\n        const foil_ids = input.foils.map(foil => generateFoilId(foil));\n        \n        const newQuiver: Quiver = {\n          id: crypto.randomUUID(),\n          user_id: '',\n          name: input.name,\n          description: input.description || '',\n          foil_ids,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n          is_public: input.is_public || false,\n          environment: env\n        };\n\n        const updatedQuivers = [newQuiver, ...quivers];\n        await storage.setItem(STORAGE_KEYS.QUIVERS, JSON.stringify(updatedQuivers));\n        setQuivers(updatedQuivers);\n        return newQuiver;\n      }\n    } catch (err) {\n      console.error('Error creating quiver:', err);\n      throw err;\n    }\n  };\n\n  const deleteQuiver = async (id: string): Promise<boolean> => {\n    try {\n      setError(null);\n      const { data: { session } } = await supabase.auth.getSession();\n\n      if (session?.user) {\n        const { error: supabaseError } = await supabase\n          .from(getTableName())\n          .delete()\n          .eq('id', id)\n          .eq('user_id', session.user.id)\n          .eq('environment', getEnvironment());\n\n        if (supabaseError) throw supabaseError;\n      }\n\n      const updatedQuivers = quivers.filter(quiver => quiver.id !== id);\n      setQuivers(updatedQuivers);\n\n      if (!session?.user) {\n        await storage.setItem(STORAGE_KEYS.QUIVERS, JSON.stringify(updatedQuivers));\n      }\n\n      return true;\n    } catch (err) {\n      console.error('Error deleting quiver:', err);\n      setError(err instanceof Error ? err.message : 'Failed to delete quiver');\n      return false;\n    }\n  };\n\n  // Update an existing quiver\n  const updateQuiver = async (quiverId: string, updates: UpdateQuiverInput) => {\n    setError(null);\n    try {\n      const { data: { session } } = await supabase.auth.getSession();\n      \n      if (session?.user) {\n        const { error } = await supabase\n          .from(getTableName())\n          .update(updates)\n          .eq('id', quiverId);\n\n        if (error) throw error;\n        await loadQuivers();\n        return true;\n      } else {\n        // Local storage update logic...\n      }\n    } catch (error) {\n      console.error('Error updating quiver:', error);\n      setError('Failed to update quiver');\n      return false;\n    }\n  };\n\n  // Sync storage quivers to Supabase when user logs in\n  const syncQuiversToSupabase = async () => {\n    try {\n      const { data: { session } } = await supabase.auth.getSession();\n      if (!session?.user) return;\n\n      const localQuivers = await storage.getItem(STORAGE_KEYS.QUIVERS);\n      if (!localQuivers) return;\n\n      const parsedQuivers: LocalQuiverData[] = JSON.parse(localQuivers);\n      const env = getEnvironment();\n      \n      // Insert all local quivers to Supabase\n      for (const quiver of parsedQuivers) {\n        const foil_ids = quiver.foils.map(foil => generateFoilId(foil));\n        const insertData = {\n          name: quiver.name,\n          description: quiver.description || '',\n          foil_ids,\n          is_public: quiver.is_public || false,\n          user_id: session.user.id,\n          environment: env\n        };\n        await supabase\n          .from(getTableName())\n          .insert([insertData]);\n      }\n\n      // Clear storage after successful sync\n      await storage.removeItem(STORAGE_KEYS.QUIVERS);\n      \n      // Reload quivers from Supabase\n      await loadQuivers();\n    } catch (err) {\n      console.error('Error syncing quivers:', err);\n    }\n  };\n\n  // Load quivers on mount and when auth state changes\n  useEffect(() => {\n    loadQuivers();\n\n    // Listen for auth state changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event) => {\n      if (event === 'SIGNED_IN') {\n        await syncQuiversToSupabase();\n      }\n      await loadQuivers();\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  return {\n    quivers,\n    isLoading,\n    error,\n    createQuiver,\n    updateQuiver,\n    deleteQuiver,\n    reloadQuivers: loadQuivers,\n  };\n}; ","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useColorScheme } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getColors, ThemeColors } from './colors';\n\ntype ThemeContextType = {\n  isDark: boolean;\n  colors: ThemeColors;\n  toggleTheme: () => void;\n};\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nconst THEME_STORAGE_KEY = '@foilquiver/theme';\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const systemColorScheme = useColorScheme();\n  const [isDark, setIsDark] = useState<boolean>(systemColorScheme === 'dark');\n\n  useEffect(() => {\n    // Load saved theme preference\n    const loadTheme = async () => {\n      try {\n        const savedTheme = await AsyncStorage.getItem(THEME_STORAGE_KEY);\n        if (savedTheme !== null) {\n          setIsDark(savedTheme === 'dark');\n        }\n      } catch (error) {\n        console.error('Error loading theme:', error);\n      }\n    };\n\n    loadTheme();\n  }, []);\n\n  const toggleTheme = async () => {\n    try {\n      const newTheme = !isDark;\n      setIsDark(newTheme);\n      await AsyncStorage.setItem(THEME_STORAGE_KEY, newTheme ? 'dark' : 'light');\n    } catch (error) {\n      console.error('Error saving theme:', error);\n    }\n  };\n\n  const colors = getColors(isDark ? 'dark' : 'light');\n\n  return (\n    <ThemeContext.Provider value={{ isDark, colors, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}; ","import { ColorSchemeName } from 'react-native';\n\nexport type ThemeColors = {\n  background: {\n    primary: string;\n    secondary: string;\n    tertiary: string;\n  };\n  text: {\n    primary: string;\n    secondary: string;\n    tertiary: string;\n    inverse: string;\n  };\n  border: string;\n  primary: string;\n  error: string;\n  success: string;\n  warning: string;\n};\n\n// Sunset theme colors (accent colors)\nconst SPACE_CADET = '#1F214D';\nconst EMINENCE = '#50366F';\nconst MAGENTA_DYE = '#BF3475';\nconst BURNT_SIENNA = '#EE6C45';\nconst SUNGLOW = '#FFCE61';\n\n// Neutral colors for text and backgrounds\nconst NEUTRAL = {\n  50: '#F9FAFB',\n  100: '#F3F4F6',\n  200: '#E5E7EB',\n  300: '#D1D5DB',\n  400: '#9CA3AF',\n  500: '#6B7280',\n  600: '#4B5563',\n  700: '#374151',\n  800: '#1F2937',\n  900: '#111827',\n};\n\nconst lightColors: ThemeColors = {\n  background: {\n    primary: NEUTRAL[50],\n    secondary: NEUTRAL[100],\n    tertiary: NEUTRAL[200],\n  },\n  text: {\n    primary: NEUTRAL[900],\n    secondary: NEUTRAL[700],\n    tertiary: NEUTRAL[500],\n    inverse: NEUTRAL[50],\n  },\n  border: NEUTRAL[200],\n  primary: MAGENTA_DYE,\n  error: '#DC2626',\n  success: '#059669',\n  warning: SUNGLOW,\n};\n\nconst darkColors: ThemeColors = {\n  background: {\n    primary: NEUTRAL[900],\n    secondary: NEUTRAL[800],\n    tertiary: NEUTRAL[700],\n  },\n  text: {\n    primary: NEUTRAL[50],\n    secondary: NEUTRAL[200],\n    tertiary: NEUTRAL[400],\n    inverse: NEUTRAL[900],\n  },\n  border: NEUTRAL[700],\n  primary: MAGENTA_DYE,\n  error: '#EF4444',\n  success: '#10B981',\n  warning: SUNGLOW,\n};\n\nexport const getColors = (colorScheme: ColorSchemeName): ThemeColors => {\n  return colorScheme === 'dark' ? darkColors : lightColors;\n};\n\n// For backward compatibility\nexport const colors = lightColors; \n\n","export const spacing = {\n  XSMALL: 4,\n  SMALL: 8,\n  MEDIUM: 12,\n  LARGE: 16,\n  XLARGE: 24,\n  XXLARGE: 32,\n  \n  // Component-specific spacing\n  CONTAINER_PADDING: 24,\n  BUTTON_PADDING_H: 16,\n  BUTTON_PADDING_V: 8,\n  BUTTON_GAP: 12,\n  CONTROLS_BOTTOM: 24,\n} as const; ","import { Platform } from 'react-native';\n\ninterface PlausibleEvent {\n  name: string;\n  props?: Record<string, string | number | boolean>;\n}\n\ndeclare global {\n  interface Window {\n    plausible?: (eventName: string, options?: { props: Record<string, any> }) => void;\n  }\n}\n\nexport const trackEvent = (event: PlausibleEvent) => {\n  if (Platform.OS === 'web' && window.plausible) {\n    window.plausible(event.name, event.props ? { props: event.props } : undefined);\n  }\n};\n\nexport const trackPageView = (screenName: string, props?: Record<string, any>) => {\n  trackEvent({\n    name: 'pageview',\n    props: {\n      page: screenName,\n      ...props\n    }\n  });\n};\n\nexport const trackAction = (action: string, props?: Record<string, any>) => {\n  trackEvent({\n    name: action,\n    props\n  });\n};\n\n// Common analytics events\nexport const ANALYTICS_EVENTS = {\n  // Page views\n  VIEW_COMPARISON: 'view_comparison',\n  VIEW_QUIVER: 'view_quiver',\n  \n  // Actions\n  COMPARE_FOILS: 'compare_foils',\n  SAVE_QUIVER: 'save_quiver',\n  DELETE_QUIVER: 'delete_quiver',\n  UPDATE_QUIVER: 'update_quiver',\n  FILTER_FOILS: 'filter_foils',\n  SORT_FOILS: 'sort_foils',\n  SEARCH_FOILS: 'search_foils',\n} as const; ","export const generateFoilId = (foil: BaseProduct): string => {\n  return `${foil.brand.toLowerCase()}-${foil.model.toLowerCase().replace(/\\s+/g, '-')}`;\n}; ","type LogLevel = 'debug' | 'info' | 'warn' | 'error';\n\nclass Logger {\n  private static instance: Logger;\n  private isDevelopment = process.env.NODE_ENV === 'development' || __DEV__;\n\n  private constructor() {\n    // Log environment status on initialization\n    if (this.isDevelopment) {\n      console.info('[Logger] Initialized in development mode');\n      console.info('[Logger] Environment:', process.env.NODE_ENV);\n    }\n  }\n\n  static getInstance(): Logger {\n    if (!Logger.instance) {\n      Logger.instance = new Logger();\n    }\n    return Logger.instance;\n  }\n\n  private log(level: LogLevel, message: string, ...args: any[]) {\n    // Always log errors, only log other levels in development\n    if (this.isDevelopment || level === 'error') {\n      const timestamp = new Date().toISOString();\n      const formattedMessage = `[${timestamp}] [${level.toUpperCase()}] ${message}`;\n      \n      switch (level) {\n        case 'debug':\n          console.debug(formattedMessage, ...args);\n          break;\n        case 'info':\n          console.info(formattedMessage, ...args);\n          break;\n        case 'warn':\n          console.warn(formattedMessage, ...args);\n          break;\n        case 'error':\n          console.error(formattedMessage, ...args);\n          break;\n      }\n    }\n  }\n\n  debug(message: string, ...args: any[]) {\n    this.log('debug', message, ...args);\n  }\n\n  info(message: string, ...args: any[]) {\n    this.log('info', message, ...args);\n  }\n\n  warn(message: string, ...args: any[]) {\n    this.log('warn', message, ...args);\n  }\n\n  error(message: string, ...args: any[]) {\n    this.log('error', message, ...args);\n  }\n}\n\nexport const logger = Logger.getInstance(); ","export const routes = {\n  browse: '/',\n  comparison: '/comparison',\n  quiver: '/quiver/:quiverId',\n  terms: '/terms',\n  privacy: '/privacy',\n  contact: '/contact',\n} as const;\n\n// Add a helper function to clean routes for navigation\nexport const cleanRoute = (route: string) => route.slice(1); // Remove leading slash \n\nexport const getRouteFromPath = (path: string) => {\n  return path.startsWith('/') ? path : `/${path}`;\n}; ","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { logger } from './logger';\nimport { FilterOptions } from '../types/filters';\nimport { SortField } from '../hooks/useSortedFoils';\n\nconst STORAGE_KEYS = {\n  FILTERS: '@foilquiver/filters',\n  COLUMNS: '@foilquiver/columns',\n  THEME: '@foilquiver/theme',\n  SORT: '@foilquiver/sort',\n} as const;\n\nexport interface StoredFilters {\n  brands: string[];\n  series: string[];\n  types: string[];\n}\n\nexport interface StoredColumns {\n  [key: string]: boolean;\n}\n\nexport interface StoredSort {\n  field: SortField;\n  ascending: boolean;\n}\n\nclass Storage {\n  async set(key: string, value: any): Promise<void> {\n    try {\n      const jsonValue = JSON.stringify(value);\n      await AsyncStorage.setItem(key, jsonValue);\n    } catch (error) {\n      logger.error('Error setting storage item:', error);\n      throw error;\n    }\n  }\n\n  async get<T>(key: string): Promise<T | null> {\n    try {\n      const jsonValue = await AsyncStorage.getItem(key);\n      return jsonValue != null ? JSON.parse(jsonValue) : null;\n    } catch (error) {\n      logger.error('Error getting storage item:', error);\n      throw error;\n    }\n  }\n\n  async remove(key: string): Promise<void> {\n    try {\n      await AsyncStorage.removeItem(key);\n    } catch (error) {\n      logger.error('Error removing storage item:', error);\n      throw error;\n    }\n  }\n\n  async clear(): Promise<void> {\n    try {\n      await AsyncStorage.clear();\n    } catch (error) {\n      logger.error('Error clearing storage:', error);\n      throw error;\n    }\n  }\n\n  async getAllKeys(): Promise<readonly string[]> {\n    try {\n      return await AsyncStorage.getAllKeys();\n    } catch (error) {\n      logger.error('Error getting all storage keys:', error);\n      throw error;\n    }\n  }\n}\n\nexport const storage = new Storage();\n\nexport const saveFilters = async (filters: StoredFilters) => {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEYS.FILTERS, JSON.stringify(filters));\n  } catch (error) {\n    console.error('Error saving filters:', error);\n  }\n};\n\nexport const loadFilters = async (): Promise<StoredFilters | null> => {\n  try {\n    const savedFilters = await AsyncStorage.getItem(STORAGE_KEYS.FILTERS);\n    return savedFilters ? JSON.parse(savedFilters) : null;\n  } catch (error) {\n    console.error('Error loading filters:', error);\n    return null;\n  }\n};\n\nexport const saveColumns = async (columns: StoredColumns) => {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEYS.COLUMNS, JSON.stringify(columns));\n  } catch (error) {\n    console.error('Error saving columns:', error);\n  }\n};\n\nexport const loadColumns = async (): Promise<StoredColumns | null> => {\n  try {\n    const savedColumns = await AsyncStorage.getItem(STORAGE_KEYS.COLUMNS);\n    return savedColumns ? JSON.parse(savedColumns) : null;\n  } catch (error) {\n    console.error('Error loading columns:', error);\n    return null;\n  }\n};\n\nexport const saveSortOption = async (sort: StoredSort) => {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEYS.SORT, JSON.stringify(sort));\n  } catch (error) {\n    console.error('Error saving sort option:', error);\n  }\n};\n\nexport const loadSortOption = async (): Promise<StoredSort | null> => {\n  try {\n    const savedSort = await AsyncStorage.getItem(STORAGE_KEYS.SORT);\n    return savedSort ? JSON.parse(savedSort) : null;\n  } catch (error) {\n    console.error('Error loading sort option:', error);\n    return null;\n  }\n};\n\nexport const clearAllSettings = async () => {\n  try {\n    const keys = Object.values(STORAGE_KEYS);\n    await AsyncStorage.multiRemove(keys);\n  } catch (error) {\n    console.error('Error clearing settings:', error);\n  }\n}; ","// Supabase Configuration\nexport const SUPABASE_URL = 'https://zhylhvuhhoialsgqrxxr.supabase.co';\nexport const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpoeWxodnVoaG9pYWxzZ3FyeHhyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzkxNjM3NTgsImV4cCI6MjA1NDczOTc1OH0.wrZ05wA3EcbBubG3Mrxmx--fA9ThE2_M9k9WYTmGpag';\n\n// Google OAuth Configuration\nexport const GOOGLE_CLIENT_ID = '159399186219-fagq1jdgjps8q6fq70e9ua8pnmjac7bs.apps.googleusercontent.com'; ","import { createClient } from '@supabase/supabase-js';\nimport { Platform } from 'react-native';\nimport { SUPABASE_URL, SUPABASE_ANON_KEY } from '../config/env';\n\n// Get the site URL based on the environment\nconst getSiteUrl = () => {\n  if (Platform.OS !== 'web') return undefined;\n  \n  const hostname = window.location.hostname;\n  if (hostname === 'localhost' || hostname.includes('127.0.0.1')) {\n    return 'http://localhost:19006';\n  }\n  return window.location.origin;\n};\n\n// Initialize the Supabase client\nexport const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {\n  auth: {\n    detectSessionInUrl: Platform.OS === 'web',\n    flowType: 'pkce',\n    autoRefreshToken: true,\n    persistSession: true,\n  },\n}); "],"names":["ErrorBoundary","React","constructor","props","super","this","state","hasError","error","getDerivedStateFromError","componentDidCatch","errorInfo","handleRetry","setState","render","_jsx","ErrorView","onRetry","children","colors","useTheme","View","style","styles","container","backgroundColor","background","primary","_jsxs","content","Text","title","color","message","text","secondary","TouchableOpacity","button","onPress","buttonText","inverse","__DEV__","StyleSheet","create","flex","alignItems","justifyContent","padding","spacing","LARGE","maxWidth","width","fontSize","fontWeight","marginBottom","MEDIUM","textAlign","Object","assign","paddingHorizontal","paddingVertical","borderRadius","Platform","OS","cursor","stack","fontFamily","marginTop","SearchBar","value","onChangeText","onClear","placeholder","autoFocus","mode","onFocus","searchIcon","Ionicons","name","size","TextInput","input","getPlaceholder","placeholderTextColor","tertiary","autoCapitalize","autoCorrect","clearButtonMode","returnKeyType","maxFontSizeMultiplier","spellCheck","autoComplete","keyboardType","clearButton","clearIcon","flexDirection","height","gap","SMALL","outlineStyle","border","lineHeight","aspectRatio","TableSettings","filterOptions","selectedBrands","selectedSeries","selectedTypes","onFilterChange","onClearFilters","columns","onColumnVisibilityChange","onResetColumns","foils","isOpen","setIsOpen","useState","activeTab","setActiveTab","isDark","toggleTheme","useEffect","async","savedFilters","loadFilters","brands","forEach","brand","series","types","type","savedColumns","loadColumns","currentColumns","fromEntries","map","col","id","isVisible","entries","columnId","loadSavedSettings","filters","saveFilters","saveFilterSettings","columnSettings","column","saveColumns","saveColumnSettings","availableSeries","useMemo","length","seriesSet","Set","foil","includes","add","Array","from","sort","_Fragment","Pressable","iconButton","MaterialIcons","Modal","visible","transparent","animationType","onRequestClose","modalOverlay","modalContent","e","stopPropagation","modalHeader","borderBottomColor","modalTitle","closeButton","tabs","tab","tabText","activeTabText","some","contentWrapper","ScrollView","scrollView","contentContainerStyle","scrollContent","headerWithAction","contentTitle","clearButtonText","section","sectionTitle","chipContainer","chip","chipSelected","chipText","chipTextSelected","noSeriesText","themeSection","themeToggle","themeToggleContent","themeToggleText","columnList","columnItem","handleColumnVisibilityChange","columnLabel","label","checkbox","borderColor","checkboxChecked","position","XSMALL","buttonGroup","columnGroup","filterGroup","filterList","borderBottomWidth","flexGrow","flexWrap","borderWidth","useGoogleAuth","isLoading","setIsLoading","signInWithGoogle","data","Error","redirectTo","getRedirectUrl","origin","window","location","hostname","supabase","auth","signInWithOAuth","provider","options","queryParams","access_type","prompt","GoogleSignIn","onSuccess","Alert","alert","AuthError","disabled","ActivityIndicator","icon","minWidth","marginRight","QuiversMenu","quivers","useQuivers","menuItemContent","menuItemText","UserMenu","isMenuVisible","setIsMenuVisible","session","setSession","user","setUser","isAuthModalVisible","setIsAuthModalVisible","isQuiversModalVisible","setIsQuiversModalVisible","getSession","then","subscription","onAuthStateChange","_event","unsubscribe","renderAuthModal","activeOpacity","onStartShouldSetResponder","profileButton","user_metadata","avatar_url","Image","source","uri","avatarImage","menu","userInfo","userName","full_name","email","userEmail","menuDivider","menuItem","signOut","QuiverManager","selectedFoils","onClose","initialTab","standalone","signInButton","signInText","zIndex","top","right","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginVertical","left","bottom","maxHeight","overflow","modalBody","BrowseScreen","ComparisonScreen","QuiverScreen","PrivacyPolicy","TermsOfService","Contact","Stack","createNativeStackNavigator","getEnvironmentConfig","webUrl","routes","browse","comparison","quiver","terms","privacy","contact","ScreenWrapper","_ref","_objectWithoutPropertiesLoose","_excluded","Suspense","fallback","LoadingIndicator","AppHeader","navigation","useNavigation","useWindowDimensions","isMobile","MOBILE_BREAKPOINT","useFoils","searchQuery","setSearchQuery","setFilters","setColumns","setCurrentScreen","useApp","useFilteredFoils","handleLogoPress","navigate","handleSearch","setParams","getViewMode","route","getSearchPlaceholder","handleSearchFocus","showSearchDropdown","handleFilterChangeWrapper","handleFilterChange","prev","filter","item","handleClearFilters","handleResetColumns","DEFAULT_COLUMNS","tableWidth","getTableWidth","getContentWidth","Math","min","CONTAINER_PADDING","updatedColumns","loadSavedColumnSettings","headerMainContainerStyle","containerWidth","alignSelf","Navigator","screenOptions","headerStyle","headerShadowVisible","Screen","headerTitle","params","headerLeft","headerOuterContainer","headerMainContainerMobile","pressed","logoContainer","logoPressed","headerMainContainerWeb","headerContentWeb","searchBarContainerWeb","headerRight","headerRightContainerMobile","searchBarContainerMobile","headerRightContainerWeb","quiverName","currentQuiverFoils","foil_ids","isArray","f","foilId","generateFoilId","searchProps","tableSettingsProps","headerShown","paddingRight","opacity","registerRootComponent","navigationRef","createNavigationContainerRef","linking","prefixes","getPrefixes","config","screens","Browse","path","parse","stringify","Comparison","exact","JSON","Quiver","quiverId","undefined","Terms","Privacy","getStateFromPath","getPathFromState","ThemeProvider","AppProvider","HelmetProvider","SafeAreaProvider","NavigationContainer","ref","fullScreen","isModalVisible","hideStandaloneButton","isModalVisibleInternal","setIsModalVisibleInternal","modalVisible","setName","description","setDescription","isPublic","setIsPublic","editingQuiverId","setEditingQuiverId","editingName","setEditingName","createQuiver","deleteQuiver","reloadQuivers","updateQuiver","handleSaveRename","trim","trackAction","ANALYTICS_EVENTS","UPDATE_QUIVER","action","getFoilCount","tabContainer","form","formField","textArea","multiline","numberOfLines","publicToggle","publicToggleText","createButton","is_public","SAVE_QUIVER","foilCount","quiverList","centerContent","quiverItem","quiverInfo","handleViewQuiver","renameContainer","renameInput","renameButton","renameButtonText","quiverNameContainer","handleStartRename","renameIcon","quiverDescription","quiverMeta","Date","updated_at","toLocaleDateString","onClick","confirm","success","catch","borderStyle","display","pointerEvents","deleteButton","Promise","resolve","cancelable","DELETE_QUIVER","handleDeleteQuiver","saveButton","standaloneOverlay","modalContentMobile","preventDefault","minHeight","userSelect","boxShadow","paddingTop","textAlignVertical","deleteIcon","ENV","process","EXPO_PUBLIC_ENV","configs","development","apiUrl","appScheme","staging","production","COLUMN_WIDTHS","model","area","wingspan","price","link","reduce","total","screenWidth","AppContext","createContext","setSelectedFoils","currentScreen","find","defaultCol","Provider","context","useContext","foilsByBrand","acc","push","groupFoilsByBrand","filteredFoils","flatMap","brandMatch","seriesMatch","typeMatch","ProductService","_createClass","_classCallCheck","key","_getAllProducts","_asyncToGenerator","isWeb","baseUrl","getBaseUrl","response","fetch","DATA_PATH","ok","json","allProducts","CACHE_DIR","products","apply","_toConsumableArray","cached","AsyncStorage","getItem","arguments","_useState","_useState2","_slicedToArray","setFoils","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setError","loadFoils","getAllProducts","err","refreshFoils","STORAGE_KEYS","getEnvironment","getTableName","storage","localStorage","setItem","removeItem","setQuivers","loadQuivers","supabaseError","select","eq","order","ascending","storedQuivers","event","localQuivers","parsedQuivers","env","insertData","user_id","environment","insert","syncQuiversToSupabase","tableName","insertError","logger","details","hint","code","newData","selectError","limit","single","newQuiver","crypto","randomUUID","created_at","toISOString","updatedQuivers","updates","update","delete","ThemeContext","THEME_STORAGE_KEY","systemColorScheme","useColorScheme","setIsDark","savedTheme","loadTheme","getColors","newTheme","MAGENTA_DYE","SUNGLOW","NEUTRAL","lightColors","warning","darkColors","colorScheme","XLARGE","XXLARGE","BUTTON_PADDING_H","BUTTON_PADDING_V","BUTTON_GAP","CONTROLS_BOTTOM","trackEvent","plausible","trackPageView","screenName","page","VIEW_COMPARISON","VIEW_QUIVER","COMPARE_FOILS","FILTER_FOILS","SORT_FOILS","SEARCH_FOILS","toLowerCase","replace","Logger","isDevelopment","getInstance","instance","log","level","args","toUpperCase","debug","info","warn","FILTERS","COLUMNS","THEME","SORT","set","jsonValue","get","remove","clear","getAllKeys","saveSortOption","loadSortOption","savedSort","createClient","detectSessionInUrl","flowType","autoRefreshToken","persistSession"],"sourceRoot":""}