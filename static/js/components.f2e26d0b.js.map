{"version":3,"file":"static/js/components.f2e26d0b.js","mappings":"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","sources":["src/components/ComparisonControls.tsx","src/components/ComparisonView.tsx","src/components/ErrorBoundary.tsx","src/components/FilterControls.tsx","src/components/FoilsTable.tsx","src/components/Footer.tsx","src/components/LoadingIndicator.tsx","src/components/SEOHead.tsx","src/components/SearchBar.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../constants/spacing';\nimport { colors } from '../theme/colors';\n\ninterface ComparisonControlsProps {\n  selectedFoils: BaseProduct[];\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  onClearSelection: () => void;\n  isComparisonView?: boolean;\n}\n\nconst WebWrapper = Platform.select({\n  web: ({ children }: { children: React.ReactNode }) => (\n    <div style={{\n      position: 'fixed',\n      bottom: 50,\n      left: 0,\n      right: 0,\n      zIndex: 1000,\n      pointerEvents: 'none',\n    }}>\n      <div style={{ pointerEvents: 'auto', display: 'flex', justifyContent: 'flex-end', paddingRight: spacing.LARGE }}>\n        {children}\n      </div>\n    </div>\n  ),\n  default: ({ children }: { children: React.ReactNode }) => <>{children}</>,\n});\n\nconst ComparisonControls = ({ selectedFoils, onCompareSelected, onExitCompare, onClearSelection, isComparisonView }: ComparisonControlsProps) => {\n  // Only show controls if there are selected foils or we're in comparison view\n  if (selectedFoils.length === 0 && !isComparisonView) {\n    return null;\n  }\n\n  const content = !isComparisonView ? (\n    <View style={styles.comparisonBar}>\n      <Text style={styles.selectionText}>\n        Selected: {selectedFoils.length}\n      </Text>\n      <View style={styles.buttonGroup}>\n        <Pressable\n          style={[styles.button, styles.clearButton]}\n          onPress={onClearSelection}\n        >\n          <Text style={styles.buttonText}>Clear</Text>\n        </Pressable>\n        <Pressable\n          style={[styles.button, selectedFoils.length < 2 && styles.buttonDisabled]}\n          onPress={onCompareSelected}\n          disabled={selectedFoils.length < 2}\n        >\n          <Text style={styles.buttonText}>Compare</Text>\n        </Pressable>\n      </View>\n    </View>\n  ) : (\n    <View style={styles.comparisonBar}>\n      <Pressable\n        style={[styles.button, styles.cancelButton]}\n        onPress={onExitCompare}\n      >\n        <Text style={styles.buttonText}>Back</Text>\n      </Pressable>\n    </View>\n  );\n\n  return Platform.OS === 'web' ? (\n    <WebWrapper>{content}</WebWrapper>\n  ) : (\n    <View style={styles.container}>\n      {content}\n    </View>\n  );\n};\n\nexport default ComparisonControls;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: colors.background.secondary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n  },\n  comparisonBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  floatingButton: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonDisabled: {\n    backgroundColor: '#ccc',\n  },\n  clearButton: {\n    backgroundColor: colors.background.primary,\n    borderWidth: 1,\n    borderColor: colors.border,\n  },\n  cancelButton: {\n    backgroundColor: '#FF3B30',\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '600',\n    fontSize: 14,\n  },\n  selectionText: {\n    fontSize: 14,\n    color: colors.text.secondary,\n    marginRight: spacing.MEDIUM,\n  },\n  selectedCount: {\n    color: colors.text.secondary,\n    fontSize: 16,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  compareButton: {\n    backgroundColor: colors.primary,\n  },\n  compareButtonText: {\n    color: colors.background.primary,\n  },\n  clearButtonText: {\n    color: colors.text.primary,\n  }\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FoilsTable } from './FoilsTable';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\n\ninterface ComparisonViewProps {\n  foils: BaseProduct[];\n  onClose?: () => void;\n  onCompare?: () => void;\n}\n\nconst ComparisonView = ({ foils, onClose, onCompare }: ComparisonViewProps) => {\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(foils);\n  \n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleSelect = () => {};\n  const isSelected = () => false;\n\n  return (\n    <View style={styles.container}>\n      <FoilsTable\n        foils={sortedFoils}\n        onSort={handleSort}\n        onFoilSelect={handleSelect}\n        isSelected={isSelected}\n        sortOption={{\n          field: sortOption.field,\n          ascending: sortOption.direction === 'asc'\n        }}\n      />\n    </View>\n  );\n};\n\nexport default ComparisonView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  }\n});","import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n    error: null\n  };\n\n  public static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Uncaught error:', error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return (\n        <View style={styles.container}>\n          <Text style={styles.text}>Something went wrong.</Text>\n          <Text style={styles.errorText}>{this.state.error?.message}</Text>\n        </View>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  text: {\n    fontSize: 16,\n    marginBottom: 10,\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 14,\n  },\n}); ","import React, { useState } from 'react';\nimport { View, Text, Pressable, StyleSheet, Animated, LayoutChangeEvent } from 'react-native';\nimport { colors } from '../theme/colors';\nimport { FilterOptions } from '../types/filters';\nimport { Ionicons } from '@expo/vector-icons';\n\ninterface FilterControlsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n}\n\nexport function FilterControls({\n  filterOptions,\n  selectedBrands,\n  selectedSeries,\n  selectedTypes,\n  onFilterChange,\n}: FilterControlsProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [animation] = useState(new Animated.Value(0));\n  const [contentHeight, setContentHeight] = useState(0);\n\n  const toggleExpanded = () => {\n    const toValue = isExpanded ? 0 : 1;\n    Animated.spring(animation, {\n      toValue,\n      useNativeDriver: false,\n      friction: 10,\n    }).start();\n    setIsExpanded(!isExpanded);\n  };\n\n  const handleLayout = (event: LayoutChangeEvent) => {\n    const { height } = event.nativeEvent.layout;\n    setContentHeight(height);\n  };\n\n  const animatedHeight = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, contentHeight],\n  });\n\n  return (\n    <View style={styles.wrapper}>\n      <Pressable onPress={toggleExpanded} style={styles.header}>\n        <View style={styles.headerContent}>\n          <Text style={styles.headerTitle}>Filters</Text>\n          <View style={styles.filterSummary}>\n            {selectedBrands.length > 0 && (\n              <Text style={styles.filterCount}>Brands: {selectedBrands.length}</Text>\n            )}\n            {selectedTypes.length > 0 && (\n              <Text style={styles.filterCount}>Types: {selectedTypes.length}</Text>\n            )}\n            {selectedSeries.length > 0 && (\n              <Text style={styles.filterCount}>Series: {selectedSeries.length}</Text>\n            )}\n          </View>\n        </View>\n        <Ionicons \n          name={isExpanded ? 'chevron-up' : 'chevron-down'} \n          size={24} \n          color={colors.text.secondary}\n        />\n      </Pressable>\n\n      <Animated.View style={[styles.content, { height: animatedHeight }]}>\n        <View style={styles.container} onLayout={handleLayout}>\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Brand</Text>\n            <View style={styles.chipContainer}>\n              {filterOptions.brands.map((brand) => (\n                <Pressable\n                  key={brand}\n                  style={[\n                    styles.chip,\n                    selectedBrands.includes(brand) && styles.chipSelected,\n                  ]}\n                  onPress={() => onFilterChange('brands', brand)}\n                >\n                  <Text \n                    style={[\n                      styles.chipText,\n                      selectedBrands.includes(brand) && styles.chipTextSelected,\n                    ]}\n                  >\n                    {brand}\n                  </Text>\n                </Pressable>\n              ))}\n            </View>\n          </View>\n\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Type</Text>\n            <View style={styles.chipContainer}>\n              {filterOptions.types.map((type) => (\n                <Pressable\n                  key={type}\n                  style={[\n                    styles.chip,\n                    selectedTypes.includes(type) && styles.chipSelected,\n                  ]}\n                  onPress={() => onFilterChange('type', type)}\n                >\n                  <Text \n                    style={[\n                      styles.chipText,\n                      selectedTypes.includes(type) && styles.chipTextSelected,\n                    ]}\n                  >\n                    {type}\n                  </Text>\n                </Pressable>\n              ))}\n            </View>\n          </View>\n\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Series</Text>\n            <View style={styles.chipContainer}>\n              {filterOptions.series.map((series) => (\n                <Pressable\n                  key={series}\n                  style={[\n                    styles.chip,\n                    selectedSeries.includes(series) && styles.chipSelected,\n                  ]}\n                  onPress={() => onFilterChange('series', series)}\n                >\n                  <Text \n                    style={[\n                      styles.chipText,\n                      selectedSeries.includes(series) && styles.chipTextSelected,\n                    ]}\n                  >\n                    {series}\n                  </Text>\n                </Pressable>\n              ))}\n            </View>\n          </View>\n        </View>\n      </Animated.View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: colors.background.primary,\n    marginBottom: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: colors.border,\n    overflow: 'hidden',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: colors.background.primary,\n  },\n  headerContent: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n  },\n  headerTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: colors.text.primary,\n  },\n  filterSummary: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  filterCount: {\n    fontSize: 14,\n    color: colors.text.secondary,\n  },\n  content: {\n    overflow: 'hidden',\n  },\n  container: {\n    padding: 16,\n    paddingTop: 0,\n  },\n  section: {\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: colors.text.primary,\n    marginBottom: 8,\n  },\n  chipContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  chip: {\n    backgroundColor: colors.background.secondary,\n    borderRadius: 16,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n  },\n  chipSelected: {\n    backgroundColor: colors.primary,\n  },\n  chipText: {\n    color: colors.text.secondary,\n    fontSize: 14,\n  },\n  chipTextSelected: {\n    color: colors.background.primary,\n  },\n}); ","/**\n * FoilsTable Component\n * \n * IMPORTANT: Column Alignment\n * - The table uses fixed column widths for consistent layout and horizontal scrolling\n * - Each column width in headerCell must match the corresponding cell width\n * - Current widths:\n *   - Regular columns (brand, model, type, series): 150px\n *   - Number columns (area, wingspan, AR, price): 100px\n *   - Link column: 100px\n * - When modifying column styles, always update both headerCell and cell styles to maintain alignment\n * - Table has a minWidth of 1200px to ensure proper layout on all screen sizes\n */\n\nimport React from 'react';\nimport { View, Text, Pressable, ScrollView, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { colors } from '../theme/colors';\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  onSort: (field: SortField) => void;\n  onFoilSelect: (foil: BaseProduct) => void;\n  isSelected: (foil: BaseProduct) => boolean;\n  sortOption: { field: SortField; ascending: boolean };\n}\n\nconst MOBILE_BREAKPOINT = 768;\nconst TABLE_WIDTH = 850; // 100 + 150 + 80 + 120 + (80 * 4) + 80\n\nexport function FoilsTable({\n  foils,\n  onSort,\n  onFoilSelect,\n  isSelected,\n  sortOption,\n}: FoilsTableProps) {\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n\n  const renderSortIcon = (field: SortField) => {\n    const isActive = sortOption.field === field;\n    \n    return (\n      <View style={styles.sortIconContainer}>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconUp,\n          isActive && sortOption.ascending && styles.sortIconUpActive\n        ]}>▲</Text>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconDown,\n          isActive && !sortOption.ascending && styles.sortIconDownActive\n        ]}>▼</Text>\n      </View>\n    );\n  };\n\n  const getHeaderTextStyle = (field: SortField) => {\n    const isActive = sortOption.field === field;\n    return [\n      styles.headerText,\n      isActive && sortOption.ascending && styles.headerTextUpActive,\n      isActive && !sortOption.ascending && styles.headerTextDownActive,\n    ];\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.tableWrapper}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} contentContainerStyle={styles.scrollViewContent}>\n          <View style={styles.tableContent}>\n            <View style={styles.tableHeader}>\n              <View style={styles.headerRow}>\n                <Pressable style={styles.headerCell} onPress={() => onSort('brand')}>\n                  <Text style={getHeaderTextStyle('brand')}>Brand</Text>\n                  {renderSortIcon('brand')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.modelCell]} onPress={() => onSort('model')}>\n                  <Text style={getHeaderTextStyle('model')}>Model</Text>\n                  {renderSortIcon('model')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.typeCell]} onPress={() => onSort('type')}>\n                  <Text style={getHeaderTextStyle('type')}>Type</Text>\n                  {renderSortIcon('type')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.seriesCell]} onPress={() => onSort('series')}>\n                  <Text style={getHeaderTextStyle('series')}>Series</Text>\n                  {renderSortIcon('series')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('area')}>\n                  <Text style={[getHeaderTextStyle('area'), styles.numberHeaderText]}>Area</Text>\n                  {renderSortIcon('area')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('wingspan')}>\n                  <Text style={[getHeaderTextStyle('wingspan'), styles.numberHeaderText]}>Span</Text>\n                  {renderSortIcon('wingspan')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('aspectRatio')}>\n                  <Text style={[getHeaderTextStyle('aspectRatio'), styles.numberHeaderText]}>AR</Text>\n                  {renderSortIcon('aspectRatio')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('price')}>\n                  <Text style={[getHeaderTextStyle('price'), styles.numberHeaderText]}>Price</Text>\n                  {renderSortIcon('price')}\n                </Pressable>\n                <View style={[styles.headerCell, styles.linkHeaderCell]}>\n                  <Text style={[styles.headerText, styles.linkHeaderText]}>Link</Text>\n                </View>\n              </View>\n            </View>\n            <View style={styles.scrollViewContainer}>\n              <ScrollView style={styles.scrollView}>\n                {foils.map((foil, index) => (\n                  <Pressable\n                    key={`${foil.brand}-${foil.model}`}\n                    onPress={() => onFoilSelect(foil)}\n                    style={({ pressed }) => [\n                      styles.row,\n                      index % 2 === 0 && styles.rowEven,\n                      isSelected(foil) && styles.rowSelected,\n                      Platform.OS === 'web' && pressed && styles.rowHovered\n                    ]}\n                  >\n                    <Text style={styles.cell}>{foil.brand}</Text>\n                    <Text style={[styles.cell, styles.modelCell]}>{foil.model}</Text>\n                    <Text style={[styles.cell, styles.typeCell]}>{foil.type}</Text>\n                    <Text style={[styles.cell, styles.seriesCell]}>{foil.series}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.specs.area}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.specs.wingspan}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.specs.aspectRatio?.toFixed(2)}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.price ? `$${foil.price}` : '-'}</Text>\n                    <View style={[styles.cell, styles.linkCell]}>\n                      {foil.sourceUrl && (\n                        <Pressable \n                          onPress={(e) => {\n                            e.stopPropagation();\n                            window.open(foil.sourceUrl, '_blank');\n                          }}\n                          style={({ pressed }) => [\n                            styles.linkButton,\n                            pressed && styles.linkButtonPressed\n                          ]}\n                        >\n                          <Text style={styles.linkText}>View</Text>\n                        </Pressable>\n                      )}\n                    </View>\n                  </Pressable>\n                ))}\n              </ScrollView>\n            </View>\n          </View>\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  tableWrapper: {\n    width: TABLE_WIDTH,\n    backgroundColor: colors.background.primary,\n    borderRadius: 8,\n    overflow: 'hidden',\n    borderWidth: 1,\n    borderColor: colors.border,\n    flex: 1,\n  },\n  tableContent: {\n    backgroundColor: colors.background.primary,\n    width: TABLE_WIDTH,\n    flex: 1,\n    flexDirection: 'column',\n  },\n  scrollViewContainer: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  tableHeader: {\n    backgroundColor: colors.background.secondary,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border,\n    width: TABLE_WIDTH,\n  },\n  headerRow: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border,\n  },\n  headerCell: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n    width: 100,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  headerText: {\n    color: colors.text.secondary,\n    fontWeight: '600',\n    fontSize: 16,\n  },\n  headerTextUpActive: {\n    color: colors.secondary,\n    fontWeight: '700',\n  },\n  headerTextDownActive: {\n    color: colors.primary,\n    fontWeight: '700',\n  },\n  row: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border,\n    width: TABLE_WIDTH,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  rowEven: {\n    backgroundColor: colors.background.secondary,\n  },\n  rowSelected: {\n    backgroundColor: `${colors.primary}15`,\n  },\n  rowHovered: {\n    backgroundColor: `${colors.primary}10`,\n  },\n  cell: {\n    color: colors.text.primary,\n    fontSize: 14,\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n    width: 100,\n  },\n  modelCell: {\n    width: 150,\n  },\n  typeCell: {\n    width: 80,\n  },\n  seriesCell: {\n    width: 120,\n  },\n  numberCell: {\n    width: 80,\n    textAlign: 'right',\n  },\n  numberHeaderCell: {\n    width: 80,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    gap: 4,\n  },\n  numberHeaderText: {\n    textAlign: 'left',\n    flex: 1,\n  },\n  linkCell: {\n    width: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n    borderBottomRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderCell: {\n    width: 80,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderText: {\n    textAlign: 'center',\n  },\n  linkButton: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    minWidth: 44,\n    alignItems: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  linkButtonPressed: {\n    opacity: 0.8,\n  },\n  linkText: {\n    color: colors.background.primary,\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  sortIconContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: 28,\n    justifyContent: 'center',\n    width: 16,\n    gap: 2,\n  },\n  sortIcon: {\n    color: colors.text.muted,\n    fontSize: 12,\n    width: 12,\n    height: 10,\n    lineHeight: 10,\n    textAlign: 'center',\n  },\n  sortIconUp: {\n    marginBottom: 0,\n  },\n  sortIconDown: {\n    marginTop: 0,\n  },\n  sortIconUpActive: {\n    color: colors.secondary,\n    fontSize: 13,\n  },\n  sortIconDownActive: {\n    color: colors.primary,\n    fontSize: 13,\n  },\n  scrollViewContent: {\n    flexGrow: 0,\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet, Pressable } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { colors } from '../theme/colors';\n\nconst Footer = () => {\n  const navigation = useNavigation<RootStackNavigationProp>();\n\n  return (\n    <View style={styles.footer}>\n      <Text style={styles.copyright}>© 2025 FoilQuiver. All rights reserved.</Text>\n      <Text style={styles.separator}>|</Text>\n      <Pressable onPress={() => navigation.navigate('Terms')}>\n        <Text style={styles.link}>Terms of Service</Text>\n      </Pressable>\n      <Text style={styles.separator}>|</Text>\n      <Pressable onPress={() => navigation.navigate('Privacy')}>\n        <Text style={styles.link}>Privacy Policy</Text>\n      </Pressable>\n      <Text style={styles.separator}>|</Text>\n      <Pressable onPress={() => navigation.navigate('Contact')}>\n        <Text style={styles.link}>Contact Us</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  footer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n    backgroundColor: colors.background.secondary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n  },\n  copyright: {\n    color: colors.text.secondary,\n    marginRight: 16,\n  },\n  separator: {\n    color: colors.text.muted,\n    marginHorizontal: 8,\n  },\n  link: {\n    color: colors.primary,\n    textDecorationLine: 'none',\n  },\n  linkHovered: {\n    color: colors.secondary,\n  }\n});\n\nexport default Footer; ","import React from 'react';\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\n\nexport function LoadingIndicator() {\n  return (\n    <View style={styles.container}>\n      <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}); ","import { Helmet } from 'react-helmet-async';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  canonicalUrl?: string;\n  imageUrl?: string;\n}\n\nexport const SEOHead: React.FC<SEOHeadProps> = ({\n  title,\n  description,\n  canonicalUrl,\n  imageUrl\n}) => {\n  const siteTitle = 'FoilQuiver';\n  const fullTitle = `${title} | ${siteTitle}`;\n  \n  return (\n    <Helmet>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      {imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n      \n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      {imageUrl && <meta name=\"twitter:image\" content={imageUrl} />}\n    </Helmet>\n  );\n}; ","import React from 'react';\nimport { View, TextInput, Pressable, Text, StyleSheet, Platform } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { colors } from '../theme/colors';\n\ninterface SearchBarProps {\n  value: string;\n  onChangeText: (text: string) => void;\n  onClear: () => void;\n  placeholder?: string;\n}\n\nexport function SearchBar({\n  value,\n  onChangeText,\n  onClear,\n  placeholder = '🔍 Search foils...'\n}: SearchBarProps) {\n  return (\n    <View style={styles.wrapper}>\n      <View style={styles.container}>\n        <TextInput\n          style={styles.input}\n          value={value}\n          onChangeText={onChangeText}\n          placeholder={placeholder}\n          placeholderTextColor={colors.text.muted}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n        />\n        {value.length > 0 && (\n          <Pressable\n            style={styles.clearButton}\n            onPress={onClear}\n          >\n            <Text style={styles.clearButtonText}>✕</Text>\n          </Pressable>\n        )}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    width: '100%',\n    alignItems: 'center',\n    paddingVertical: 16,\n    backgroundColor: colors.background.primary,\n  },\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: colors.background.secondary,\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    borderWidth: 1,\n    borderColor: colors.border,\n    width: Platform.OS === 'web' ? '40%' : '90%',\n    maxWidth: 500,\n    minWidth: 280,\n  },\n  input: {\n    flex: 1,\n    height: 48,\n    fontSize: 16,\n    color: colors.text.primary,\n  },\n  clearButton: {\n    padding: 8,\n  },\n  clearButtonText: {\n    color: colors.text.muted,\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n}); "],"names":["WebWrapper","Platform","select","web","_ref","children","_jsx","style","position","bottom","left","right","zIndex","pointerEvents","display","justifyContent","paddingRight","spacing","LARGE","default","_ref2","_Fragment","_ref3","selectedFoils","onCompareSelected","onExitCompare","onClearSelection","isComparisonView","length","content","View","styles","comparisonBar","Pressable","button","cancelButton","onPress","Text","buttonText","_jsxs","selectionText","buttonGroup","clearButton","buttonDisabled","disabled","OS","container","StyleSheet","create","flexDirection","alignItems","padding","backgroundColor","colors","background","secondary","borderTopWidth","borderTopColor","border","gap","MEDIUM","floatingButton","_objectSpread","alignSelf","paddingHorizontal","paddingVertical","borderRadius","boxShadow","cursor","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","primary","borderWidth","borderColor","color","fontWeight","fontSize","text","marginRight","selectedCount","buttonContainer","compareButton","compareButtonText","clearButtonText","foils","_useSortedFoils","onClose","onCompare","useSortedFoils","sortOption","setSortOption","sortedFoils","FoilsTable","onSort","field","prev","direction","onFoilSelect","isSelected","ascending","flex","ErrorBoundary","_Component","_this","_classCallCheck","_len","arguments","args","Array","_key","concat","state","hasError","error","_inherits","_createClass","key","value","errorInfo","_this$state$error","this","errorText","message","props","Component","marginBottom","FilterControls","filterOptions","selectedBrands","selectedSeries","selectedTypes","onFilterChange","_useState","useState","_useState2","_slicedToArray","isExpanded","setIsExpanded","_useState3","Animated","Value","animation","_useState5","_useState6","contentHeight","setContentHeight","animatedHeight","interpolate","inputRange","outputRange","wrapper","toValue","spring","useNativeDriver","friction","start","header","headerContent","headerTitle","filterSummary","filterCount","Ionicons","name","size","onLayout","event","nativeEvent","layout","section","sectionTitle","chipContainer","brands","map","brand","chip","includes","chipSelected","chipText","chipTextSelected","types","type","series","overflow","paddingTop","flexWrap","TABLE_WIDTH","renderSortIcon","useWindowDimensions","isActive","sortIconContainer","sortIcon","sortIconUp","sortIconUpActive","sortIconDown","sortIconDownActive","getHeaderTextStyle","headerText","headerTextUpActive","headerTextDownActive","tableWrapper","ScrollView","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","scrollViewContent","tableContent","tableHeader","headerRow","headerCell","modelCell","typeCell","seriesCell","numberHeaderCell","numberHeaderText","linkHeaderCell","linkHeaderText","scrollViewContainer","scrollView","foil","index","_foil$specs$aspectRat","pressed","row","rowEven","rowSelected","rowHovered","cell","model","numberCell","specs","area","wingspan","aspectRatio","toFixed","price","linkCell","sourceUrl","e","stopPropagation","window","open","linkButton","linkButtonPressed","linkText","borderBottomWidth","borderBottomColor","borderRightWidth","borderRightColor","textAlign","borderTopRightRadius","borderBottomRightRadius","minWidth","opacity","muted","lineHeight","marginTop","flexGrow","footer","copyright","separator","marginHorizontal","link","textDecorationLine","linkHovered","navigation","useNavigation","navigate","LoadingIndicator","ActivityIndicator","SEOHead","title","description","canonicalUrl","imageUrl","fullTitle","Helmet","rel","href","property","SearchBar","onChangeText","onClear","_ref$placeholder","placeholder","TextInput","input","placeholderTextColor","autoCapitalize","autoCorrect","maxWidth"],"sourceRoot":""}