{"version":3,"file":"static/js/screens.90047a45.chunk.js","mappings":"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","sources":["src/screens/BrowseScreen.tsx","src/screens/legal/Contact.tsx","src/screens/legal/PrivacyPolicy.tsx","src/screens/legal/TermsOfService.tsx"],"sourcesContent":["import React, { useState, useEffect, lazy, Suspense } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { useFoils } from '../hooks/useFoils';\nimport { useSearchFoils } from '../hooks/useSearchFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { useSortedFoils, SortField } from '../hooks/useSortedFoils';\nimport { useComparison } from '../hooks/useComparison';\nimport { FilterControls } from '../components/FilterControls';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { ErrorMessage } from '../components/ErrorMessage';\nimport { FilterOptions } from '../types/filters';\nimport { RootStackParamList } from '../types/navigation';\nimport { SEOHead } from '../components/SEOHead';\n\n// Lazy load heavy components\nconst FoilsTable = lazy(() => import('../components/FoilsTable').then(module => ({ default: module.default })));\nconst ComparisonControls = lazy(() => import('../components/ComparisonControls').then(module => ({ default: module.default })));\nconst ComparisonView = lazy(() => import('../components/ComparisonView').then(module => ({ default: module.default })));\nconst Footer = lazy(() => import('../components/Footer').then(module => ({ default: module.default })));\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Browse'>;\n\nexport default function BrowseScreen({ route, navigation }: Props) {\n  const { foils, loading, error, refreshFoils } = useFoils();\n  const searchQuery = route.params?.searchQuery || '';\n  const { searchedFoils } = useSearchFoils(foils, searchQuery);\n  const { \n    filters, \n    setFilters, \n    filteredFoils, \n    filterOptions \n  } = useFilteredFoils(searchedFoils);\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(filteredFoils);\n  const { \n    selectedFoils, \n    toggleFoilSelection, \n    isSelected,\n    clearSelection\n  } = useComparison();\n  \n  const [isComparisonView, setIsComparisonView] = useState(false);\n\n  useEffect(() => {\n    if (route.params?.searchQuery !== searchQuery) {\n      navigation.setParams({ searchQuery });\n    }\n  }, [searchQuery, navigation]);\n\n  useEffect(() => {\n    if (searchQuery) {\n      const url = new URL(window.location.href);\n      url.searchParams.set('searchQuery', searchQuery);\n      window.history.replaceState({}, '', url.toString());\n    }\n  }, [searchQuery]);\n\n  const handleFilterChange = (filterType: keyof FilterOptions, values: string[]) => {\n    if (filterType === 'type') {\n      setFilters((prev: FilterOptions) => ({\n        ...prev,\n        type: values.length > 0 ? values[0] as 'front' | 'tail' : null\n      }));\n    } else {\n      setFilters((prev: FilterOptions) => ({\n        ...prev,\n        [filterType]: values\n      }));\n    }\n  };\n\n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleCompareSelected = () => {\n    if (selectedFoils.length >= 2) {\n      setIsComparisonView(true);\n    }\n  };\n\n  const handleExitCompare = () => {\n    setIsComparisonView(false);\n    clearSelection();\n  };\n\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return <ErrorMessage message={error} onRetry={refreshFoils} />;\n  }\n\n  return (\n    <>\n      <SEOHead\n        title=\"FoilQuiver - Browse and compare hydrofoils\"\n        description={`Compare ${foils.length} hydrofoils across ${filterOptions.brands.length} brands. Filter by type, brand, and specifications to find your perfect foil.`}\n        canonicalUrl=\"https://foilquiver.com/browse\"\n      />\n      <View style={styles.container}>\n        <FilterControls\n          filterOptions={filterOptions}\n          selectedBrands={filters.brands}\n          selectedSeries={filters.series}\n          selectedTypes={filters.type ? [filters.type] : []}\n          onFilterChange={handleFilterChange}\n        />\n        <View style={styles.tableContainer}>\n          {isComparisonView ? (\n            <Suspense fallback={<LoadingIndicator />}>\n              <ComparisonView \n                foils={selectedFoils} \n                onClose={handleExitCompare}\n                onCompare={() => {}}\n              />\n            </Suspense>\n          ) : (\n            <Suspense fallback={<LoadingIndicator />}>\n              <FoilsTable\n                foils={sortedFoils}\n                onSort={handleSort}\n                onFoilSelect={toggleFoilSelection}\n                isSelected={isSelected}\n                sortOption={sortOption}\n              />\n            </Suspense>\n          )}\n        </View>\n        <Suspense fallback={<LoadingIndicator />}>\n          <ComparisonControls\n            selectedFoils={selectedFoils}\n            onCompareSelected={handleCompareSelected}\n            onExitCompare={handleExitCompare}\n            onClearSelection={clearSelection}\n            isComparisonView={isComparisonView}\n          />\n        </Suspense>\n        <Suspense fallback={<LoadingIndicator />}>\n          <Footer />\n        </Suspense>\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  tableContainer: {\n    flex: 1,\n    minHeight: 0, // Important for proper flex behavior\n  },\n}); ","import React, { useState } from 'react';\nimport { ScrollView, Text, StyleSheet, View, TextInput, TouchableOpacity, Alert } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../../types/navigation';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Contact'>;\n\nconst Contact = (props: Props) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = () => {\n    if (!name.trim() || !email.trim() || !message.trim()) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      Alert.alert('Error', 'Please enter a valid email address');\n      return;\n    }\n\n    // Here you would typically send the form data to your backend\n    // For now, we'll just show a success message\n    Alert.alert(\n      'Success',\n      'Thank you for your message! We will get back to you soon.',\n      [\n        {\n          text: 'OK',\n          onPress: () => {\n            setName('');\n            setEmail('');\n            setMessage('');\n          },\n        },\n      ]\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.content}>\n        <Text style={styles.title}>Contact Us</Text>\n        <Text style={styles.subtitle}>\n          FoilQuiver is still in very early development. Let me know if you have any feedback or feature requests!\n        </Text>\n\n        <View style={styles.form}>\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Name</Text>\n            <TextInput\n              style={styles.input}\n              value={name}\n              onChangeText={setName}\n              placeholder=\"Enter your name\"\n              placeholderTextColor=\"#999\"\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Email</Text>\n            <TextInput\n              style={styles.input}\n              value={email}\n              onChangeText={setEmail}\n              placeholder=\"Enter your email\"\n              placeholderTextColor=\"#999\"\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Message</Text>\n            <TextInput\n              style={[styles.input, styles.messageInput]}\n              value={message}\n              onChangeText={setMessage}\n              placeholder=\"Type your message here\"\n              placeholderTextColor=\"#999\"\n              multiline\n              numberOfLines={4}\n              textAlignVertical=\"top\"\n            />\n          </View>\n\n          <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n            <Text style={styles.submitButtonText}>Send Message</Text>\n          </TouchableOpacity>\n\n          <View style={styles.section}>\n            <Text style={styles.alternativeContact}>\n              Alternatively, you can email me directly at:{'\\n'}\n              sungho@sparkmindbody.com\n            </Text>\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 24,\n    lineHeight: 24,\n  },\n  form: {\n    marginTop: 20,\n  },\n  inputContainer: {\n    marginBottom: 20,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 8,\n    color: '#333',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    backgroundColor: '#fafafa',\n  },\n  messageInput: {\n    height: 120,\n    textAlignVertical: 'top',\n  },\n  submitButton: {\n    backgroundColor: '#007AFF',\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  section: {\n    marginTop: 32,\n    marginBottom: 24,\n  },\n  alternativeContact: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n    textAlign: 'center',\n  },\n});\n\nexport default Contact; ","import React from 'react';\nimport { ScrollView, Text, StyleSheet, View } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../../types/navigation';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Privacy'>;\n\nconst PrivacyPolicy = (props: Props) => {\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.content}>\n        <Text style={styles.title}>Privacy Policy</Text>\n        <Text style={styles.lastUpdated}>Last Updated: February 2025</Text>\n        \n        <View style={styles.section}>\n          <Text style={styles.heading}>1. Information We Collect</Text>\n          <Text style={styles.text}>\n            FoilQuiver collects minimal user data. We use Plausible Analytics to collect anonymous usage statistics. \n            We do not use cookies or collect any personally identifiable information.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>2. How We Use Information</Text>\n          <Text style={styles.text}>\n            Anonymous usage data helps us understand how users interact with our site and improve our services.\n            We do not sell or share any user data with third parties.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>3. Data Sources</Text>\n          <Text style={styles.text}>\n            Product information is collected from publicly available manufacturer websites. \n            We make every effort to ensure accuracy but recommend verifying specifications with manufacturers.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>4. Contact Us</Text>\n          <Text style={styles.text}>\n            For privacy-related questions, please contact us at sungho@sparkmindbody.com\n          </Text>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  lastUpdated: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 24,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 12,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n  },\n});\n\nexport default PrivacyPolicy; ","import React from 'react';\nimport { ScrollView, Text, StyleSheet, View } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../../types/navigation';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Terms'>;\n\nconst TermsOfService = (props: Props) => {\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.content}>\n        <Text style={styles.title}>Terms of Service</Text>\n        <Text style={styles.lastUpdated}>Last Updated: February 2025</Text>\n        \n        <View style={styles.section}>\n          <Text style={styles.heading}>1. Acceptance of Terms</Text>\n          <Text style={styles.text}>\n            By accessing and using FoilQuiver, you accept and agree to be bound by these Terms of Service.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>2. Use License</Text>\n          <Text style={styles.text}>\n            FoilQuiver provides product comparison information for personal, non-commercial use.\n            All content is provided \"as is\" without warranty of any kind.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>3. Disclaimer</Text>\n          <Text style={styles.text}>\n            While we strive for accuracy, we cannot guarantee the completeness or accuracy of product information.\n            Always verify specifications with manufacturers before making purchase decisions.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>4. Limitations</Text>\n          <Text style={styles.text}>\n            We shall not be liable for any damages arising from the use of FoilQuiver.\n            Product prices and specifications are subject to change without notice.\n          </Text>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  lastUpdated: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 24,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 12,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n  },\n});\n\nexport default TermsOfService; "],"names":["FoilsTable","lazy","then","module","default","ComparisonControls","ComparisonView","Footer","BrowseScreen","_ref","_route$params","route","navigation","_useFoils","useFoils","foils","loading","error","refreshFoils","searchQuery","params","searchedFoils","useSearchFoils","_useFilteredFoils","useFilteredFoils","filters","setFilters","filteredFoils","filterOptions","_useSortedFoils","useSortedFoils","sortOption","setSortOption","sortedFoils","_useComparison","useComparison","selectedFoils","toggleFoilSelection","isSelected","clearSelection","_useState","useState","_useState2","_slicedToArray","isComparisonView","setIsComparisonView","useEffect","_route$params2","setParams","url","URL","window","location","href","searchParams","set","history","replaceState","toString","handleExitCompare","_jsx","LoadingIndicator","ErrorMessage","message","onRetry","_jsxs","_Fragment","children","SEOHead","title","description","length","brands","canonicalUrl","View","style","styles","container","FilterControls","selectedBrands","selectedSeries","series","selectedTypes","type","onFilterChange","filterType","values","prev","_objectSpread","_defineProperty","tableContainer","Suspense","fallback","onClose","onCompare","onSort","field","direction","onFoilSelect","onCompareSelected","onExitCompare","onClearSelection","StyleSheet","create","flex","height","display","flexDirection","minHeight","backgroundColor","content","padding","fontSize","fontWeight","marginBottom","subtitle","color","lineHeight","form","marginTop","inputContainer","label","input","borderWidth","borderColor","borderRadius","messageInput","textAlignVertical","submitButton","alignItems","submitButtonText","section","alternativeContact","textAlign","props","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","setMessage","SafeAreaView","ScrollView","Text","TextInput","value","onChangeText","placeholder","placeholderTextColor","keyboardType","autoCapitalize","multiline","numberOfLines","TouchableOpacity","onPress","trim","test","Alert","alert","text","lastUpdated","heading"],"sourceRoot":""}