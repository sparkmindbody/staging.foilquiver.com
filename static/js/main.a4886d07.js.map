{"version":3,"file":"static/js/main.a4886d07.js","mappings":"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","sources":["src/components/ErrorBoundary.tsx","src/components/SearchBar.tsx","src/components/GoogleSignIn.tsx","src/components/TableSettings.tsx","src/navigation/AppHeader.tsx","App.tsx","index.ts","src/components/LoadingIndicator.tsx","src/components/QuiverManager.tsx","src/config/env.ts","src/config/environment.ts","src/constants/layout.ts","src/context/AppContext.tsx","src/hooks/useFilteredFoils.ts","src/utils/dataTransform.ts","src/services/productService.ts","src/hooks/useFoils.ts","src/hooks/useQuivers.ts","src/theme/ThemeContext.tsx","src/theme/colors.ts","src/theme/spacing.ts","src/utils/analytics.ts","src/utils/foilUtils.ts","src/utils/routes.ts","src/utils/logger.ts","src/utils/storage.ts","src/utils/supabase.ts"],"sourcesContent":["import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Platform } from 'react-native';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    // Log error to your error reporting service\n    console.error('Error caught by boundary:', error, errorInfo);\n  }\n\n  handleRetry = () => {\n    this.setState({ hasError: false, error: null });\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorView error={this.state.error} onRetry={this.handleRetry} />;\n    }\n\n    return this.props.children;\n  }\n}\n\ninterface ErrorViewProps {\n  error: Error | null;\n  onRetry: () => void;\n}\n\nconst ErrorView: React.FC<ErrorViewProps> = ({ error, onRetry }) => {\n  const { colors } = useTheme();\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.primary }]}>\n      <View style={styles.content}>\n        <Text style={[styles.title, { color: colors.error }]}>\n          Something went wrong\n        </Text>\n        <Text style={[styles.message, { color: colors.text.secondary }]}>\n          {error?.message || 'An unexpected error occurred'}\n        </Text>\n        <TouchableOpacity\n          style={[styles.button, { backgroundColor: colors.primary }]}\n          onPress={onRetry}\n        >\n          <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n            Try Again\n          </Text>\n        </TouchableOpacity>\n        {__DEV__ && error && (\n          <Text style={[styles.stack, { color: colors.text.tertiary }]}>\n            {error.stack}\n          </Text>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: spacing.LARGE,\n  },\n  content: {\n    maxWidth: 600,\n    width: '100%',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: spacing.MEDIUM,\n    textAlign: 'center',\n  },\n  message: {\n    fontSize: 16,\n    marginBottom: spacing.LARGE,\n    textAlign: 'center',\n  },\n  button: {\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    marginBottom: spacing.LARGE,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  stack: {\n    fontSize: 12,\n    fontFamily: Platform.OS === 'ios' ? 'Menlo' : 'monospace',\n    marginTop: spacing.LARGE,\n    padding: spacing.MEDIUM,\n    width: '100%',\n  },\n}); ","import React, { useState, useEffect, useRef } from 'react';\nimport { View, TextInput, StyleSheet, TouchableOpacity, Platform, Text, useWindowDimensions } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\nimport { MOBILE_BREAKPOINT } from '../constants/layout';\n\ninterface SearchBarProps {\n  value: string;\n  onChangeText: (text: string) => void;\n  onClear: () => void;\n  placeholder?: string;\n  autoFocus?: boolean;\n  mode?: 'browse' | 'comparison' | 'quiver';\n  onFocus?: () => void;\n}\n\nexport const SearchBar: React.FC<SearchBarProps> = ({\n  value,\n  onChangeText,\n  onClear,\n  placeholder = 'Search foils...',\n  autoFocus = false,\n  mode = 'browse',\n  onFocus,\n}) => {\n  const { colors } = useTheme();\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const isMobileWeb = Platform.OS === 'web' && isMobile;\n\n  const getPlaceholder = () => {\n    if (isMobile) {\n      // Mobile-specific shorter placeholders\n      switch (mode) {\n        case 'comparison':\n          return 'Search to add...';\n        case 'quiver':\n          return 'Search to add...';\n        default:\n          return 'Search foils...';\n      }\n    }\n\n    // Desktop placeholders\n    switch (mode) {\n      case 'comparison':\n        return 'Search foils to add to comparison...';\n      case 'quiver':\n        return 'Search foils to add to quiver...';\n      default:\n        return 'Search foils...';\n    }\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.secondary }]}>\n      {Platform.OS === 'web' ? (\n        <Text style={[styles.searchIcon, { color: colors.text.secondary }]}>🔍</Text>\n      ) : (\n        <Ionicons name=\"search\" size={20} color={colors.text.secondary} />\n      )}\n      <TextInput\n        style={[\n          styles.input, \n          { color: colors.text.primary },\n          isMobileWeb && styles.mobileWebInput\n        ]}\n        value={value}\n        onChangeText={onChangeText}\n        placeholder={getPlaceholder()}\n        placeholderTextColor={colors.text.tertiary}\n        autoFocus={autoFocus}\n        onFocus={onFocus}\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n        clearButtonMode=\"never\"\n        returnKeyType=\"search\"\n        maxFontSizeMultiplier={1}\n        {...(Platform.OS === 'web' ? {\n          spellCheck: false,\n          autoComplete: 'off',\n        } : {\n          keyboardType: 'web-search',\n        })}\n      />\n      {value !== '' && (\n        <TouchableOpacity \n          onPress={onClear} \n          style={[\n            styles.clearButton,\n            isMobileWeb && styles.mobileWebClearButton\n          ]}\n        >\n          <Text style={[styles.clearIcon, { color: colors.text.secondary }]}>✕</Text>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: spacing.MEDIUM,\n    height: 40,\n    borderRadius: 8,\n    gap: spacing.SMALL,\n  },\n  input: {\n    flex: 1,\n    fontSize: 16,\n    height: '100%',\n    ...(Platform.OS === 'web' && {\n      outlineStyle: 'none',\n      border: 'none',\n      background: 'transparent',\n      lineHeight: 40,\n    }),\n  },\n  clearButton: {\n    height: '100%',\n    aspectRatio: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  searchIcon: {\n    fontSize: 16,\n    width: 20,\n    height: 20,\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n  clearIcon: {\n    fontSize: 16,\n    width: 20,\n    height: 20,\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n  mobileWebInput: {\n    paddingRight: 40,\n  },\n  mobileWebClearButton: {\n    position: 'absolute',\n    right: spacing.MEDIUM,\n    top: 0,\n    bottom: 0,\n    zIndex: 1,\n  },\n}); ","import React, { useEffect } from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { supabase } from '../utils/supabase';\nimport { GOOGLE_CLIENT_ID } from '../config/env';\n\ninterface GoogleSignInProps {\n  onSuccess?: () => void;\n}\n\ninterface GoogleCredentialResponse {\n  credential: string;\n}\n\ndeclare global {\n  interface Window {\n    google?: {\n      accounts: {\n        id: {\n          initialize: (config: any) => void;\n          renderButton: (element: HTMLElement, config: any) => void;\n          prompt: () => void;\n          revoke: (hint: string, callback: () => void) => void;\n        };\n      };\n    };\n  }\n}\n\nexport const GoogleSignIn = ({ onSuccess }: GoogleSignInProps) => {\n  useEffect(() => {\n    const initializeGoogleSignIn = () => {\n      if (Platform.OS !== 'web' || typeof window === 'undefined' || !window.google) return;\n\n      window.google.accounts.id.initialize({\n        client_id: GOOGLE_CLIENT_ID,\n        callback: async (response: GoogleCredentialResponse) => {\n          try {\n            const { error } = await supabase.auth.signInWithIdToken({\n              provider: 'google',\n              token: response.credential,\n            });\n\n            if (error) {\n              console.error('Error signing in with Google:', error);\n              return;\n            }\n\n            onSuccess?.();\n          } catch (error) {\n            console.error('Unexpected error during Google sign in:', error);\n          }\n        },\n        use_fedcm_for_prompt: true,\n      });\n\n      const buttonContainer = document.getElementById('google-signin-button');\n      if (buttonContainer) {\n        window.google.accounts.id.renderButton(buttonContainer, {\n          type: 'standard',\n          theme: 'outline',\n          size: 'large',\n          text: 'signin_with',\n          shape: 'pill',\n        });\n      }\n    };\n\n    if (Platform.OS === 'web') {\n      const script = document.createElement('script');\n      script.src = 'https://accounts.google.com/gsi/client';\n      script.async = true;\n      script.onload = initializeGoogleSignIn;\n      document.body.appendChild(script);\n\n      return () => {\n        document.body.removeChild(script);\n      };\n    }\n  }, [onSuccess]);\n\n  if (Platform.OS !== 'web') {\n    return null;\n  }\n\n  return (\n    <View style={styles.container}>\n      <div id=\"google-signin-button\" />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: 40,\n  },\n}); ","import React, { useState, useMemo, useEffect } from 'react';\nimport { View, Text, Pressable, StyleSheet, Modal, Platform, ScrollView, Image, Alert } from 'react-native';\nimport { MaterialIcons, Ionicons } from '@expo/vector-icons';\nimport { useTheme } from '../theme/ThemeContext';\nimport { FilterOptions } from '../types/filters';\nimport { BaseProduct } from '../types/scraper';\nimport { saveFilters, saveColumns, loadFilters, loadColumns, StoredFilters, StoredColumns } from '../utils/storage';\nimport { spacing } from '../theme/spacing';\nimport { supabase } from '../utils/supabase';\nimport { Session, User } from '@supabase/supabase-js';\nimport { GoogleSignIn } from './GoogleSignIn';\nimport { QuiversMenu } from './QuiversMenu';\nimport { QuiverManager } from './QuiverManager';\n\ninterface Column {\n  id: string;\n  label: string;\n  isVisible: boolean;\n}\n\ninterface TableSettingsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n  onClearFilters: () => void;\n  columns: Column[];\n  onColumnVisibilityChange: (columnId: string) => void;\n  onResetColumns: () => void;\n  foils: BaseProduct[];\n}\n\nexport function TableSettings({\n  filterOptions,\n  selectedBrands,\n  selectedSeries,\n  selectedTypes,\n  onFilterChange,\n  onClearFilters,\n  columns,\n  onColumnVisibilityChange,\n  onResetColumns,\n  foils,\n}: TableSettingsProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [activeTab, setActiveTab] = useState<'filters' | 'columns' | 'account' | 'appearance'>('filters');\n  const { colors, isDark, toggleTheme } = useTheme();\n  const [session, setSession] = useState<Session | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [isQuiversModalVisible, setIsQuiversModalVisible] = useState(false);\n\n  // Get initial session and listen for auth changes\n  useEffect(() => {\n    // Get initial session\n    const initializeSession = async () => {\n      try {\n        const { data: { session }, error } = await supabase.auth.getSession();\n        if (error) {\n          console.error('Error getting session:', error);\n          return;\n        }\n        setSession(session);\n        setUser(session?.user ?? null);\n\n        // If we have a session, refresh it\n        if (session) {\n          const { data: { session: refreshedSession }, error: refreshError } = await supabase.auth.refreshSession();\n          if (refreshError) {\n            console.error('Error refreshing session:', refreshError);\n            return;\n          }\n          if (refreshedSession) {\n            setSession(refreshedSession);\n            setUser(refreshedSession.user);\n          }\n        }\n      } catch (error) {\n        console.error('Error initializing session:', error);\n      }\n    };\n\n    initializeSession();\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event, session) => {\n      console.debug('Auth state changed:', event);\n      if (event === 'TOKEN_REFRESHED') {\n        setSession(session);\n        setUser(session?.user ?? null);\n      } else if (event === 'SIGNED_OUT') {\n        setSession(null);\n        setUser(null);\n      } else if (event === 'SIGNED_IN') {\n        setSession(session);\n        setUser(session?.user ?? null);\n      }\n    });\n\n    // Refresh session periodically\n    const refreshInterval = setInterval(async () => {\n      const { data: { session } } = await supabase.auth.getSession();\n      if (session) {\n        const { data: { session: refreshedSession }, error: refreshError } = await supabase.auth.refreshSession();\n        if (refreshError) {\n          console.error('Error refreshing session:', refreshError);\n          return;\n        }\n        if (refreshedSession) {\n          setSession(refreshedSession);\n          setUser(refreshedSession.user);\n        }\n      }\n    }, 3600000); // Refresh every hour\n\n    return () => {\n      subscription.unsubscribe();\n      clearInterval(refreshInterval);\n    };\n  }, []);\n\n  // Load saved settings on mount\n  useEffect(() => {\n    const loadSavedSettings = async () => {\n      try {\n        // Load and apply saved filters\n        const savedFilters = await loadFilters();\n        if (savedFilters) {\n          savedFilters.brands.forEach(brand => onFilterChange('brands', brand));\n          savedFilters.series.forEach(series => onFilterChange('series', series));\n          savedFilters.types.forEach(type => onFilterChange('type', type));\n        }\n\n        // Load and apply saved column settings\n        const savedColumns = await loadColumns();\n        if (savedColumns) {\n          // Create a map of current column visibility\n          const currentColumns = Object.fromEntries(\n            columns.map(col => [col.id, col.isVisible])\n          );\n\n          // Update each column's visibility if it differs from saved state\n          Object.entries(savedColumns).forEach(([columnId, isVisible]) => {\n            if (currentColumns[columnId] !== isVisible) {\n              onColumnVisibilityChange(columnId);\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Error loading settings:', error);\n      }\n    };\n\n    loadSavedSettings();\n  }, []);\n\n  // Save filters when they change\n  useEffect(() => {\n    const saveFilterSettings = async () => {\n      try {\n        const filters: StoredFilters = {\n          brands: selectedBrands,\n          series: selectedSeries,\n          types: selectedTypes,\n        };\n        await saveFilters(filters);\n      } catch (error) {\n        console.error('Error saving filter settings:', error);\n      }\n    };\n\n    saveFilterSettings();\n  }, [selectedBrands, selectedSeries, selectedTypes]);\n\n  // Save column settings when they change\n  useEffect(() => {\n    const saveColumnSettings = async () => {\n      try {\n        const columnSettings: StoredColumns = {};\n        columns.forEach(column => {\n          columnSettings[column.id] = column.isVisible;\n        });\n        await saveColumns(columnSettings);\n      } catch (error) {\n        console.error('Error saving column settings:', error);\n      }\n    };\n\n    saveColumnSettings();\n  }, [columns]);\n\n  const handleSignOut = async () => {\n    try {\n      // First check if we have a valid session\n      const { data: { session } } = await supabase.auth.getSession();\n      if (!session) {\n        // If no session, just clean up the UI state\n        setSession(null);\n        setUser(null);\n        setIsOpen(false);\n        return;\n      }\n\n      // Sign out from Google if on web platform\n      if (Platform.OS === 'web' && window.google?.accounts) {\n        window.google.accounts.id.revoke(user?.email || '', () => {});\n      }\n\n      // Sign out from Supabase\n      await supabase.auth.signOut({ scope: 'local' });\n      \n      // Clean up UI state\n      setSession(null);\n      setUser(null);\n      setIsOpen(false);\n    } catch (error) {\n      console.error('Sign out error:', error);\n      // Even if there's an error, try to clean up the UI state\n      setSession(null);\n      setUser(null);\n      setIsOpen(false);\n    }\n  };\n\n  // Handle column visibility change\n  const handleColumnVisibilityChange = async (columnId: string) => {\n    onColumnVisibilityChange(columnId);\n  };\n\n  // Handle reset columns\n  const handleResetColumns = async () => {\n    onResetColumns();\n    try {\n      const columnSettings: StoredColumns = {};\n      columns.forEach(column => {\n        columnSettings[column.id] = column.isVisible;\n      });\n      await saveColumns(columnSettings);\n    } catch (error) {\n      console.error('Error resetting column settings:', error);\n    }\n  };\n\n  // Filter series based on selected brands\n  const availableSeries = useMemo(() => {\n    if (selectedBrands.length === 0) {\n      return filterOptions.series;\n    }\n\n    // Get all series from foils that match selected brands\n    const seriesSet = new Set<string>();\n    foils.forEach(foil => {\n      if (selectedBrands.includes(foil.brand) && foil.series) {\n        seriesSet.add(foil.series);\n      }\n    });\n\n    return Array.from(seriesSet).sort();\n  }, [filterOptions.series, selectedBrands, foils]);\n\n  const renderAccountTab = () => {\n    if (!session) {\n      return (\n        <View style={styles.contentWrapper}>\n          <View style={styles.content}>\n            <Text style={[styles.contentTitle, { color: colors.text.primary, marginBottom: 16 }]}>Sign In</Text>\n            <GoogleSignIn onSuccess={() => {\n              setIsOpen(false);\n            }} />\n          </View>\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.contentWrapper}>\n        <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n          <View style={styles.content}>\n            <View style={styles.userInfo}>\n              {user?.user_metadata?.avatar_url && (\n                <Image \n                  source={{ uri: user.user_metadata.avatar_url }} \n                  style={styles.avatarImage}\n                />\n              )}\n              <View style={styles.userTextInfo}>\n                <Text style={[styles.userName, { color: colors.text.primary }]}>\n                  {user?.user_metadata?.full_name || user?.email}\n                </Text>\n                <Text style={[styles.userEmail, { color: colors.text.secondary }]}>\n                  {user?.email}\n                </Text>\n              </View>\n            </View>\n\n            <View style={[styles.menuDivider, { backgroundColor: colors.border }]} />\n\n            <View style={styles.section}>\n              <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Quivers</Text>\n              <Pressable\n                style={[styles.menuButton, { backgroundColor: colors.background.secondary }]}\n                onPress={() => {\n                  setIsQuiversModalVisible(true);\n                }}\n              >\n                <View style={styles.menuButtonContent}>\n                  {Platform.OS === 'web' ? (\n                    <Text style={{ fontSize: 20, color: colors.text.primary }}>🎯</Text>\n                  ) : (\n                    <Ionicons name=\"bookmark-outline\" size={20} color={colors.text.primary} />\n                  )}\n                  <Text style={[styles.menuButtonText, { color: colors.text.primary }]}>Manage Quivers</Text>\n                </View>\n                <MaterialIcons name=\"chevron-right\" size={20} color={colors.text.secondary} />\n              </Pressable>\n            </View>\n\n            <View style={styles.section}>\n              <Pressable\n                style={({ pressed }) => [\n                  styles.menuButton,\n                  { backgroundColor: colors.background.secondary },\n                  pressed && { opacity: 0.7 }\n                ]}\n                onPress={() => {\n                  handleSignOut();\n                }}\n                role=\"button\"\n              >\n                <View style={styles.menuButtonContent}>\n                  {Platform.OS === 'web' ? (\n                    <Text style={{ fontSize: 20, color: colors.text.primary }}>⇥</Text>\n                  ) : (\n                    <Ionicons name=\"log-out-outline\" size={20} color={colors.text.primary} />\n                  )}\n                  <Text style={[styles.menuButtonText, { color: colors.text.primary }]}>Sign Out</Text>\n                </View>\n              </Pressable>\n            </View>\n          </View>\n        </ScrollView>\n      </View>\n    );\n  };\n\n  return (\n    <>\n      <Pressable \n        onPress={() => setIsOpen(true)}\n        style={[styles.iconButton, { backgroundColor: colors.background.secondary }]}\n      >\n        <MaterialIcons name=\"settings\" size={24} color={colors.text.primary} />\n      </Pressable>\n\n      <Modal\n        visible={isOpen}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => setIsOpen(false)}\n      >\n        <Pressable \n          style={[styles.modalOverlay, { backgroundColor: isDark ? 'rgba(0, 0, 0, 0.7)' : 'rgba(0, 0, 0, 0.5)' }]}\n          onPress={() => setIsOpen(false)}\n        >\n          <Pressable \n            style={[styles.modalContent, { backgroundColor: colors.background.primary }]}\n            onPress={e => e.stopPropagation()}\n          >\n            <View style={[styles.modalHeader, { borderBottomColor: colors.border }]}>\n              <Text style={[styles.modalTitle, { color: colors.text.primary }]}>Settings</Text>\n              <Pressable \n                onPress={() => setIsOpen(false)}\n                style={styles.closeButton}\n              >\n                <MaterialIcons name=\"close\" size={24} color={colors.text.secondary} />\n              </Pressable>\n            </View>\n\n            <View style={[styles.tabs, { borderBottomColor: colors.border }]}>\n              <Pressable\n                style={[styles.tab, activeTab === 'filters' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('filters')}\n              >\n                <Text style={[\n                  styles.tabText, \n                  { color: colors.text.secondary },\n                  activeTab === 'filters' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Filters {(selectedBrands.length > 0 || selectedSeries.length > 0 || selectedTypes.length > 0) && '•'}\n                </Text>\n              </Pressable>\n              <Pressable\n                style={[styles.tab, activeTab === 'columns' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('columns')}\n              >\n                <Text style={[\n                  styles.tabText,\n                  { color: colors.text.secondary },\n                  activeTab === 'columns' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Columns {columns.some(col => !col.isVisible) && '•'}\n                </Text>\n              </Pressable>\n              <Pressable\n                style={[styles.tab, activeTab === 'appearance' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('appearance')}\n              >\n                <Text style={[\n                  styles.tabText,\n                  { color: colors.text.secondary },\n                  activeTab === 'appearance' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Appearance\n                </Text>\n              </Pressable>\n              <Pressable\n                style={[styles.tab, activeTab === 'account' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('account')}\n              >\n                <Text style={[\n                  styles.tabText,\n                  { color: colors.text.secondary },\n                  activeTab === 'account' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Account\n                </Text>\n              </Pressable>\n            </View>\n\n            {activeTab === 'filters' ? (\n              <View style={styles.contentWrapper}>\n                <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n                  <View style={styles.content}>\n                    <View style={styles.headerWithAction}>\n                      <Text style={[styles.contentTitle, { color: colors.text.primary }]}>Active Filters</Text>\n                      {(selectedBrands.length > 0 || selectedSeries.length > 0 || selectedTypes.length > 0) && (\n                        <Pressable \n                          onPress={onClearFilters}\n                          style={[styles.clearButton, { backgroundColor: colors.background.secondary }]}\n                        >\n                          <Text style={[styles.clearButtonText, { color: colors.text.secondary }]}>Clear All</Text>\n                        </Pressable>\n                      )}\n                    </View>\n                    <View style={styles.section}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Brand</Text>\n                      <View style={styles.chipContainer}>\n                        {filterOptions.brands.map((brand) => (\n                          <Pressable\n                            key={brand}\n                            style={[\n                              styles.chip,\n                              { backgroundColor: colors.background.secondary },\n                              selectedBrands.includes(brand) && [styles.chipSelected, { backgroundColor: colors.primary }],\n                            ]}\n                            onPress={() => onFilterChange('brands', brand)}\n                          >\n                            <Text \n                              style={[\n                                styles.chipText,\n                                { color: colors.text.secondary },\n                                selectedBrands.includes(brand) && [styles.chipTextSelected, { color: colors.text.inverse }],\n                              ]}\n                            >\n                              {brand}\n                            </Text>\n                          </Pressable>\n                        ))}\n                      </View>\n                    </View>\n\n                    <View style={styles.section}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Type</Text>\n                      <View style={styles.chipContainer}>\n                        {filterOptions.types.map((type) => (\n                          <Pressable\n                            key={type}\n                            style={[\n                              styles.chip,\n                              { backgroundColor: colors.background.secondary },\n                              selectedTypes.includes(type) && [styles.chipSelected, { backgroundColor: colors.primary }],\n                            ]}\n                            onPress={() => onFilterChange('type', type)}\n                          >\n                            <Text \n                              style={[\n                                styles.chipText,\n                                { color: colors.text.secondary },\n                                selectedTypes.includes(type) && [styles.chipTextSelected, { color: colors.text.inverse }],\n                              ]}\n                            >\n                              {type}\n                            </Text>\n                          </Pressable>\n                        ))}\n                      </View>\n                    </View>\n\n                    <View style={styles.section}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Series</Text>\n                      <View style={styles.chipContainer}>\n                        {availableSeries.length > 0 ? (\n                          availableSeries.map((series) => (\n                            <Pressable\n                              key={series}\n                              style={[\n                                styles.chip,\n                                { backgroundColor: colors.background.secondary },\n                                selectedSeries.includes(series) && [styles.chipSelected, { backgroundColor: colors.primary }],\n                              ]}\n                              onPress={() => onFilterChange('series', series)}\n                            >\n                              <Text \n                                style={[\n                                  styles.chipText,\n                                  { color: colors.text.secondary },\n                                  selectedSeries.includes(series) && [styles.chipTextSelected, { color: colors.text.inverse }],\n                                ]}\n                              >\n                                {series}\n                              </Text>\n                            </Pressable>\n                          ))\n                        ) : (\n                          <Text style={[styles.noSeriesText, { color: colors.text.secondary }]}>\n                            No series available for selected brands\n                          </Text>\n                        )}\n                      </View>\n                    </View>\n                  </View>\n                </ScrollView>\n              </View>\n            ) : activeTab === 'columns' ? (\n              <View style={styles.contentWrapper}>\n                <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n                  <View style={styles.content}>\n                    <View style={styles.headerWithAction}>\n                      <Text style={[styles.contentTitle, { color: colors.text.primary }]}>Visible Columns</Text>\n                      {columns.some(col => !col.isVisible) && (\n                        <Pressable \n                          onPress={handleResetColumns}\n                          style={[styles.clearButton, { backgroundColor: colors.background.secondary }]}\n                        >\n                          <Text style={[styles.clearButtonText, { color: colors.text.secondary }]}>Reset</Text>\n                        </Pressable>\n                      )}\n                    </View>\n                    <View style={styles.columnList}>\n                      {columns.map(column => (\n                        <Pressable\n                          key={column.id}\n                          style={styles.columnItem}\n                          onPress={() => handleColumnVisibilityChange(column.id)}\n                        >\n                          <Text style={[styles.columnLabel, { color: colors.text.primary }]}>{column.label}</Text>\n                          <View style={[\n                            styles.checkbox,\n                            { borderColor: colors.border },\n                            column.isVisible && [styles.checkboxChecked, { backgroundColor: colors.primary, borderColor: colors.primary }]\n                          ]}>\n                            {column.isVisible && (\n                              <MaterialIcons name=\"check\" size={16} color={colors.text.inverse} />\n                            )}\n                          </View>\n                        </Pressable>\n                      ))}\n                    </View>\n                  </View>\n                </ScrollView>\n              </View>\n            ) : activeTab === 'appearance' ? (\n              <View style={styles.contentWrapper}>\n                <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n                  <View style={styles.content}>\n                    <Text style={[styles.contentTitle, { color: colors.text.primary }]}>Theme Settings</Text>\n                    <View style={styles.section}>\n                      <Pressable\n                        style={[styles.menuButton, { backgroundColor: colors.background.secondary }]}\n                        onPress={toggleTheme}\n                      >\n                        <View style={styles.menuButtonContent}>\n                          <MaterialIcons \n                            name={isDark ? 'dark-mode' : 'light-mode'} \n                            size={20} \n                            color={colors.text.primary} \n                          />\n                          <Text style={[styles.menuButtonText, { color: colors.text.primary }]}>\n                            {isDark ? 'Dark Mode' : 'Light Mode'}\n                          </Text>\n                        </View>\n                      </Pressable>\n                    </View>\n                  </View>\n                </ScrollView>\n              </View>\n            ) : (\n              renderAccountTab()\n            )}\n          </Pressable>\n        </Pressable>\n      </Modal>\n\n      <Modal\n        visible={isQuiversModalVisible}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => setIsQuiversModalVisible(false)}\n      >\n        <View \n          style={[\n            styles.modalOverlay,\n            { backgroundColor: 'rgba(0, 0, 0, 0.5)' }\n          ]}\n          onStartShouldSetResponder={() => true}\n        >\n          <View \n            style={[\n              styles.modalContent,\n              { backgroundColor: colors.background.primary }\n            ]}\n          >\n            <QuiverManager\n              selectedFoils={[]}\n              onClose={() => setIsQuiversModalVisible(false)}\n              initialTab=\"saved\"\n              standalone={true}\n            />\n          </View>\n        </View>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n  },\n  button: {\n    padding: spacing.MEDIUM,\n  },\n  iconButton: {\n    padding: spacing.XSMALL,\n    borderRadius: 8,\n  },\n  modalContent: {\n    width: '100%',\n    maxWidth: 600,\n    borderRadius: 12,\n    maxHeight: '90%',\n    overflow: 'hidden',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n    borderBottomWidth: 1,\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n  },\n  columnGroup: {\n    flexDirection: 'column',\n    gap: spacing.MEDIUM,\n  },\n  filterGroup: {\n    padding: spacing.MEDIUM,\n  },\n  filterList: {\n    gap: spacing.MEDIUM,\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n  },\n  closeButton: {\n    padding: 4,\n  },\n  tabs: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n  },\n  tab: {\n    flex: 1,\n    padding: 12,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n  },\n  tabText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  activeTabText: {\n    // Remove static color reference since we're applying it dynamically\n  },\n  content: {\n    padding: 16,\n    width: '100%',\n  },\n  contentWrapper: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 12,\n  },\n  chipContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  chip: {\n    borderRadius: 16,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n  },\n  chipSelected: {},\n  chipText: {\n    fontSize: 14,\n  },\n  chipTextSelected: {},\n  columnList: {\n    gap: 12,\n  },\n  columnItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n  },\n  columnLabel: {\n    fontSize: 14,\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderRadius: 4,\n    borderWidth: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  checkboxChecked: {},\n  headerWithAction: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  contentTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  clearButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n  },\n  clearButtonText: {\n    fontSize: 14,\n  },\n  noSeriesText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  // User Menu Styles\n  userInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n    marginBottom: 16,\n  },\n  userTextInfo: {\n    flex: 1,\n  },\n  avatarImage: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n  },\n  userName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  userEmail: {\n    fontSize: 14,\n  },\n  menuDivider: {\n    height: 1,\n    marginBottom: 16,\n  },\n  menuButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      userSelect: 'none',\n      outline: 'none',\n      WebkitTapHighlightColor: 'transparent',\n    }),\n  },\n  menuButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n  },\n  menuButtonText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n}); ","import React, { lazy, Suspense, useEffect, useMemo, useContext } from 'react';\nimport { View, Text, StyleSheet, Pressable, Platform, useWindowDimensions, Alert, TouchableOpacity } from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackParamList, RootStackNavigationProp } from '../types/navigation';\nimport { SearchBar } from '../components/SearchBar';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { TableSettings } from '../components/TableSettings';\nimport { useTheme } from '../theme/ThemeContext';\nimport { useFoils } from '../hooks/useFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { FilterOptions } from '../types/filters';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT, DEFAULT_COLUMNS, getTableWidth, getContentWidth, Column } from '../constants/layout';\nimport { loadColumns, loadFilters, saveFilters } from '../utils/storage';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useApp } from '../context/AppContext';\nimport { routes } from '../utils/routes';\nimport { getEnvironmentConfig } from '../config/environment';\nimport { generateFoilId } from '../utils/foilUtils';\nimport { QuiverManager } from '../components/QuiverManager';\n\n// Lazy load screens with proper suspense boundaries\nconst BrowseScreen = React.lazy(() => import('../screens/BrowseScreen'));\nconst ComparisonScreen = React.lazy(() => import('../screens/ComparisonScreen'));\nconst QuiverScreen = React.lazy(() => import('../screens/QuiverScreen'));\nconst PrivacyPolicy = React.lazy(() => import('../screens/legal/PrivacyPolicy'));\nconst TermsOfService = React.lazy(() => import('../screens/legal/TermsOfService'));\nconst Contact = React.lazy(() => import('../screens/legal/Contact'));\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nconst ICON_NAMES = {\n  home: 'home-outline' as const,\n  browse: 'search-outline' as const,\n  compare: 'git-compare-outline' as const,\n  settings: 'settings-outline' as const,\n  quiver: 'bookmark-outline' as const,\n};\n\nfunction TabBarIcon({ name, color }: { name: keyof typeof ICON_NAMES; color: string }) {\n  if (Platform.OS === 'web') {\n    // Use text alternatives for web\n    const webIcons: Record<keyof typeof ICON_NAMES, string> = {\n      home: '🏠',\n      browse: '🔍',\n      compare: '⚖️',\n      settings: '⚙️',\n      quiver: '🔖'\n    };\n    return <Text style={{ fontSize: 20, color }}>{webIcons[name]}</Text>;\n  }\n  return <Ionicons name={ICON_NAMES[name]} size={24} color={color} />;\n}\n\n// Define linking configuration for web\nconst linking = {\n  prefixes: [getEnvironmentConfig().webUrl],\n  config: {\n    screens: {\n      Browse: {\n        path: routes.browse,\n        parse: {\n          mode: (mode: string) => mode,\n        },\n      },\n      Comparison: routes.comparison,\n      Quiver: routes.quiver,\n      Terms: routes.terms,\n      Privacy: routes.privacy,\n      Contact: routes.contact,\n    },\n  },\n};\n\n// Screen wrapper with suspense and navigation props\nconst ScreenWrapper = ({ \n  children, \n  ...props \n}: { \n  children: React.ReactElement; \n  [key: string]: any;\n}) => (\n  <Suspense fallback={<LoadingIndicator />}>\n    {React.cloneElement(children, props)}\n  </Suspense>\n);\n\nexport const AppHeader = () => {\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { colors } = useTheme();\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const { foils } = useFoils();\n  const { \n    searchQuery, \n    setSearchQuery, \n    filters, \n    setFilters, \n    columns, \n    setColumns,\n    setCurrentScreen,\n    showQuiverManager\n  } = useApp();\n  const { filterOptions } = useFilteredFoils(foils, filters);\n\n  // Calculate brands from foils\n  const brands = React.useMemo(() => {\n    if (!foils?.length) return [];\n    return [...new Set(foils.map(foil => foil.brand))].sort();\n  }, [foils]);\n\n  // Add missing function definitions\n  const handleLogoPress = () => {\n    navigation.navigate('Browse', {});\n  };\n\n  const handleSearch = (text: string) => {\n    setSearchQuery(text);\n    navigation.setParams({ searchQuery: text });\n  };\n\n  const getViewMode = (route: any) => {\n    if (route.name === 'Comparison') return 'comparison';\n    if (route.name === 'Quiver') return 'quiver';\n    return 'browse';\n  };\n\n  const getSearchPlaceholder = (route: any) => {\n    switch (route.name) {\n      case 'Comparison':\n        return 'Search foils to add to comparison...';\n      case 'Quiver':\n        return 'Search foils to add to quiver...';\n      default:\n        return 'Search foils...';\n    }\n  };\n\n  const handleSearchFocus = (route: any) => {\n    if (route.name === 'Browse') {\n      navigation.setParams({ showSearchDropdown: true });\n    }\n  };\n\n  const handleFilterChange = (type: keyof FilterOptions, value: string) => {\n    setFilters(prev => ({\n      ...prev,\n      [type]: prev[type].includes(value)\n        ? prev[type].filter(item => item !== value)\n        : [...prev[type], value]\n    }));\n  };\n\n  const handleFilterChangeWrapper = (type: string, value: string) => {\n    handleFilterChange(type as keyof FilterOptions, value);\n  };\n\n  const handleClearFilters = () => {\n    setFilters({\n      brands: [],\n      series: [],\n      type: []\n    });\n  };\n\n  const handleColumnVisibilityChange = (columnId: string) => {\n    setColumns(prev => \n      prev.map(col => \n        col.id === columnId ? { ...col, isVisible: !col.isVisible } : col\n      )\n    );\n  };\n\n  const handleResetColumns = () => {\n    setColumns(DEFAULT_COLUMNS);\n  };\n\n  // Calculate table width based on visible columns\n  const tableWidth = React.useMemo(() => getTableWidth(columns), [columns]);\n\n  // Calculate content width including padding\n  const contentWidth = React.useMemo(() => \n    getContentWidth(tableWidth, width, isMobile), \n    [tableWidth, width, isMobile]\n  );\n\n  // Calculate container width for header alignment\n  const containerWidth = React.useMemo(() => {\n    if (isMobile) {\n      return '100%';\n    }\n    // Match the table's container width exactly\n    return Math.min(tableWidth + (CONTAINER_PADDING * 2), width);\n  }, [tableWidth, width, isMobile]);\n\n  // Load saved column settings on mount\n  useEffect(() => {\n    const loadSavedColumnSettings = async () => {\n      try {\n        const savedColumns = await loadColumns();\n        if (savedColumns) {\n          const updatedColumns = DEFAULT_COLUMNS.map(col => ({\n            ...col,\n            isVisible: typeof savedColumns[col.id] === 'boolean' ? savedColumns[col.id] : col.isVisible\n          }));\n          setColumns(updatedColumns);\n        }\n      } catch (error) {\n        console.error('Error loading column settings:', error);\n      }\n    };\n\n    loadSavedColumnSettings();\n  }, []);\n\n  // Load saved filter settings on mount\n  useEffect(() => {\n    const loadSavedSettings = async () => {\n      try {\n        const savedFilters = await loadFilters();\n        if (savedFilters) {\n          setFilters({\n            brands: savedFilters.brands || [],\n            series: savedFilters.series || [],\n            type: savedFilters.types || []\n          });\n        }\n      } catch (error) {\n        console.error('Error loading filter settings:', error);\n      }\n    };\n\n    loadSavedSettings();\n  }, []);\n\n  const headerMainContainerStyle = React.useMemo(() => {\n    if (isMobile) {\n      return {\n        width: '100%' as const,\n        paddingHorizontal: CONTAINER_PADDING\n      };\n    }\n\n    // For web, match the table width exactly without additional padding\n    const containerWidth = getTableWidth(columns);\n    return {\n      width: containerWidth,\n      maxWidth: getContentWidth(containerWidth, width, false),\n      alignSelf: 'center' as const\n    };\n  }, [columns, width, isMobile]);\n\n  const renderHeaderRight = (route: any) => {\n    if (isMobile) {\n      return (\n        <View style={styles.headerRightContainerMobile}>\n          <TouchableOpacity\n            style={[styles.headerButton]}\n            onPress={showQuiverManager}\n          >\n            <TabBarIcon name=\"quiver\" color={colors.text.primary} />\n          </TouchableOpacity>\n          <TableSettings\n            filterOptions={filterOptions}\n            selectedBrands={filters.brands}\n            selectedSeries={filters.series}\n            selectedTypes={filters.type}\n            onFilterChange={handleFilterChangeWrapper}\n            onClearFilters={handleClearFilters}\n            columns={columns}\n            onColumnVisibilityChange={handleColumnVisibilityChange}\n            onResetColumns={handleResetColumns}\n            foils={foils}\n          />\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.headerRightContainerWeb}>\n        <TouchableOpacity\n          style={[styles.headerButton]}\n          onPress={showQuiverManager}\n        >\n          <TabBarIcon name=\"quiver\" color={colors.text.primary} />\n          {!isMobile && (\n            <Text style={[styles.headerButtonText, { color: colors.text.primary }]}>\n              My Quivers\n            </Text>\n          )}\n        </TouchableOpacity>\n        <TableSettings\n          filterOptions={filterOptions}\n          selectedBrands={filters.brands}\n          selectedSeries={filters.series}\n          selectedTypes={filters.type}\n          onFilterChange={handleFilterChangeWrapper}\n          onClearFilters={handleClearFilters}\n          columns={columns}\n          onColumnVisibilityChange={handleColumnVisibilityChange}\n          onResetColumns={handleResetColumns}\n          foils={foils}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: colors.background.primary,\n        },\n        headerShadowVisible: false,\n      }}\n    >\n      <Stack.Screen \n        name=\"Browse\"\n        options={({ route }) => ({\n          headerTitle: route.params?.title || '',\n          headerLeft: () => (\n            <View style={[\n              styles.headerOuterContainer,\n              { backgroundColor: colors.background.primary },\n              !isMobile && { alignItems: 'center' }\n            ]}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <View style={styles.headerTopRowMobile}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainerMobile,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitleMobile, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={styles.searchBarContainerMobile}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  headerMainContainerStyle\n                ]}>\n                  <View style={[\n                    styles.headerContentWeb,\n                    { \n                      width: '100%',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }\n                  ]}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={[styles.searchBarContainerWeb, { flex: 1 }]}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n        })}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <BrowseScreen\n              {...props}\n              filters={filters}\n              onFilterChange={handleFilterChangeWrapper}\n              columns={columns}\n              brands={brands}\n            />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Comparison\"\n        options={({ route }) => ({\n          headerTitle: route.params?.title || '',\n          headerLeft: () => (\n            <View style={[\n              styles.headerOuterContainer,\n              { backgroundColor: colors.background.primary },\n              !isMobile && { alignItems: 'center' }\n            ]}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <View style={styles.headerTopRowMobile}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainerMobile,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitleMobile, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={styles.searchBarContainerMobile}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  headerMainContainerStyle\n                ]}>\n                  <View style={[\n                    styles.headerContentWeb,\n                    { \n                      width: '100%',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }\n                  ]}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={[styles.searchBarContainerWeb, { flex: 1 }]}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n        })}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <ComparisonScreen {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Quiver\"\n        options={({ route }) => ({\n          headerTitle: '',\n          headerLeft: () => (\n            <View style={[\n              styles.headerOuterContainer,\n              { backgroundColor: colors.background.primary },\n              !isMobile && { alignItems: 'center' }\n            ]}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <View style={styles.headerTopRowMobile}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainerMobile,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitleMobile, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={styles.searchBarContainerMobile}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  headerMainContainerStyle\n                ]}>\n                  <View style={[\n                    styles.headerContentWeb,\n                    { \n                      width: '100%',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }\n                  ]}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={[styles.searchBarContainerWeb, { flex: 1 }]}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n        })}\n      >\n        {(props) => {\n          const currentQuiverFoils = React.useMemo(() => {\n            if (!props.route.params?.foil_ids || !Array.isArray(foils)) return [];\n            return foils.filter(f => {\n              if (!f) return false;\n              const foilId = generateFoilId(f);\n              return props.route.params.foil_ids.includes(foilId);\n            });\n          }, [props.route.params?.foil_ids, foils]);\n\n          return (\n            <ScreenWrapper>\n              <QuiverScreen {...props}\n                searchProps={{\n                  value: searchQuery,\n                  onChangeText: handleSearch,\n                  onClear: () => setSearchQuery(''),\n                  mode: 'quiver',\n                  placeholder: 'Search foils in quiver...'\n                }}\n                tableSettingsProps={{\n                  filterOptions,\n                  selectedBrands: filters.brands,\n                  selectedSeries: filters.series,\n                  selectedTypes: filters.type,\n                  onFilterChange: handleFilterChangeWrapper,\n                  onClearFilters: handleClearFilters,\n                  columns,\n                  onColumnVisibilityChange: handleColumnVisibilityChange,\n                  onResetColumns: handleResetColumns,\n                  foils: currentQuiverFoils\n                }}\n              />\n            </ScreenWrapper>\n          );\n        }}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Terms\"\n        options={{\n          headerShown: false,\n        }}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <TermsOfService {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Privacy\"\n        options={{\n          headerShown: false,\n        }}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <PrivacyPolicy {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Contact\"\n        options={{\n          headerShown: false,\n        }}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <Contact {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n    </Stack.Navigator>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerOuterContainer: {\n    flex: 1,\n    paddingHorizontal: CONTAINER_PADDING,\n  },\n  // Mobile Styles\n  headerMainContainerMobile: {\n    width: '100%',\n  },\n  headerTopRowMobile: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    height: 48,\n    width: '100%',\n    gap: 8,\n  },\n  logoContainerMobile: {\n    height: '100%',\n    justifyContent: 'center',\n    minWidth: 80,\n  },\n  headerTitleMobile: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  searchBarContainerMobile: {\n    flex: 1,\n    height: 36,\n    minWidth: 120,\n    maxWidth: 200,\n  },\n  headerRightContainerMobile: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n    zIndex: 2000,\n  },\n  // Web Styles\n  headerMainContainerWeb: {\n    height: 72,\n    width: '100%',\n  },\n  headerContentWeb: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 24,\n    height: '100%',\n    width: '100%',\n  },\n  searchBarContainerWeb: {\n    flex: 1,\n    height: 40,\n  },\n  // Common Styles\n  logoContainer: {\n    height: '100%',\n    justifyContent: 'center',\n    minWidth: 120,\n  },\n  logoPressed: {\n    opacity: 0.7,\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  headerRightContainerWeb: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n    paddingRight: CONTAINER_PADDING,\n    zIndex: 2000,\n  },\n  headerButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    padding: 6,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      userSelect: 'none',\n    }),\n  },\n  headerButtonText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n}); ","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNavigationContainerRef, LinkingOptions, getStateFromPath, getPathFromState } from '@react-navigation/native';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { View } from 'react-native';\nimport { ErrorBoundary } from './src/components/ErrorBoundary';\nimport { ThemeProvider } from './src/theme/ThemeContext';\nimport { AppProvider } from './src/context/AppContext';\nimport { LoadingIndicator } from './src/components/LoadingIndicator';\nimport { QuiverManager } from './src/components/QuiverManager';\nimport { routes } from './src/utils/routes';\nimport { RootStackParamList } from './src/types/navigation';\nimport { getPrefixes } from './src/config/environment';\nimport { AppHeader } from './src/navigation/AppHeader';\nimport { useApp } from './src/context/AppContext';\n\nfunction AppContent() {\n  const navigationRef = createNavigationContainerRef<RootStackParamList>();\n  const { isQuiverManagerVisible, hideQuiverManager } = useApp();\n\n  const linking: LinkingOptions<RootStackParamList> = {\n    prefixes: getPrefixes(),\n    config: {\n      screens: {\n        Browse: {\n          path: '/',\n          parse: {\n            mode: (mode: string) => mode,\n          },\n          stringify: {\n            mode: (mode: string) => mode,\n          },\n        },\n        Comparison: {\n          path: '/comparison',\n          exact: true,\n          stringify: {\n            quiverName: (name: string) => name,\n            foils: (foils: any[]) => JSON.stringify(foils),\n          },\n        },\n        Quiver: {\n          path: '/quiver/:quiverId',\n          parse: {\n            quiverId: (id: string) => id,\n            quiverName: (name: string) => name,\n            foils: (foils: string) => foils ? JSON.parse(foils) : undefined,\n          },\n          stringify: {\n            quiverId: (id: string) => id,\n            quiverName: (name: string) => name,\n            foils: (foils: any[]) => JSON.stringify(foils),\n          },\n        },\n        Terms: '/terms',\n        Privacy: '/privacy',\n        Contact: '/contact',\n      },\n    },\n    getStateFromPath: (path, options) => {\n      // Handle direct navigation to comparison\n      if (path === '/comparison') {\n        return {\n          routes: [\n            {\n              name: 'Comparison',\n              params: {},\n            },\n          ],\n        };\n      }\n      return getStateFromPath(path, options);\n    },\n    getPathFromState: (state, config) => {\n      // Handle comparison route specially\n      if (state.routes[state.routes.length - 1].name === 'Comparison') {\n        return '/comparison';\n      }\n      const path = getPathFromState(state, config);\n      return path || '/';\n    },\n  };\n\n  return (\n    <NavigationContainer \n      ref={navigationRef}\n      linking={linking}\n      fallback={<LoadingIndicator />}\n    >\n      <View style={{ flex: 1 }}>\n        <AppHeader />\n        <QuiverManager\n          standalone={false}\n          isModalVisible={isQuiverManagerVisible}\n          onClose={hideQuiverManager}\n          initialTab=\"saved\"\n        />\n      </View>\n    </NavigationContainer>\n  );\n}\n\nexport default function App() {\n  return (\n    <ThemeProvider>\n      <AppProvider>\n        <HelmetProvider>\n          <ErrorBoundary>\n            <SafeAreaProvider>\n              <AppContent />\n            </SafeAreaProvider>\n          </ErrorBoundary>\n        </HelmetProvider>\n      </AppProvider>\n    </ThemeProvider>\n  );\n} ","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import React from 'react';\nimport { View, Text, ActivityIndicator, StyleSheet } from 'react-native';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\ninterface LoadingIndicatorProps {\n  message?: string;\n  size?: 'small' | 'large';\n  fullScreen?: boolean;\n}\n\nexport const LoadingIndicator: React.FC<LoadingIndicatorProps> = ({\n  message = 'Loading...',\n  size = 'large',\n  fullScreen = true,\n}) => {\n  const { colors } = useTheme();\n\n  return (\n    <View\n      style={[\n        styles.container,\n        fullScreen && styles.fullScreen,\n        { backgroundColor: colors.background.primary },\n      ]}\n    >\n      <ActivityIndicator size={size} color={colors.primary} />\n      {message && (\n        <Text style={[styles.message, { color: colors.text.secondary }]}>\n          {message}\n        </Text>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: spacing.LARGE,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fullScreen: {\n    flex: 1,\n  },\n  message: {\n    marginTop: spacing.MEDIUM,\n    fontSize: 16,\n    textAlign: 'center',\n  },\n}); ","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Modal,\n  TextInput,\n  ScrollView,\n  Alert,\n  Platform,\n  useWindowDimensions,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { useQuivers } from '../hooks/useQuivers';\nimport { BaseProduct } from '../types/scraper';\nimport { Quiver } from '../types/quiver';\nimport { useTheme } from '../theme/ThemeContext';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT } from '../constants/layout';\nimport { spacing } from '../theme/spacing';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { trackAction, ANALYTICS_EVENTS } from '../utils/analytics';\nimport { logger } from '../utils/logger';\nimport { useApp } from '../context/AppContext';\nimport { generateFoilId } from '../utils/foilUtils';\n\ninterface QuiverManagerProps {\n  selectedFoils?: BaseProduct[];\n  onClose?: () => void;\n  initialTab?: 'save' | 'saved';\n  standalone?: boolean;\n  isModalVisible?: boolean;\n  hideStandaloneButton?: boolean;\n  onQuiverSaved?: (quiverId: string, quiverName: string) => void;\n}\n\nexport const QuiverManager: React.FC<QuiverManagerProps> = ({\n  selectedFoils = [],\n  onClose,\n  initialTab = 'save',\n  standalone = false,\n  isModalVisible,\n  hideStandaloneButton = false,\n  onQuiverSaved,\n}) => {\n  const { colors } = useTheme();\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { setSelectedFoils } = useApp();\n\n  const [isModalVisibleInternal, setIsModalVisibleInternal] = useState(!standalone);\n  const modalVisible = isModalVisible !== undefined ? isModalVisible : isModalVisibleInternal;\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [activeTab, setActiveTab] = useState<'save' | 'saved'>(initialTab);\n  const [editingQuiverId, setEditingQuiverId] = useState<string | null>(null);\n  const [editingName, setEditingName] = useState('');\n\n  const {\n    quivers,\n    isLoading,\n    error,\n    createQuiver,\n    deleteQuiver,\n    reloadQuivers,\n    updateQuiver\n  } = useQuivers();\n\n  const handleCreateQuiver = async () => {\n    if (!name.trim()) {\n      if (Platform.OS === 'web') {\n        window.alert('Please enter a name for your quiver');\n      } else {\n        Alert.alert('Error', 'Please enter a name for your quiver');\n      }\n      return;\n    }\n\n    try {\n      const result = await createQuiver({\n        name: name.trim(),\n        description: description.trim(),\n        foils: selectedFoils, // Use selected foils if they exist\n      });\n\n      if (result) {\n        trackAction(ANALYTICS_EVENTS.SAVE_QUIVER, {\n          foilCount: selectedFoils.length,\n          isNewQuiver: true,\n          fromComparison: selectedFoils.length > 0,\n        });\n        \n        setName('');\n        setDescription('');\n        setIsModalVisibleInternal(false);\n        onClose?.();\n        onQuiverSaved?.(result.id, result.name);\n\n        // Navigate to QuiverView with the new quiver\n        navigation.navigate('Quiver', {\n          quiverId: result.id,\n          quiverName: result.name,\n          foil_ids: selectedFoils.map(f => generateFoilId(f))\n        });\n      } else {\n        throw new Error('Failed to create quiver - no result returned');\n      }\n    } catch (error) {\n      console.error('Error creating quiver:', error);\n      if (Platform.OS === 'web') {\n        window.alert(`Failed to save quiver: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      } else {\n        Alert.alert('Error', `Failed to save quiver: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    }\n  };\n\n  const handleDeleteQuiver = async (quiverId: string) => {\n    try {\n      const userConfirmed = await new Promise<boolean>((resolve) => {\n        Alert.alert(\n          'Delete Quiver',\n          'Are you sure you want to delete this quiver? This action cannot be undone.',\n          [\n            {\n              text: 'Cancel',\n              style: 'cancel',\n              onPress: () => resolve(false),\n            },\n            {\n              text: 'Delete',\n              style: 'destructive',\n              onPress: () => resolve(true),\n            },\n          ],\n          { cancelable: false }\n        );\n      });\n\n      if (!userConfirmed) return;\n\n      const success = await deleteQuiver(quiverId);\n      \n      if (success) {\n        trackAction(ANALYTICS_EVENTS.DELETE_QUIVER, {\n          quiverId,\n        });\n        Alert.alert('Success', 'Quiver deleted successfully');\n      } else {\n        Alert.alert('Error', 'Failed to delete quiver. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error deleting quiver:', error);\n      Alert.alert('Error', 'An unexpected error occurred. Please try again.');\n    }\n  };\n\n  const handleViewQuiver = (quiver: Quiver) => {\n    // Close the modal first\n    setIsModalVisibleInternal(false);\n    onClose?.();\n\n    // Clear any existing selected foils before navigating\n    setSelectedFoils([]);\n\n    // Navigate to Quiver screen with the quiver's data\n    navigation.navigate('Quiver', {\n        quiverId: quiver.id,\n        quiverName: quiver.name,\n        foil_ids: quiver.foil_ids || []\n    });\n  };\n\n  const handleStartRename = (quiver: Quiver) => {\n    setEditingQuiverId(quiver.id);\n    setEditingName(quiver.name);\n  };\n\n  const handleSaveRename = async () => {\n    if (!editingQuiverId || !editingName.trim()) return;\n\n    try {\n      const success = await updateQuiver(editingQuiverId, { name: editingName.trim() });\n      if (success) {\n        trackAction(ANALYTICS_EVENTS.UPDATE_QUIVER, {\n          quiverId: editingQuiverId,\n          action: 'rename',\n        });\n        \n        if (Platform.OS === 'web') {\n          window.alert('Quiver renamed successfully');\n        } else {\n          Alert.alert('Success', 'Quiver renamed successfully');\n        }\n        setEditingQuiverId(null);\n        setEditingName('');\n        reloadQuivers();\n      }\n    } catch (error) {\n      console.error('Error renaming quiver:', error);\n      Alert.alert('Error', 'Failed to rename quiver');\n    }\n  };\n\n  const getFoilCount = (quiver: Quiver) => {\n    if (quiver.foil_ids && Array.isArray(quiver.foil_ids)) {\n        return quiver.foil_ids.length;\n    }\n    return 0;\n  };\n\n  const renderQuiverList = () => {\n    if (isLoading) {\n      return (\n        <View style={styles.centerContent}>\n          <Text style={[styles.message, { color: colors.text.secondary }]}>\n            Loading quivers...\n          </Text>\n        </View>\n      );\n    }\n\n    if (error) {\n      return (\n        <View style={styles.centerContent}>\n          <Text style={[styles.message, { color: colors.error }]}>\n            {error}\n          </Text>\n        </View>\n      );\n    }\n\n    return (\n      <View>\n        {quivers.length === 0 ? (\n          <View style={styles.centerContent}>\n            <Text style={[styles.message, { color: colors.text.secondary }]}>\n              No saved quivers yet\n            </Text>\n          </View>\n        ) : (\n          quivers.map((quiver) => {\n            return (\n              <View\n                key={quiver.id}\n                style={[\n                  styles.quiverItem,\n                  { borderBottomColor: colors.border }\n                ]}\n              >\n                <TouchableOpacity \n                  style={styles.quiverInfo}\n                  onPress={() => handleViewQuiver(quiver)}\n                >\n                  {editingQuiverId === quiver.id ? (\n                    <View style={styles.renameContainer}>\n                      <TextInput\n                        style={[\n                          styles.renameInput,\n                          { \n                            color: colors.text.primary,\n                            borderColor: colors.border,\n                            backgroundColor: colors.background.secondary\n                          }\n                        ]}\n                        value={editingName}\n                        onChangeText={setEditingName}\n                        placeholder=\"Enter new name\"\n                        placeholderTextColor={colors.text.tertiary}\n                        autoFocus\n                      />\n                      <TouchableOpacity\n                        style={[styles.renameButton, { backgroundColor: colors.error }]}\n                        onPress={() => {\n                          setEditingQuiverId(null);\n                          setEditingName('');\n                        }}\n                      >\n                        <Text style={[styles.renameButtonText, { color: colors.text.inverse }]}>Cancel</Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={[styles.renameButton, { backgroundColor: colors.primary }]}\n                        onPress={handleSaveRename}\n                      >\n                        <Text style={[styles.renameButtonText, { color: colors.text.inverse }]}>Save</Text>\n                      </TouchableOpacity>\n                    </View>\n                  ) : (\n                    <>\n                      <View style={styles.quiverNameContainer}>\n                        <Text style={[styles.quiverName, { color: colors.text.primary }]}>\n                          {quiver.name}\n                        </Text>\n                        <TouchableOpacity\n                          onPress={() => handleStartRename(quiver)}\n                          style={styles.renameIcon}\n                        >\n                          {Platform.OS === 'web' ? (\n                            <Text style={{ color: colors.text.secondary }}>✎</Text>\n                          ) : (\n                            <Ionicons name=\"pencil\" size={16} color={colors.text.secondary} />\n                          )}\n                        </TouchableOpacity>\n                      </View>\n                      {quiver.description && (\n                        <Text style={[styles.quiverDescription, { color: colors.text.secondary }]}>\n                          {quiver.description}\n                        </Text>\n                      )}\n                      <Text style={[styles.quiverMeta, { color: colors.text.tertiary }]}>\n                        {getFoilCount(quiver)} foils • {new Date(quiver.updated_at).toLocaleDateString()}\n                      </Text>\n                    </>\n                  )}\n                </TouchableOpacity>\n                {Platform.OS === 'web' ? (\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      try {\n                        const confirmed = window.confirm('Are you sure you want to delete this quiver? This action cannot be undone.');\n                        if (confirmed) {\n                          deleteQuiver(quiver.id).then(success => {\n                            if (success) {\n                              reloadQuivers();\n                            } else {\n                              window.alert('Failed to delete quiver');\n                            }\n                          }).catch(error => {\n                            console.error('Delete error:', error);\n                            window.alert('Error deleting quiver');\n                          });\n                        }\n                      } catch (error) {\n                        console.error('Delete error:', error);\n                        window.alert('Error in delete operation');\n                      }\n                    }}\n                    style={{\n                      padding: '8px',\n                      borderWidth: '1px',\n                      borderStyle: 'solid',\n                      borderColor: colors.error,\n                      borderRadius: '8px',\n                      minWidth: '70px',\n                      backgroundColor: colors.background.primary,\n                      cursor: 'pointer',\n                      color: colors.error,\n                      fontWeight: '600',\n                      fontSize: '14px',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      zIndex: 10,\n                      position: 'relative',\n                      pointerEvents: 'auto',\n                    }}\n                  >\n                    Delete\n                  </button>\n                ) : (\n                  <TouchableOpacity\n                    style={[\n                      styles.deleteButton, \n                      { \n                        borderColor: colors.error,\n                        backgroundColor: colors.background.primary \n                      }\n                    ]}\n                    onPress={() => {\n                      handleDeleteQuiver(quiver.id);\n                    }}\n                  >\n                    <Ionicons name=\"trash-outline\" size={20} color={colors.error} />\n                  </TouchableOpacity>\n                )}\n              </View>\n            );\n          })\n        )}\n        \n        <View style={styles.createButtonContainer}>\n          <TouchableOpacity\n            style={[\n              styles.createEmptyButton,\n              { backgroundColor: colors.primary }\n            ]}\n            onPress={() => setActiveTab('save')}\n          >\n            <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n              Create New Quiver\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  const content = (\n    <>\n      <View style={[styles.modalHeader, { borderBottomColor: colors.border }]}>\n        <Text style={[styles.modalTitle, { color: colors.text.primary }]}>\n          Manage Quivers\n        </Text>\n        {onClose && (\n          <TouchableOpacity onPress={onClose}>\n            {Platform.OS === 'web' ? (\n              <Text style={{ fontSize: 24, color: colors.text.primary }}>×</Text>\n            ) : (\n              <Ionicons name=\"close\" size={24} color={colors.text.primary} />\n            )}\n          </TouchableOpacity>\n        )}\n      </View>\n\n      {selectedFoils.length > 0 && (\n        <View style={[styles.tabContainer, { borderBottomColor: colors.border }]}>\n          <TouchableOpacity\n            style={[\n              styles.tab,\n              activeTab === 'save' && [\n                styles.activeTab,\n                { borderBottomColor: colors.primary }\n              ]\n            ]}\n            onPress={() => setActiveTab('save')}\n          >\n            <Text\n              style={[\n                styles.tabText,\n                { color: activeTab === 'save' ? colors.primary : colors.text.secondary }\n              ]}\n            >\n              Save Quiver\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={[\n              styles.tab,\n              activeTab === 'saved' && [\n                styles.activeTab,\n                { borderBottomColor: colors.primary }\n              ]\n            ]}\n            onPress={() => setActiveTab('saved')}\n          >\n            <Text\n              style={[\n                styles.tabText,\n                { color: activeTab === 'saved' ? colors.primary : colors.text.secondary }\n              ]}\n            >\n              Saved Quivers\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n\n      <ScrollView style={styles.modalBody}>\n        {activeTab === 'save' ? (\n          <View style={styles.form}>\n            <View style={styles.formField}>\n              <Text style={[styles.label, { color: colors.text.secondary }]}>\n                Name\n              </Text>\n              <TextInput\n                style={[\n                  styles.input,\n                  { \n                    color: colors.text.primary,\n                    borderColor: colors.border,\n                    backgroundColor: colors.background.secondary\n                  }\n                ]}\n                value={name}\n                onChangeText={setName}\n                placeholder=\"Enter quiver name\"\n                placeholderTextColor={colors.text.tertiary}\n              />\n            </View>\n\n            <View style={styles.formField}>\n              <Text style={[styles.label, { color: colors.text.secondary }]}>\n                Description (optional)\n              </Text>\n              <TextInput\n                style={[\n                  styles.input,\n                  styles.textArea,\n                  { \n                    color: colors.text.primary,\n                    borderColor: colors.border,\n                    backgroundColor: colors.background.secondary\n                  }\n                ]}\n                value={description}\n                onChangeText={setDescription}\n                placeholder=\"Enter description\"\n                placeholderTextColor={colors.text.tertiary}\n                multiline\n                numberOfLines={3}\n              />\n            </View>\n\n            <TouchableOpacity\n              style={[\n                styles.createButton,\n                { backgroundColor: colors.primary }\n              ]}\n              onPress={handleCreateQuiver}\n            >\n              <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n                {selectedFoils.length > 0 ? 'Save Quiver' : 'Create Empty Quiver'}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        ) : (\n          <View style={styles.quiverList}>\n            {renderQuiverList()}\n          </View>\n        )}\n      </ScrollView>\n    </>\n  );\n\n  if (standalone) {\n    return content;\n  }\n\n  return (\n    <>\n      {selectedFoils.length > 0 && !standalone && !isModalVisible && !hideStandaloneButton && (\n        <TouchableOpacity\n          style={[\n            styles.saveButton,\n            { backgroundColor: colors.primary }\n          ]}\n          onPress={() => setIsModalVisibleInternal(true)}\n        >\n          {Platform.OS === 'web' ? (\n            <Text style={{ fontSize: 20, color: colors.text.inverse, marginRight: 8 }}>+</Text>\n          ) : (\n            <Ionicons name=\"bookmark-outline\" size={20} color={colors.text.inverse} />\n          )}\n          <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n            Save Quiver\n          </Text>\n        </TouchableOpacity>\n      )}\n      <Modal\n        visible={modalVisible}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => {\n          setIsModalVisibleInternal(false);\n          onClose?.();\n        }}\n      >\n        <TouchableOpacity\n          style={[\n            styles.modalOverlay,\n            standalone && styles.standaloneOverlay\n          ]}\n          activeOpacity={1}\n          onPress={() => {\n            setIsModalVisibleInternal(false);\n            onClose?.();\n          }}\n        >\n          <TouchableOpacity\n            style={[\n              styles.modalContent,\n              { backgroundColor: colors.background.primary },\n              isMobile && styles.modalContentMobile\n            ]}\n            activeOpacity={1}\n            onPress={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          >\n            {content}\n          </TouchableOpacity>\n        </TouchableOpacity>\n      </Modal>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  saveButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    gap: 8,\n    minHeight: 40,\n    minWidth: 120,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n  buttonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    textAlign: 'center',\n    ...(Platform.OS === 'web' && {\n      userSelect: 'none',\n    }),\n  },\n  modalOverlay: {\n    position: 'absolute' as const,\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: CONTAINER_PADDING,\n    zIndex: 2000,\n    ...(Platform.OS === 'web' && {\n      position: 'absolute' as const,\n      pointerEvents: 'auto',\n    }),\n  },\n  modalContent: {\n    width: '100%',\n    maxWidth: 600,\n    borderRadius: 12,\n    maxHeight: '90%',\n    zIndex: 2001,\n    ...(Platform.OS === 'web' && {\n      pointerEvents: 'auto',\n      userSelect: 'none',\n    }),\n  },\n  modalContentMobile: {\n    maxWidth: '100%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n    borderBottomWidth: 1,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n  },\n  modalBody: {\n    flex: 1,\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: spacing.MEDIUM,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n  },\n  tabText: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  form: {\n    padding: spacing.LARGE,\n  },\n  formField: {\n    marginBottom: spacing.LARGE,\n  },\n  label: {\n    fontSize: 14,\n    marginBottom: spacing.SMALL,\n  },\n  input: {\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: spacing.MEDIUM,\n    fontSize: 16,\n    ...(Platform.OS === 'web' && {\n      outlineStyle: 'none',\n    }),\n  },\n  textArea: {\n    height: 80,\n    paddingTop: spacing.MEDIUM,\n    textAlignVertical: 'top',\n  },\n  createButton: {\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  quiverList: {\n    padding: spacing.LARGE,\n  },\n  quiverItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: spacing.MEDIUM,\n    borderBottomWidth: 1,\n  },\n  quiverInfo: {\n    flex: 1,\n    marginRight: spacing.MEDIUM,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  quiverName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  quiverDescription: {\n    fontSize: 14,\n    marginBottom: 4,\n  },\n  quiverMeta: {\n    fontSize: 12,\n  },\n  deleteButton: {\n    padding: spacing.SMALL,\n    borderWidth: 1,\n    borderRadius: 8,\n    minWidth: Platform.OS === 'web' ? 70 : 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 10,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      position: 'relative',\n    }),\n  },\n  deleteIcon: {\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  centerContent: {\n    padding: spacing.LARGE,\n    alignItems: 'center',\n  },\n  message: {\n    fontSize: 16,\n  },\n  standaloneOverlay: {\n    position: 'relative',\n    backgroundColor: 'transparent',\n  },\n  renameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n  },\n  renameInput: {\n    flex: 1,\n    height: 32,\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: spacing.SMALL,\n    fontSize: 14,\n  },\n  renameButton: {\n    paddingHorizontal: spacing.MEDIUM,\n    paddingVertical: spacing.SMALL,\n    borderRadius: 4,\n  },\n  renameButtonText: {\n    fontSize: 12,\n    fontWeight: '500',\n  },\n  quiverNameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n  },\n  renameIcon: {\n    padding: spacing.SMALL,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  createButtonContainer: {\n    borderTopWidth: 1,\n    marginTop: spacing.LARGE,\n    paddingTop: spacing.LARGE,\n    paddingBottom: spacing.MEDIUM,\n  },\n  createEmptyButton: {\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    alignItems: 'center',\n    minWidth: 180,\n    alignSelf: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n}); ","// Supabase Configuration\nexport const SUPABASE_URL = 'https://zhylhvuhhoialsgqrxxr.supabase.co';\nexport const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpoeWxodnVoaG9pYWxzZ3FyeHhyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzkxNjM3NTgsImV4cCI6MjA1NDczOTc1OH0.wrZ05wA3EcbBubG3Mrxmx--fA9ThE2_M9k9WYTmGpag';\n\n// Google OAuth Configuration\nexport const GOOGLE_CLIENT_ID = '159399186219-fagq1jdgjps8q6fq70e9ua8pnmjac7bs.apps.googleusercontent.com'; ","import { Platform } from 'react-native';\n\nexport type Environment = 'development' | 'staging' | 'production';\n\ninterface EnvironmentConfig {\n  apiUrl: string;\n  webUrl: string;\n  appScheme: string;\n}\n\nconst ENV: Environment = process.env.EXPO_PUBLIC_ENV as Environment || 'development';\n\nconst configs: Record<Environment, EnvironmentConfig> = {\n  development: {\n    apiUrl: 'http://localhost:3000',\n    webUrl: 'http://localhost:19006',\n    appScheme: 'foilquiver-dev',\n  },\n  staging: {\n    apiUrl: 'https://api.staging.foilquiver.com',\n    webUrl: 'https://staging.foilquiver.com',\n    appScheme: 'foilquiver-staging',\n  },\n  production: {\n    apiUrl: 'https://api.foilquiver.com',\n    webUrl: 'https://foilquiver.com',\n    appScheme: 'foilquiver',\n  },\n};\n\nexport const getEnvironmentConfig = (): EnvironmentConfig => {\n  return configs[ENV];\n};\n\nexport const getPrefixes = (): string[] => {\n  const config = getEnvironmentConfig();\n  if (Platform.OS === 'web') {\n    return [config.webUrl];\n  }\n  return [`${config.appScheme}://`];\n};\n\nexport const isProduction = () => ENV === 'production';\nexport const isDevelopment = () => ENV === 'development';\nexport const isStaging = () => ENV === 'staging'; ","// Layout constants\nexport const CONTAINER_PADDING = 16;\nexport const MAX_CONTENT_WIDTH = 1200;\nexport const MOBILE_BREAKPOINT = 768;\n\n// Column width constants\nexport const COLUMN_WIDTHS = {\n  brand: 100,\n  series: 120,\n  model: 150,\n  area: 80,\n  wingspan: 80,\n  aspectRatio: 80,\n  type: 80,\n  price: 105,\n  link: 80,\n} as const;\n\nexport type Column = {\n  id: keyof typeof COLUMN_WIDTHS;\n  label: string;\n  isVisible: boolean;\n};\n\n// Default column configuration\nexport const DEFAULT_COLUMNS: Column[] = [\n  { id: 'brand', label: 'Brand', isVisible: true },\n  { id: 'series', label: 'Series', isVisible: false },\n  { id: 'model', label: 'Model', isVisible: true },\n  { id: 'area', label: 'Area', isVisible: true },\n  { id: 'wingspan', label: 'Span', isVisible: true },\n  { id: 'aspectRatio', label: 'AR', isVisible: true },\n  { id: 'type', label: 'Type', isVisible: true },\n  { id: 'price', label: 'Price', isVisible: true },\n  { id: 'link', label: 'Link', isVisible: true },\n];\n\n// Helper functions for width calculations\nexport const getTableWidth = (columns: Column[]) => {\n  return columns.reduce((total, column) => {\n    if (column.isVisible) {\n      return total + (COLUMN_WIDTHS[column.id] || 100);\n    }\n    return total;\n  }, 0);\n};\n\nexport const getContentWidth = (tableWidth: number, screenWidth: number, isMobile: boolean) => {\n  if (isMobile) {\n    return screenWidth;\n  }\n  return Math.min(tableWidth, screenWidth - 48);\n}; ","import React, { createContext, useContext, useState, useEffect, Dispatch, SetStateAction } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\nimport { Column } from '../constants/layout';\nimport { loadColumns, loadFilters, saveFilters } from '../utils/storage';\nimport { DEFAULT_COLUMNS } from '../constants/layout';\n\ninterface AppContextType {\n  // Search state\n  searchQuery: string;\n  setSearchQuery: Dispatch<SetStateAction<string>>;\n  \n  // Filter state\n  filters: FilterOptions;\n  setFilters: Dispatch<SetStateAction<FilterOptions>>;\n  \n  // Column settings\n  columns: Column[];\n  setColumns: Dispatch<SetStateAction<Column[]>>;\n  \n  // Selected foils state\n  selectedFoils: BaseProduct[];\n  setSelectedFoils: Dispatch<SetStateAction<BaseProduct[]>>;\n  \n  // Navigation state\n  currentScreen: string | null;\n  setCurrentScreen: Dispatch<SetStateAction<string | null>>;\n  \n  // QuiverManager state\n  isQuiverManagerVisible: boolean;\n  showQuiverManager: () => void;\n  hideQuiverManager: () => void;\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nexport const AppProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  // Search state\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  // Filter state\n  const [filters, setFilters] = useState<FilterOptions>({\n    brands: [],\n    series: [],\n    type: []\n  });\n  \n  // Column settings\n  const [columns, setColumns] = useState<Column[]>(DEFAULT_COLUMNS);\n  \n  // Selected foils state\n  const [selectedFoils, setSelectedFoils] = useState<BaseProduct[]>([]);\n  \n  // Navigation state - initialize as null to prevent default routing\n  const [currentScreen, setCurrentScreen] = useState<string | null>(null);\n  \n  // QuiverManager state\n  const [isQuiverManagerVisible, setIsQuiverManagerVisible] = useState(false);\n  const showQuiverManager = () => setIsQuiverManagerVisible(true);\n  const hideQuiverManager = () => setIsQuiverManagerVisible(false);\n\n  // Load saved filters and columns on mount\n  useEffect(() => {\n    const loadSavedSettings = async () => {\n      try {\n        const savedFilters = await loadFilters();\n        if (savedFilters) {\n          setFilters({\n            brands: savedFilters.brands || [],\n            series: savedFilters.series || [],\n            type: savedFilters.types || []\n          });\n        }\n\n        const savedColumns = await loadColumns();\n        if (savedColumns && Array.isArray(savedColumns)) {\n          setColumns(savedColumns.map((col: Partial<Column>) => ({\n            ...DEFAULT_COLUMNS.find(defaultCol => defaultCol.id === col.id)!,\n            ...col\n          })));\n        }\n      } catch (error) {\n        console.error('Error loading saved settings:', error);\n      }\n    };\n\n    loadSavedSettings();\n  }, []);\n\n  // Save filters when they change\n  useEffect(() => {\n    saveFilters({\n      brands: filters.brands,\n      series: filters.series,\n      types: filters.type\n    });\n  }, [filters]);\n\n  // Reset filters when screen changes\n  useEffect(() => {\n    if (currentScreen) {\n      setFilters({ brands: [], series: [], type: [] });\n    }\n  }, [currentScreen]);\n\n  const value = {\n    searchQuery,\n    setSearchQuery,\n    filters,\n    setFilters,\n    columns,\n    setColumns,\n    selectedFoils,\n    setSelectedFoils,\n    currentScreen,\n    setCurrentScreen,\n    isQuiverManagerVisible,\n    showQuiverManager,\n    hideQuiverManager,\n  };\n\n  return (\n    <AppContext.Provider value={value}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}; ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\nimport { groupFoilsByBrand, groupFoilsBySeries } from '../utils/dataTransform';\n\nexport function useFilteredFoils(foils: BaseProduct[], filters: FilterOptions) {\n  const filterOptions = useMemo(() => {\n    const brands = Array.from(new Set(foils.map(foil => foil.brand))).sort();\n    \n    // Group foils by brand\n    const foilsByBrand = groupFoilsByBrand(foils);\n    \n    // Get series based on selected brands\n    let availableSeries: string[] = [];\n    if (filters.brands.length === 0) {\n      // If no brands selected, show all series\n      availableSeries = Array.from(new Set(foils.map(foil => foil.series))).sort();\n    } else {\n      // If brands are selected, only show series from those brands\n      const filteredFoils = filters.brands.flatMap(brand => foilsByBrand[brand] || []);\n      availableSeries = Array.from(new Set(filteredFoils.map(foil => foil.series))).sort();\n    }\n\n    const types = ['front', 'tail'];\n\n    return { brands, series: availableSeries, types };\n  }, [foils, filters.brands]);\n\n  const filteredFoils = useMemo(() => {\n    return foils.filter(foil => {\n      const brandMatch = filters.brands.length === 0 || filters.brands.includes(foil.brand);\n      const seriesMatch = filters.series.length === 0 || filters.series.includes(foil.series);\n      const typeMatch = filters.type.length === 0 || filters.type.includes(foil.type);\n\n      return brandMatch && seriesMatch && typeMatch;\n    });\n  }, [foils, filters.brands, filters.series, filters.type]);\n\n  return {\n    filteredFoils,\n    filterOptions,\n  };\n} ","import { BaseProduct } from '../types/scraper';\n\nexport function formatMeasurement(value: number, unit: string): string {\n  return `${value}${unit}`;\n}\n\nexport function convertArea(cmSquared: number): number {\n  return Math.round(cmSquared * 0.155); // Convert to square inches\n}\n\nexport function calculateAspectRatio(wingspan: number, area: number): number {\n  return Math.round((wingspan * wingspan / area) * 100) / 100;\n}\n\nexport function groupFoilsByBrand(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.brand]) {\n      acc[foil.brand] = [];\n    }\n    acc[foil.brand].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function groupFoilsBySeries(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.series]) {\n      acc[foil.series] = [];\n    }\n    acc[foil.series].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function getUniqueValues(foils: BaseProduct[], key: keyof BaseProduct): string[] {\n  return Array.from(new Set(foils.map(foil => foil[key] as string))).sort();\n} ","import { BaseProduct } from '../types/scraper';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport class ProductService {\n  private static isWeb = Platform.OS === 'web';\n  private static DATA_PATH = '/data/foils.json';\n  private static CACHE_DIR = '.cache';\n\n  // Get base URL for data loading\n  private static getBaseUrl(): string {\n    if (process.env.NODE_ENV === 'development') {\n      return '';\n    }\n    return process.env.NODE_ENV === 'staging' \n      ? 'https://staging.foilquiver.com'\n      : 'https://foilquiver.com';\n  }\n\n  static async getAllProducts(): Promise<BaseProduct[]> {\n    try {\n      if (this.isWeb) {\n        const baseUrl = this.getBaseUrl();\n\n        // Try loading from data directory first\n        try {\n          const response = await fetch(`${baseUrl}${this.DATA_PATH}`);\n          if (response.ok) {\n            const products = await response.json();\n            console.log(`Loaded ${products.length} products from ${this.DATA_PATH}`);\n            return products;\n          } else {\n            console.warn(`Failed to load from ${this.DATA_PATH} (${response.status}), trying .cache directory...`);\n          }\n        } catch (error) {\n          console.warn(`Failed to load from ${this.DATA_PATH}, trying .cache directory...`, error);\n        }\n\n        // Try loading from .cache as fallback\n        try {\n          // Normalize brand names to match file names\n          const brands = ['armstrong', 'lift-foils', 'axis-foils', 'code-foils', 'kt-foils', 'uni-foil'];\n          const allProducts: BaseProduct[] = [];\n          \n          for (const brand of brands) {\n            try {\n              const response = await fetch(`${baseUrl}/${this.CACHE_DIR}/${brand}.json`);\n              if (response.ok) {\n                const products = await response.json();\n                console.log(`Loaded ${products.length} products for ${brand} from .cache`);\n                allProducts.push(...products);\n              }\n            } catch (error) {\n              console.warn(`No cache file found for ${brand}`);\n            }\n          }\n\n          if (allProducts.length > 0) {\n            return allProducts;\n          }\n        } catch (error) {\n          console.warn('Failed to load from .cache directory', error);\n        }\n      } else {\n        // For mobile, use AsyncStorage\n        const cached = await AsyncStorage.getItem('foils');\n        if (cached) {\n          const products = JSON.parse(cached);\n          console.log(`Loaded ${products.length} products from AsyncStorage`);\n          return products;\n        }\n      }\n    } catch (error) {\n      console.error('Error loading foils data:', error);\n    }\n    \n    console.warn('No foils data found in any location');\n    return [];\n  }\n} ","import { useState, useEffect } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { ProductService } from '../services/productService';\n\nexport function useFoils() {\n  const [foils, setFoils] = useState<BaseProduct[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadFoils = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const products = await ProductService.getAllProducts();\n      setFoils(products);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load foils');\n      console.error('Error loading foils:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadFoils();\n  }, []);\n\n  const refreshFoils = () => {\n    loadFoils();\n  };\n\n  return {\n    foils,\n    loading,\n    error,\n    refreshFoils\n  };\n} ","import { useState, useEffect, useCallback } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Platform } from 'react-native';\nimport { supabase } from '../utils/supabase';\nimport { Quiver, CreateQuiverInput, UpdateQuiverInput } from '../types/quiver';\nimport { BaseProduct } from '../types/scraper';\nimport { generateFoilId, generateUUID } from '../utils/foilUtils';\nimport { logger } from '../utils/logger';\nimport { Environment } from '../config/environment';\n\nconst STORAGE_KEYS = {\n  QUIVERS: '@foilquiver/quivers',\n} as const;\n\n// Get the current environment\nconst getEnvironment = (): 'dev' | 'staging' | 'prod' => {\n  if (process.env.NODE_ENV === 'development') return 'dev';\n  if (window.location.hostname.includes('staging')) return 'staging';\n  return 'prod';\n};\n\n// Get the table name for the current environment\nconst getTableName = () => {\n  const env = getEnvironment();\n  return `${env}_quivers`;\n};\n\n// Storage helper that works for both web and native\nconst storage = {\n  getItem: async (key: string): Promise<string | null> => {\n    if (Platform.OS === 'web') {\n      return localStorage.getItem(key);\n    }\n    return AsyncStorage.getItem(key);\n  },\n  setItem: async (key: string, value: string): Promise<void> => {\n    if (Platform.OS === 'web') {\n      localStorage.setItem(key, value);\n      return;\n    }\n    return AsyncStorage.setItem(key, value);\n  },\n  removeItem: async (key: string): Promise<void> => {\n    if (Platform.OS === 'web') {\n      localStorage.removeItem(key);\n      return;\n    }\n    return AsyncStorage.removeItem(key);\n  }\n};\n\n// Local interface for creating quivers\ninterface LocalCreateQuiverInput {\n    name: string;\n    description?: string;\n    foils: BaseProduct[];\n    is_public?: boolean;\n}\n\n// Local interface for syncing quivers\ninterface LocalQuiverData {\n    name: string;\n    description?: string;\n    foils: BaseProduct[];\n    is_public?: boolean;\n}\n\nconst ENV: Environment = process.env.EXPO_PUBLIC_ENV as Environment || 'development';\n\n// Cache for quivers data\nconst CACHE_DURATION = 60000; // 1 minute\nlet quiversCache: {\n  data: Quiver[] | null;\n  timestamp: number;\n} = {\n  data: null,\n  timestamp: 0\n};\n\nexport const useQuivers = () => {\n  const [quivers, setQuivers] = useState<Quiver[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadQuivers = useCallback(async (bypassCache = false) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      // Check cache first\n      const now = Date.now();\n      if (!bypassCache && quiversCache.data && (now - quiversCache.timestamp) < CACHE_DURATION) {\n        setQuivers(quiversCache.data);\n        setIsLoading(false);\n        return;\n      }\n\n      // Get current user session\n      const { data: { session } } = await supabase.auth.getSession();\n\n      let loadedQuivers: Quiver[] = [];\n\n      if (session?.user) {\n        // Load from Supabase if logged in\n        const { data, error: fetchError } = await supabase\n          .from(getTableName())\n          .select('*')\n          .or(`user_id.eq.${session.user.id},is_public.eq.true`)\n          .order('updated_at', { ascending: false });\n\n        if (fetchError) throw fetchError;\n        loadedQuivers = data || [];\n      } else {\n        // Load from local storage if not logged in\n        const storedQuivers = await storage.getItem(STORAGE_KEYS.QUIVERS);\n        if (storedQuivers) {\n          loadedQuivers = JSON.parse(storedQuivers);\n        }\n      }\n\n      // Update cache\n      quiversCache = {\n        data: loadedQuivers,\n        timestamp: now\n      };\n\n      setQuivers(loadedQuivers);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load quivers';\n      setError(errorMessage);\n      console.error('Error loading quivers:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const reloadQuivers = useCallback(() => loadQuivers(true), [loadQuivers]);\n\n  const createQuiver = useCallback(async ({ \n    name, \n    description, \n    foils = [],\n    is_public = false \n  }: { \n    name: string; \n    description?: string; \n    foils?: BaseProduct[];\n    is_public?: boolean;\n  }) => {\n    try {\n      setError(null);\n      const { data: { session } } = await supabase.auth.getSession();\n      const foil_ids = foils.map(foil => generateFoilId(foil));\n\n      if (session?.user) {\n        // Create in Supabase if logged in\n        const { data, error: insertError } = await supabase\n          .from(getTableName())\n          .insert([\n            {\n              name,\n              description,\n              foil_ids,\n              user_id: session.user.id,\n              is_public,\n              environment: getEnvironment()\n            },\n          ])\n          .select()\n          .single();\n\n        if (insertError) throw insertError;\n        \n        // Invalidate cache and reload\n        quiversCache.timestamp = 0;\n        await reloadQuivers();\n        return data;\n      } else {\n        // Create in local storage if not logged in\n        const newQuiver: Quiver = {\n          id: generateUUID(),\n          name,\n          description: description || '',\n          foil_ids,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n          is_public,\n          user_id: 'local',\n          environment: 'local'\n        };\n\n        const existingQuivers = await storage.getItem(STORAGE_KEYS.QUIVERS);\n        const parsedQuivers: Quiver[] = existingQuivers ? JSON.parse(existingQuivers) : [];\n        const updatedQuivers = [newQuiver, ...parsedQuivers];\n\n        await storage.setItem(STORAGE_KEYS.QUIVERS, JSON.stringify(updatedQuivers));\n        \n        // Invalidate cache and reload\n        quiversCache.timestamp = 0;\n        await reloadQuivers();\n        return newQuiver;\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to create quiver';\n      setError(errorMessage);\n      console.error('Error creating quiver:', err);\n      return null;\n    }\n  }, [reloadQuivers]);\n\n  const updateQuiver = useCallback(async (quiverId: string, updates: Partial<Quiver>) => {\n    try {\n      setError(null);\n      const { data: { session } } = await supabase.auth.getSession();\n\n      if (session?.user) {\n        // Update in Supabase if logged in\n        const { error: updateError } = await supabase\n          .from(getTableName())\n          .update({\n            ...updates,\n            environment: getEnvironment()\n          })\n          .eq('id', quiverId)\n          .eq('user_id', session.user.id);\n\n        if (updateError) throw updateError;\n      } else {\n        // Update in local storage if not logged in\n        const storedQuivers = await storage.getItem(STORAGE_KEYS.QUIVERS);\n        if (!storedQuivers) return false;\n\n        const parsedQuivers: Quiver[] = JSON.parse(storedQuivers);\n        const updatedQuivers = parsedQuivers.map(quiver => {\n          if (quiver.id === quiverId) {\n            return {\n              ...quiver,\n              ...updates,\n              updated_at: new Date().toISOString()\n            };\n          }\n          return quiver;\n        });\n\n        await storage.setItem(STORAGE_KEYS.QUIVERS, JSON.stringify(updatedQuivers));\n      }\n\n      // Invalidate cache and reload\n      quiversCache.timestamp = 0;\n      await reloadQuivers();\n      return true;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to update quiver';\n      setError(errorMessage);\n      console.error('Error updating quiver:', err);\n      return false;\n    }\n  }, [reloadQuivers]);\n\n  const deleteQuiver = useCallback(async (quiverId: string) => {\n    try {\n      setError(null);\n      const { data: { session } } = await supabase.auth.getSession();\n\n      if (session?.user) {\n        // Delete from Supabase if logged in\n        const { error: deleteError } = await supabase\n          .from(getTableName())\n          .delete()\n          .eq('id', quiverId)\n          .eq('user_id', session.user.id);\n\n        if (deleteError) throw deleteError;\n      } else {\n        // Delete from local storage if not logged in\n        const storedQuivers = await storage.getItem(STORAGE_KEYS.QUIVERS);\n        if (!storedQuivers) return false;\n\n        const parsedQuivers: Quiver[] = JSON.parse(storedQuivers);\n        const updatedQuivers = parsedQuivers.filter(quiver => quiver.id !== quiverId);\n        await storage.setItem(STORAGE_KEYS.QUIVERS, JSON.stringify(updatedQuivers));\n      }\n\n      // Invalidate cache and reload\n      quiversCache.timestamp = 0;\n      await reloadQuivers();\n      return true;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to delete quiver';\n      setError(errorMessage);\n      console.error('Error deleting quiver:', err);\n      return false;\n    }\n  }, [reloadQuivers]);\n\n  // Load quivers on mount\n  useEffect(() => {\n    loadQuivers();\n  }, [loadQuivers]);\n\n  return {\n    quivers,\n    isLoading,\n    error,\n    createQuiver,\n    updateQuiver,\n    deleteQuiver,\n    reloadQuivers,\n  };\n}; ","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useColorScheme } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getColors, ThemeColors } from './colors';\n\ntype ThemeContextType = {\n  isDark: boolean;\n  colors: ThemeColors;\n  toggleTheme: () => void;\n};\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nconst THEME_STORAGE_KEY = '@foilquiver/theme';\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const systemColorScheme = useColorScheme();\n  const [isDark, setIsDark] = useState<boolean>(systemColorScheme === 'dark');\n\n  useEffect(() => {\n    // Load saved theme preference\n    const loadTheme = async () => {\n      try {\n        const savedTheme = await AsyncStorage.getItem(THEME_STORAGE_KEY);\n        if (savedTheme !== null) {\n          setIsDark(savedTheme === 'dark');\n        }\n      } catch (error) {\n        console.error('Error loading theme:', error);\n      }\n    };\n\n    loadTheme();\n  }, []);\n\n  const toggleTheme = async () => {\n    try {\n      const newTheme = !isDark;\n      setIsDark(newTheme);\n      await AsyncStorage.setItem(THEME_STORAGE_KEY, newTheme ? 'dark' : 'light');\n    } catch (error) {\n      console.error('Error saving theme:', error);\n    }\n  };\n\n  const colors = getColors(isDark ? 'dark' : 'light');\n\n  return (\n    <ThemeContext.Provider value={{ isDark, colors, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}; ","import { ColorSchemeName } from 'react-native';\n\nexport type ThemeColors = {\n  background: {\n    primary: string;\n    secondary: string;\n    tertiary: string;\n  };\n  text: {\n    primary: string;\n    secondary: string;\n    tertiary: string;\n    inverse: string;\n  };\n  border: string;\n  primary: string;\n  error: string;\n  success: string;\n  warning: string;\n};\n\n// Sunset theme colors (accent colors)\nconst SPACE_CADET = '#1F214D';\nconst EMINENCE = '#50366F';\nconst MAGENTA_DYE = '#BF3475';\nconst BURNT_SIENNA = '#EE6C45';\nconst SUNGLOW = '#FFCE61';\n\n// Neutral colors for text and backgrounds\nconst NEUTRAL = {\n  50: '#F9FAFB',\n  100: '#F3F4F6',\n  200: '#E5E7EB',\n  300: '#D1D5DB',\n  400: '#9CA3AF',\n  500: '#6B7280',\n  600: '#4B5563',\n  700: '#374151',\n  800: '#1F2937',\n  900: '#111827',\n};\n\nconst lightColors: ThemeColors = {\n  background: {\n    primary: NEUTRAL[50],\n    secondary: NEUTRAL[100],\n    tertiary: NEUTRAL[200],\n  },\n  text: {\n    primary: NEUTRAL[900],\n    secondary: NEUTRAL[700],\n    tertiary: NEUTRAL[500],\n    inverse: NEUTRAL[50],\n  },\n  border: NEUTRAL[200],\n  primary: MAGENTA_DYE,\n  error: '#DC2626',\n  success: '#059669',\n  warning: SUNGLOW,\n};\n\nconst darkColors: ThemeColors = {\n  background: {\n    primary: NEUTRAL[900],\n    secondary: NEUTRAL[800],\n    tertiary: NEUTRAL[700],\n  },\n  text: {\n    primary: NEUTRAL[50],\n    secondary: NEUTRAL[200],\n    tertiary: NEUTRAL[400],\n    inverse: NEUTRAL[900],\n  },\n  border: NEUTRAL[700],\n  primary: MAGENTA_DYE,\n  error: '#EF4444',\n  success: '#10B981',\n  warning: SUNGLOW,\n};\n\nexport const getColors = (colorScheme: ColorSchemeName): ThemeColors => {\n  return colorScheme === 'dark' ? darkColors : lightColors;\n};\n\n// For backward compatibility\nexport const colors = lightColors; \n\n","export const spacing = {\n  XSMALL: 4,\n  SMALL: 8,\n  MEDIUM: 12,\n  LARGE: 16,\n  XLARGE: 24,\n  XXLARGE: 32,\n  \n  // Component-specific spacing\n  CONTAINER_PADDING: 24,\n  BUTTON_PADDING_H: 16,\n  BUTTON_PADDING_V: 8,\n  BUTTON_GAP: 12,\n  CONTROLS_BOTTOM: 24,\n\n  // Screen and view layout\n  SCREEN_PADDING: 24,\n  TABLE_CONTAINER_PADDING: 24,\n  HEADER_PADDING: 12,\n  CONTENT_PADDING: 16,\n  \n  // Controls and bottom elements\n  CONTROLS_CONTAINER_BOTTOM: 24,\n  CONTROLS_CONTAINER_PADDING: 24,\n} as const; ","import { Platform } from 'react-native';\n\ninterface PlausibleEvent {\n  name: string;\n  props?: Record<string, string | number | boolean>;\n}\n\ndeclare global {\n  interface Window {\n    plausible?: (eventName: string, options?: { props: Record<string, any> }) => void;\n  }\n}\n\nexport const trackEvent = (event: PlausibleEvent) => {\n  if (Platform.OS === 'web' && window.plausible) {\n    window.plausible(event.name, event.props ? { props: event.props } : undefined);\n  }\n};\n\nexport const trackPageView = (screenName: string, props?: Record<string, any>) => {\n  trackEvent({\n    name: 'pageview',\n    props: {\n      page: screenName,\n      ...props\n    }\n  });\n};\n\nexport const trackAction = (action: string, props?: Record<string, any>) => {\n  trackEvent({\n    name: action,\n    props\n  });\n};\n\n// Common analytics events\nexport const ANALYTICS_EVENTS = {\n  // Page views\n  VIEW_COMPARISON: 'view_comparison',\n  VIEW_QUIVER: 'view_quiver',\n  \n  // Actions\n  COMPARE_FOILS: 'compare_foils',\n  SAVE_QUIVER: 'save_quiver',\n  DELETE_QUIVER: 'delete_quiver',\n  UPDATE_QUIVER: 'update_quiver',\n  FILTER_FOILS: 'filter_foils',\n  SORT_FOILS: 'sort_foils',\n  SEARCH_FOILS: 'search_foils',\n} as const; ","import { BaseProduct } from '../types/scraper';\n\nexport const generateFoilId = (foil: BaseProduct): string => {\n  return `${foil.brand.toLowerCase()}-${foil.model.toLowerCase().replace(/\\s+/g, '-')}`;\n};\n\n// Generate a UUID v4 that works across platforms\nexport const generateUUID = (): string => {\n  // Use crypto.randomUUID if available (web)\n  if (typeof crypto !== 'undefined' && crypto.randomUUID) {\n    return crypto.randomUUID();\n  }\n\n  // Fallback implementation for mobile\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}; ","export const routes = {\n  browse: '/',\n  comparison: '/comparison',\n  quiver: '/quiver/:quiverId',\n  terms: '/terms',\n  privacy: '/privacy',\n  contact: '/contact',\n} as const;\n\n// Add a helper function to clean routes for navigation\nexport const cleanRoute = (route: string) => route.slice(1); // Remove leading slash \n\nexport const getRouteFromPath = (path: string) => {\n  return path.startsWith('/') ? path : `/${path}`;\n}; ","type LogLevel = 'debug' | 'info' | 'warn' | 'error';\n\nclass Logger {\n  private static instance: Logger;\n  private isDevelopment = process.env.NODE_ENV === 'development' || __DEV__;\n\n  private constructor() {\n    // Log environment status on initialization\n    if (this.isDevelopment) {\n      console.info('[Logger] Initialized in development mode');\n      console.info('[Logger] Environment:', process.env.NODE_ENV);\n    }\n  }\n\n  static getInstance(): Logger {\n    if (!Logger.instance) {\n      Logger.instance = new Logger();\n    }\n    return Logger.instance;\n  }\n\n  private log(level: LogLevel, message: string, ...args: any[]) {\n    // Always log errors, only log other levels in development\n    if (this.isDevelopment || level === 'error') {\n      const timestamp = new Date().toISOString();\n      const formattedMessage = `[${timestamp}] [${level.toUpperCase()}] ${message}`;\n      \n      switch (level) {\n        case 'debug':\n          console.debug(formattedMessage, ...args);\n          break;\n        case 'info':\n          console.info(formattedMessage, ...args);\n          break;\n        case 'warn':\n          console.warn(formattedMessage, ...args);\n          break;\n        case 'error':\n          console.error(formattedMessage, ...args);\n          break;\n      }\n    }\n  }\n\n  debug(message: string, ...args: any[]) {\n    this.log('debug', message, ...args);\n  }\n\n  info(message: string, ...args: any[]) {\n    this.log('info', message, ...args);\n  }\n\n  warn(message: string, ...args: any[]) {\n    this.log('warn', message, ...args);\n  }\n\n  error(message: string, ...args: any[]) {\n    this.log('error', message, ...args);\n  }\n}\n\nexport const logger = Logger.getInstance(); ","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { logger } from './logger';\nimport { FilterOptions } from '../types/filters';\nimport { SortField } from '../hooks/useSortedFoils';\n\nconst STORAGE_KEYS = {\n  FILTERS: '@foilquiver/filters',\n  COLUMNS: '@foilquiver/columns',\n  THEME: '@foilquiver/theme',\n  SORT: '@foilquiver/sort',\n} as const;\n\nexport interface StoredFilters {\n  brands: string[];\n  series: string[];\n  types: string[];\n}\n\nexport interface StoredColumns {\n  [key: string]: boolean;\n}\n\nexport interface StoredSort {\n  field: SortField;\n  ascending: boolean;\n}\n\nclass Storage {\n  async set(key: string, value: any): Promise<void> {\n    try {\n      const jsonValue = JSON.stringify(value);\n      await AsyncStorage.setItem(key, jsonValue);\n    } catch (error) {\n      logger.error('Error setting storage item:', error);\n      throw error;\n    }\n  }\n\n  async get<T>(key: string): Promise<T | null> {\n    try {\n      const jsonValue = await AsyncStorage.getItem(key);\n      return jsonValue != null ? JSON.parse(jsonValue) : null;\n    } catch (error) {\n      logger.error('Error getting storage item:', error);\n      throw error;\n    }\n  }\n\n  async remove(key: string): Promise<void> {\n    try {\n      await AsyncStorage.removeItem(key);\n    } catch (error) {\n      logger.error('Error removing storage item:', error);\n      throw error;\n    }\n  }\n\n  async clear(): Promise<void> {\n    try {\n      await AsyncStorage.clear();\n    } catch (error) {\n      logger.error('Error clearing storage:', error);\n      throw error;\n    }\n  }\n\n  async getAllKeys(): Promise<readonly string[]> {\n    try {\n      return await AsyncStorage.getAllKeys();\n    } catch (error) {\n      logger.error('Error getting all storage keys:', error);\n      throw error;\n    }\n  }\n}\n\nexport const storage = new Storage();\n\nexport const saveFilters = async (filters: StoredFilters) => {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEYS.FILTERS, JSON.stringify(filters));\n  } catch (error) {\n    console.error('Error saving filters:', error);\n  }\n};\n\nexport const loadFilters = async (): Promise<StoredFilters | null> => {\n  try {\n    const savedFilters = await AsyncStorage.getItem(STORAGE_KEYS.FILTERS);\n    return savedFilters ? JSON.parse(savedFilters) : null;\n  } catch (error) {\n    console.error('Error loading filters:', error);\n    return null;\n  }\n};\n\nexport const saveColumns = async (columns: StoredColumns) => {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEYS.COLUMNS, JSON.stringify(columns));\n  } catch (error) {\n    console.error('Error saving columns:', error);\n  }\n};\n\nexport const loadColumns = async (): Promise<StoredColumns | null> => {\n  try {\n    const savedColumns = await AsyncStorage.getItem(STORAGE_KEYS.COLUMNS);\n    return savedColumns ? JSON.parse(savedColumns) : null;\n  } catch (error) {\n    console.error('Error loading columns:', error);\n    return null;\n  }\n};\n\nexport const saveSortOption = async (sort: StoredSort) => {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEYS.SORT, JSON.stringify(sort));\n  } catch (error) {\n    console.error('Error saving sort option:', error);\n  }\n};\n\nexport const loadSortOption = async (): Promise<StoredSort | null> => {\n  try {\n    const savedSort = await AsyncStorage.getItem(STORAGE_KEYS.SORT);\n    return savedSort ? JSON.parse(savedSort) : null;\n  } catch (error) {\n    console.error('Error loading sort option:', error);\n    return null;\n  }\n};\n\nexport const clearAllSettings = async () => {\n  try {\n    const keys = Object.values(STORAGE_KEYS);\n    await AsyncStorage.multiRemove(keys);\n  } catch (error) {\n    console.error('Error clearing settings:', error);\n  }\n}; ","import { createClient } from '@supabase/supabase-js';\nimport { Platform } from 'react-native';\nimport { SUPABASE_URL, SUPABASE_ANON_KEY } from '../config/env';\nimport { getEnvironmentConfig } from '../config/environment';\n\n// Get the site URL based on the environment\nconst getSiteUrl = () => {\n  if (Platform.OS !== 'web') return undefined;\n  \n  const { webUrl } = getEnvironmentConfig();\n  const hostname = window.location.hostname;\n  if (hostname === 'localhost' || hostname.includes('127.0.0.1')) {\n    return webUrl;\n  }\n  return window.location.origin;\n};\n\n// Custom fetch with timeout and performance logging\nconst fetchWithTimeout = async (\n  input: RequestInfo | URL,\n  options: RequestInit = {}\n): Promise<Response> => {\n  const startTime = Date.now();\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 second timeout\n\n  try {\n    const response = await fetch(input, {\n      ...options,\n      signal: controller.signal,\n    });\n\n    const duration = Date.now() - startTime;\n    if (duration > 1000) {\n      const url = typeof input === 'string' ? input : input.toString();\n      const method = options.method || 'GET';\n      \n      // Log slow requests to help with debugging\n      console.warn(\n        `Slow Supabase request (${duration}ms):`,\n        `${method} ${url}`,\n        {\n          duration,\n          method,\n          url: url.split('?')[0], // Remove query params for cleaner logs\n          status: response.status,\n        }\n      );\n    }\n\n    return response;\n  } catch (error) {\n    const duration = Date.now() - startTime;\n    console.error(\n      `Supabase request failed (${duration}ms):`,\n      {\n        url: typeof input === 'string' ? input : input.toString(),\n        method: options.method || 'GET',\n        error: error instanceof Error ? error.message : 'Unknown error',\n      }\n    );\n    throw error;\n  } finally {\n    clearTimeout(timeoutId);\n  }\n};\n\n// Initialize the Supabase client\nexport const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {\n  auth: {\n    flowType: 'pkce',\n    detectSessionInUrl: true,\n    autoRefreshToken: true,\n    persistSession: true,\n    storage: typeof window !== 'undefined' ? window.localStorage : {\n      getItem: () => null,\n      setItem: () => {},\n      removeItem: () => {},\n    },\n    storageKey: 'sb-auth-token',\n    ...(Platform.OS === 'web' && {\n      redirectTo: getSiteUrl(),\n      cookieOptions: {\n        name: 'sb-auth-token',\n        lifetime: 60 * 60 * 24 * 365, // 1 year in seconds\n        domain: typeof window !== 'undefined' ? window.location.hostname : undefined,\n        sameSite: 'lax',\n        secure: window?.location?.protocol === 'https:',\n        path: '/',\n        httpOnly: false\n      }\n    }),\n  },\n  global: {\n    headers: {\n      'X-Client-Info': 'supabase-js-web'\n    },\n    fetch: fetchWithTimeout,\n  },\n  // Add retry configuration for better network resilience\n  realtime: {\n    params: {\n      eventsPerSecond: 2\n    }\n  },\n  db: {\n    schema: 'public'\n  }\n}); "],"names":["ErrorBoundary","React","constructor","props","super","this","state","hasError","error","getDerivedStateFromError","componentDidCatch","errorInfo","handleRetry","setState","render","_jsx","ErrorView","onRetry","children","colors","useTheme","View","style","styles","container","backgroundColor","background","primary","_jsxs","content","Text","title","color","message","text","secondary","TouchableOpacity","button","onPress","buttonText","inverse","__DEV__","StyleSheet","create","flex","alignItems","justifyContent","padding","spacing","LARGE","maxWidth","width","fontSize","fontWeight","marginBottom","MEDIUM","textAlign","Object","assign","paddingHorizontal","paddingVertical","borderRadius","Platform","OS","cursor","stack","fontFamily","marginTop","SearchBar","value","onChangeText","onClear","placeholder","autoFocus","mode","onFocus","useWindowDimensions","isMobile","MOBILE_BREAKPOINT","isMobileWeb","searchIcon","Ionicons","name","size","TextInput","input","mobileWebInput","getPlaceholder","placeholderTextColor","tertiary","autoCapitalize","autoCorrect","clearButtonMode","returnKeyType","maxFontSizeMultiplier","spellCheck","autoComplete","keyboardType","clearButton","mobileWebClearButton","clearIcon","flexDirection","height","gap","SMALL","outlineStyle","border","lineHeight","aspectRatio","paddingRight","position","right","top","bottom","zIndex","GoogleSignIn","onSuccess","useEffect","initializeGoogleSignIn","window","google","accounts","id","initialize","client_id","GOOGLE_CLIENT_ID","callback","async","supabase","auth","signInWithIdToken","provider","token","response","credential","use_fedcm_for_prompt","buttonContainer","document","getElementById","renderButton","type","theme","shape","script","createElement","src","onload","body","appendChild","removeChild","minHeight","TableSettings","filterOptions","selectedBrands","selectedSeries","selectedTypes","onFilterChange","onClearFilters","columns","onColumnVisibilityChange","onResetColumns","foils","isOpen","setIsOpen","useState","activeTab","setActiveTab","isDark","toggleTheme","session","setSession","user","setUser","isQuiversModalVisible","setIsQuiversModalVisible","data","getSession","refreshedSession","refreshError","refreshSession","initializeSession","subscription","onAuthStateChange","event","refreshInterval","setInterval","unsubscribe","clearInterval","savedFilters","loadFilters","brands","forEach","brand","series","types","savedColumns","loadColumns","currentColumns","fromEntries","map","col","isVisible","entries","columnId","loadSavedSettings","filters","saveFilters","saveFilterSettings","columnSettings","column","saveColumns","saveColumnSettings","availableSeries","useMemo","length","seriesSet","Set","foil","includes","add","Array","from","sort","_Fragment","Pressable","iconButton","MaterialIcons","Modal","visible","transparent","animationType","onRequestClose","modalOverlay","modalContent","e","stopPropagation","modalHeader","borderBottomColor","modalTitle","closeButton","tabs","tab","tabText","activeTabText","some","contentWrapper","ScrollView","scrollView","contentContainerStyle","scrollContent","headerWithAction","contentTitle","clearButtonText","section","sectionTitle","chipContainer","chip","chipSelected","chipText","chipTextSelected","noSeriesText","columnList","columnItem","handleColumnVisibilityChange","columnLabel","label","checkbox","borderColor","checkboxChecked","menuButton","menuButtonContent","menuButtonText","userInfo","user_metadata","avatar_url","Image","source","uri","avatarImage","userTextInfo","userName","full_name","email","userEmail","menuDivider","pressed","opacity","revoke","signOut","scope","handleSignOut","role","onStartShouldSetResponder","QuiverManager","selectedFoils","onClose","initialTab","standalone","XSMALL","maxHeight","overflow","borderBottomWidth","buttonGroup","columnGroup","filterGroup","filterList","flexGrow","flexWrap","borderWidth","userSelect","outline","WebkitTapHighlightColor","BrowseScreen","ComparisonScreen","QuiverScreen","PrivacyPolicy","TermsOfService","Contact","Stack","createNativeStackNavigator","ICON_NAMES","home","browse","compare","settings","quiver","TabBarIcon","webIcons","getEnvironmentConfig","webUrl","routes","comparison","terms","privacy","contact","ScreenWrapper","_ref","_objectWithoutPropertiesLoose","_excluded","Suspense","fallback","LoadingIndicator","AppHeader","navigation","useNavigation","useFoils","searchQuery","setSearchQuery","setFilters","setColumns","setCurrentScreen","showQuiverManager","useApp","useFilteredFoils","handleLogoPress","navigate","handleSearch","setParams","getViewMode","route","getSearchPlaceholder","handleSearchFocus","showSearchDropdown","handleFilterChangeWrapper","handleFilterChange","prev","filter","item","handleClearFilters","handleResetColumns","DEFAULT_COLUMNS","tableWidth","getTableWidth","getContentWidth","Math","min","CONTAINER_PADDING","updatedColumns","loadSavedColumnSettings","headerMainContainerStyle","containerWidth","alignSelf","renderHeaderRight","headerRightContainerMobile","headerButton","headerRightContainerWeb","headerButtonText","Navigator","screenOptions","headerStyle","headerShadowVisible","Screen","options","headerTitle","params","headerLeft","headerOuterContainer","headerMainContainerMobile","headerTopRowMobile","logoContainerMobile","logoPressed","headerTitleMobile","searchBarContainerMobile","headerMainContainerWeb","headerContentWeb","logoContainer","searchBarContainerWeb","currentQuiverFoils","foil_ids","isArray","f","foilId","generateFoilId","searchProps","tableSettingsProps","headerShown","minWidth","AppContent","navigationRef","createNavigationContainerRef","isQuiverManagerVisible","hideQuiverManager","linking","prefixes","getPrefixes","config","screens","Browse","path","parse","stringify","Comparison","exact","quiverName","JSON","Quiver","quiverId","undefined","Terms","Privacy","getStateFromPath","getPathFromState","NavigationContainer","ref","isModalVisible","registerRootComponent","ThemeProvider","AppProvider","HelmetProvider","SafeAreaProvider","fullScreen","ActivityIndicator","hideStandaloneButton","onQuiverSaved","setSelectedFoils","isModalVisibleInternal","setIsModalVisibleInternal","modalVisible","setName","description","setDescription","editingQuiverId","setEditingQuiverId","editingName","setEditingName","quivers","isLoading","createQuiver","deleteQuiver","reloadQuivers","updateQuiver","useQuivers","handleSaveRename","trim","trackAction","ANALYTICS_EVENTS","UPDATE_QUIVER","action","alert","Alert","getFoilCount","tabContainer","modalBody","form","formField","textArea","multiline","numberOfLines","createButton","result","Error","SAVE_QUIVER","foilCount","isNewQuiver","fromComparison","quiverList","centerContent","quiverItem","quiverInfo","handleViewQuiver","renameContainer","renameInput","renameButton","renameButtonText","quiverNameContainer","handleStartRename","renameIcon","quiverDescription","quiverMeta","Date","updated_at","toLocaleDateString","onClick","confirm","then","success","catch","borderStyle","display","pointerEvents","deleteButton","Promise","resolve","cancelable","DELETE_QUIVER","handleDeleteQuiver","createButtonContainer","createEmptyButton","saveButton","marginRight","standaloneOverlay","activeOpacity","modalContentMobile","preventDefault","boxShadow","left","paddingTop","textAlignVertical","deleteIcon","borderTopWidth","paddingBottom","SUPABASE_URL","SUPABASE_ANON_KEY","ENV","process","EXPO_PUBLIC_ENV","configs","development","apiUrl","appScheme","staging","production","COLUMN_WIDTHS","model","area","wingspan","price","link","reduce","total","screenWidth","AppContext","createContext","currentScreen","setIsQuiverManagerVisible","find","defaultCol","Provider","context","useContext","foilsByBrand","acc","push","groupFoilsByBrand","filteredFoils","flatMap","brandMatch","seriesMatch","typeMatch","ProductService","getBaseUrl","getAllProducts","isWeb","baseUrl","fetch","DATA_PATH","ok","json","allProducts","CACHE_DIR","products","cached","AsyncStorage","getItem","setFoils","loading","setLoading","setError","loadFoils","err","refreshFoils","STORAGE_KEYS","getEnvironment","location","hostname","getTableName","storage","localStorage","key","setItem","quiversCache","timestamp","setQuivers","setIsLoading","loadQuivers","useCallback","bypassCache","now","loadedQuivers","fetchError","select","or","order","ascending","storedQuivers","errorMessage","is_public","insertError","insert","user_id","environment","single","newQuiver","generateUUID","created_at","toISOString","existingQuivers","updatedQuivers","updates","updateError","update","eq","deleteError","delete","ThemeContext","THEME_STORAGE_KEY","systemColorScheme","useColorScheme","setIsDark","savedTheme","loadTheme","getColors","newTheme","MAGENTA_DYE","SUNGLOW","NEUTRAL","lightColors","warning","darkColors","colorScheme","XLARGE","XXLARGE","BUTTON_PADDING_H","BUTTON_PADDING_V","BUTTON_GAP","CONTROLS_BOTTOM","SCREEN_PADDING","TABLE_CONTAINER_PADDING","HEADER_PADDING","CONTENT_PADDING","CONTROLS_CONTAINER_BOTTOM","CONTROLS_CONTAINER_PADDING","trackEvent","plausible","trackPageView","screenName","page","VIEW_COMPARISON","VIEW_QUIVER","COMPARE_FOILS","FILTER_FOILS","SORT_FOILS","SEARCH_FOILS","toLowerCase","replace","crypto","randomUUID","c","r","random","toString","Logger","isDevelopment","getInstance","instance","log","level","args","toUpperCase","debug","info","warn","logger","FILTERS","COLUMNS","THEME","SORT","set","jsonValue","get","remove","removeItem","clear","getAllKeys","saveSortOption","loadSortOption","savedSort","createClient","flowType","detectSessionInUrl","autoRefreshToken","persistSession","storageKey","redirectTo","getSiteUrl","origin","cookieOptions","lifetime","domain","sameSite","secure","protocol","httpOnly","global","headers","startTime","controller","AbortController","timeoutId","setTimeout","abort","signal","method","clearTimeout","realtime","eventsPerSecond","db","schema"],"sourceRoot":""}