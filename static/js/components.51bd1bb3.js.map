{"version":3,"file":"static/js/components.51bd1bb3.js","mappings":"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","sources":["src/components/ComparisonControls.tsx","src/components/ComparisonView.tsx","src/components/ErrorBoundary.tsx","src/components/FilterControls.tsx","src/components/FoilsTable.tsx","src/components/Footer.tsx","src/components/LoadingIndicator.tsx","src/components/SEOHead.tsx","src/components/SearchBar.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../constants/spacing';\nimport { colors } from '../theme/colors';\n\ninterface ComparisonControlsProps {\n  selectedFoils: BaseProduct[];\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  onClearSelection: () => void;\n  isComparisonView?: boolean;\n}\n\nconst WebWrapper = Platform.select({\n  web: ({ children }: { children: React.ReactNode }) => (\n    <div style={{\n      position: 'fixed',\n      bottom: 80,\n      left: 0,\n      right: 0,\n      zIndex: 2000,\n      pointerEvents: 'none',\n    }}>\n      <div style={{ \n        pointerEvents: 'auto', \n        display: 'flex', \n        justifyContent: 'flex-end', \n        paddingRight: spacing.LARGE,\n        paddingBottom: spacing.MEDIUM,\n      }}>\n        {children}\n      </div>\n    </div>\n  ),\n  default: ({ children }: { children: React.ReactNode }) => <>{children}</>,\n});\n\nconst ComparisonControls = ({ selectedFoils, onCompareSelected, onExitCompare, onClearSelection, isComparisonView }: ComparisonControlsProps) => {\n  // Only show controls if there are selected foils or we're in comparison view\n  if (selectedFoils.length === 0 && !isComparisonView) {\n    return null;\n  }\n\n  const content = !isComparisonView ? (\n    <View style={styles.comparisonBar}>\n      <Text style={styles.selectionText}>\n        Selected: {selectedFoils.length}\n      </Text>\n      <View style={styles.buttonGroup}>\n        <Pressable\n          style={[styles.button, styles.clearButton]}\n          onPress={onClearSelection}\n        >\n          <Text style={[styles.buttonText, styles.clearButtonText]}>Clear</Text>\n        </Pressable>\n        <Pressable\n          style={[styles.button, selectedFoils.length < 2 && styles.buttonDisabled]}\n          onPress={onCompareSelected}\n          disabled={selectedFoils.length < 2}\n        >\n          <Text style={styles.buttonText}>Compare</Text>\n        </Pressable>\n      </View>\n    </View>\n  ) : (\n    <View style={styles.comparisonBar}>\n      <Pressable\n        style={[styles.button, styles.cancelButton]}\n        onPress={onExitCompare}\n      >\n        <Text style={styles.buttonText}>Back</Text>\n      </Pressable>\n    </View>\n  );\n\n  return Platform.OS === 'web' ? (\n    <WebWrapper>{content}</WebWrapper>\n  ) : (\n    <View style={styles.container}>\n      {content}\n    </View>\n  );\n};\n\nexport default ComparisonControls;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: colors.background.secondary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n  },\n  comparisonBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  floatingButton: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonDisabled: {\n    backgroundColor: colors.text.muted,\n    opacity: 0.5,\n  },\n  clearButton: {\n    backgroundColor: colors.background.primary,\n    borderWidth: 1,\n    borderColor: colors.secondary,\n  },\n  cancelButton: {\n    backgroundColor: colors.secondary,\n  },\n  buttonText: {\n    color: colors.background.primary,\n    fontWeight: '600',\n    fontSize: 14,\n  },\n  selectionText: {\n    fontSize: 14,\n    color: colors.text.secondary,\n    marginRight: spacing.MEDIUM,\n  },\n  selectedCount: {\n    color: colors.text.secondary,\n    fontSize: 16,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  compareButton: {\n    backgroundColor: colors.primary,\n  },\n  compareButtonText: {\n    color: colors.background.primary,\n  },\n  clearButtonText: {\n    color: colors.secondary,\n  }\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FoilsTable } from './FoilsTable';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\n\ninterface ComparisonViewProps {\n  foils: BaseProduct[];\n  onClose?: () => void;\n  onCompare?: () => void;\n}\n\nconst ComparisonView = ({ foils, onClose, onCompare }: ComparisonViewProps) => {\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(foils);\n  \n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleSelect = () => {};\n  const isSelected = () => false;\n\n  return (\n    <View style={styles.container}>\n      <FoilsTable\n        foils={sortedFoils}\n        onSort={handleSort}\n        onFoilSelect={handleSelect}\n        isSelected={isSelected}\n        sortOption={{\n          field: sortOption.field,\n          ascending: sortOption.direction === 'asc'\n        }}\n      />\n    </View>\n  );\n};\n\nexport default ComparisonView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  }\n});","import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n    error: null\n  };\n\n  public static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Uncaught error:', error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return (\n        <View style={styles.container}>\n          <Text style={styles.text}>Something went wrong.</Text>\n          <Text style={styles.errorText}>{this.state.error?.message}</Text>\n        </View>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  text: {\n    fontSize: 16,\n    marginBottom: 10,\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 14,\n  },\n}); ","import React, { useState } from 'react';\nimport { View, Text, Pressable, StyleSheet, Animated, LayoutChangeEvent } from 'react-native';\nimport { colors } from '../theme/colors';\nimport { FilterOptions } from '../types/filters';\nimport { Ionicons } from '@expo/vector-icons';\n\ninterface FilterControlsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n}\n\nexport function FilterControls({\n  filterOptions,\n  selectedBrands,\n  selectedSeries,\n  selectedTypes,\n  onFilterChange,\n}: FilterControlsProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [animation] = useState(new Animated.Value(0));\n  const [contentHeight, setContentHeight] = useState(0);\n\n  const toggleExpanded = () => {\n    const toValue = isExpanded ? 0 : 1;\n    Animated.spring(animation, {\n      toValue,\n      useNativeDriver: false,\n      friction: 10,\n    }).start();\n    setIsExpanded(!isExpanded);\n  };\n\n  const handleLayout = (event: LayoutChangeEvent) => {\n    const { height } = event.nativeEvent.layout;\n    setContentHeight(height);\n  };\n\n  const animatedHeight = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, contentHeight],\n  });\n\n  return (\n    <View style={styles.wrapper}>\n      <Pressable onPress={toggleExpanded} style={styles.header}>\n        <View style={styles.headerContent}>\n          <Text style={styles.headerTitle}>Filters</Text>\n          <View style={styles.filterSummary}>\n            {selectedBrands.length > 0 && (\n              <Text style={styles.filterCount}>Brands: {selectedBrands.length}</Text>\n            )}\n            {selectedTypes.length > 0 && (\n              <Text style={styles.filterCount}>Types: {selectedTypes.length}</Text>\n            )}\n            {selectedSeries.length > 0 && (\n              <Text style={styles.filterCount}>Series: {selectedSeries.length}</Text>\n            )}\n          </View>\n        </View>\n        <Ionicons \n          name={isExpanded ? 'chevron-up' : 'chevron-down'} \n          size={24} \n          color={colors.text.secondary}\n        />\n      </Pressable>\n\n      <Animated.View style={[styles.content, { height: animatedHeight }]}>\n        <View style={styles.container} onLayout={handleLayout}>\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Brand</Text>\n            <View style={styles.chipContainer}>\n              {filterOptions.brands.map((brand) => (\n                <Pressable\n                  key={brand}\n                  style={[\n                    styles.chip,\n                    selectedBrands.includes(brand) && styles.chipSelected,\n                  ]}\n                  onPress={() => onFilterChange('brands', brand)}\n                >\n                  <Text \n                    style={[\n                      styles.chipText,\n                      selectedBrands.includes(brand) && styles.chipTextSelected,\n                    ]}\n                  >\n                    {brand}\n                  </Text>\n                </Pressable>\n              ))}\n            </View>\n          </View>\n\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Type</Text>\n            <View style={styles.chipContainer}>\n              {filterOptions.types.map((type) => (\n                <Pressable\n                  key={type}\n                  style={[\n                    styles.chip,\n                    selectedTypes.includes(type) && styles.chipSelected,\n                  ]}\n                  onPress={() => onFilterChange('type', type)}\n                >\n                  <Text \n                    style={[\n                      styles.chipText,\n                      selectedTypes.includes(type) && styles.chipTextSelected,\n                    ]}\n                  >\n                    {type}\n                  </Text>\n                </Pressable>\n              ))}\n            </View>\n          </View>\n\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Series</Text>\n            <View style={styles.chipContainer}>\n              {filterOptions.series.map((series) => (\n                <Pressable\n                  key={series}\n                  style={[\n                    styles.chip,\n                    selectedSeries.includes(series) && styles.chipSelected,\n                  ]}\n                  onPress={() => onFilterChange('series', series)}\n                >\n                  <Text \n                    style={[\n                      styles.chipText,\n                      selectedSeries.includes(series) && styles.chipTextSelected,\n                    ]}\n                  >\n                    {series}\n                  </Text>\n                </Pressable>\n              ))}\n            </View>\n          </View>\n        </View>\n      </Animated.View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: colors.background.primary,\n    marginBottom: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: colors.border,\n    overflow: 'hidden',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: colors.background.primary,\n  },\n  headerContent: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n  },\n  headerTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: colors.text.primary,\n  },\n  filterSummary: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  filterCount: {\n    fontSize: 14,\n    color: colors.text.secondary,\n  },\n  content: {\n    overflow: 'hidden',\n  },\n  container: {\n    padding: 16,\n    paddingTop: 0,\n  },\n  section: {\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: colors.text.primary,\n    marginBottom: 8,\n  },\n  chipContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  chip: {\n    backgroundColor: colors.background.secondary,\n    borderRadius: 16,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n  },\n  chipSelected: {\n    backgroundColor: colors.primary,\n  },\n  chipText: {\n    color: colors.text.secondary,\n    fontSize: 14,\n  },\n  chipTextSelected: {\n    color: colors.background.primary,\n  },\n}); ","/**\n * FoilsTable Component\n * \n * IMPORTANT: Column Alignment\n * - The table uses fixed column widths for consistent layout and horizontal scrolling\n * - Each column width in headerCell must match the corresponding cell width\n * - Current widths:\n *   - Regular columns (brand, model, type, series): 150px\n *   - Number columns (area, wingspan, AR, price): 100px\n *   - Link column: 100px\n * - When modifying column styles, always update both headerCell and cell styles to maintain alignment\n * - Table has a minWidth of 1200px to ensure proper layout on all screen sizes\n */\n\nimport React from 'react';\nimport { View, Text, Pressable, ScrollView, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { colors } from '../theme/colors';\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  onSort: (field: SortField) => void;\n  onFoilSelect: (foil: BaseProduct) => void;\n  isSelected: (foil: BaseProduct) => boolean;\n  sortOption: { field: SortField; ascending: boolean };\n}\n\nconst MOBILE_BREAKPOINT = 768;\nconst TABLE_WIDTH = 930; // 100 + 150 + 80 + 120 + (100 * 4) + 80\n\nexport function FoilsTable({\n  foils,\n  onSort,\n  onFoilSelect,\n  isSelected,\n  sortOption,\n}: FoilsTableProps) {\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n\n  const renderSortIcon = (field: SortField) => {\n    const isActive = sortOption.field === field;\n    \n    return (\n      <View style={styles.sortIconContainer}>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconUp,\n          isActive && sortOption.ascending && styles.sortIconUpActive\n        ]}>▲</Text>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconDown,\n          isActive && !sortOption.ascending && styles.sortIconDownActive\n        ]}>▼</Text>\n      </View>\n    );\n  };\n\n  const getHeaderTextStyle = (field: SortField) => {\n    return styles.headerText;\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.tableWrapper}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} contentContainerStyle={styles.scrollViewContent}>\n          <View style={styles.tableContent}>\n            <View style={styles.tableHeader}>\n              <View style={styles.headerRow}>\n                <Pressable style={styles.headerCell} onPress={() => onSort('brand')}>\n                  <Text style={getHeaderTextStyle('brand')}>Brand</Text>\n                  {renderSortIcon('brand')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.modelCell]} onPress={() => onSort('model')}>\n                  <Text style={getHeaderTextStyle('model')}>Model</Text>\n                  {renderSortIcon('model')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.typeCell]} onPress={() => onSort('type')}>\n                  <Text style={getHeaderTextStyle('type')}>Type</Text>\n                  {renderSortIcon('type')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.seriesCell]} onPress={() => onSort('series')}>\n                  <Text style={getHeaderTextStyle('series')}>Series</Text>\n                  {renderSortIcon('series')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('area')}>\n                  <Text style={[getHeaderTextStyle('area'), styles.numberHeaderText]}>Area</Text>\n                  {renderSortIcon('area')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('wingspan')}>\n                  <Text style={[getHeaderTextStyle('wingspan'), styles.numberHeaderText]}>Span</Text>\n                  {renderSortIcon('wingspan')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('aspectRatio')}>\n                  <Text style={[getHeaderTextStyle('aspectRatio'), styles.numberHeaderText]}>AR</Text>\n                  {renderSortIcon('aspectRatio')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('price')}>\n                  <Text style={[getHeaderTextStyle('price'), styles.numberHeaderText]}>Price</Text>\n                  {renderSortIcon('price')}\n                </Pressable>\n                <View style={[styles.headerCell, styles.linkHeaderCell]}>\n                  <Text style={[styles.headerText, styles.linkHeaderText]}>Link</Text>\n                </View>\n              </View>\n            </View>\n            <View style={styles.scrollViewContainer}>\n              <ScrollView style={styles.scrollView}>\n                {foils.map((foil, index) => (\n                  <Pressable\n                    key={`${foil.brand}-${foil.model}`}\n                    onPress={() => onFoilSelect(foil)}\n                    style={({ pressed }) => [\n                      styles.row,\n                      index % 2 === 0 && styles.rowEven,\n                      isSelected(foil) && styles.rowSelected,\n                      Platform.OS === 'web' && pressed && styles.rowHovered\n                    ]}\n                  >\n                    <Text style={styles.cell}>{foil.brand}</Text>\n                    <Text style={[styles.cell, styles.modelCell]}>{foil.model}</Text>\n                    <Text style={[styles.cell, styles.typeCell]}>{foil.type}</Text>\n                    <Text style={[styles.cell, styles.seriesCell]}>{foil.series}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.specs.area}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.specs.wingspan}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.specs.aspectRatio?.toFixed(2)}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.price ? `$${foil.price}` : '-'}</Text>\n                    <View style={[styles.cell, styles.linkCell]}>\n                      {foil.sourceUrl && (\n                        <Pressable \n                          onPress={(e) => {\n                            e.stopPropagation();\n                            window.open(foil.sourceUrl, '_blank');\n                          }}\n                          style={({ pressed }) => [\n                            styles.linkButton,\n                            pressed && styles.linkButtonPressed\n                          ]}\n                        >\n                          <Text style={styles.linkText}>View</Text>\n                        </Pressable>\n                      )}\n                    </View>\n                  </Pressable>\n                ))}\n              </ScrollView>\n            </View>\n          </View>\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  tableWrapper: {\n    width: TABLE_WIDTH,\n    backgroundColor: colors.background.primary,\n    borderRadius: 8,\n    overflow: 'hidden',\n    borderWidth: 1,\n    borderColor: colors.border,\n    flex: 1,\n  },\n  tableContent: {\n    backgroundColor: colors.background.primary,\n    width: TABLE_WIDTH,\n    flex: 1,\n    flexDirection: 'column',\n  },\n  scrollViewContainer: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  tableHeader: {\n    backgroundColor: colors.background.secondary,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.primary,\n    width: TABLE_WIDTH,\n  },\n  headerRow: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.secondary,\n  },\n  headerCell: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n    width: 100,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  headerText: {\n    color: colors.text.secondary,\n    fontWeight: '600',\n    fontSize: 16,\n  },\n  row: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border,\n    width: TABLE_WIDTH,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  rowEven: {\n    backgroundColor: colors.background.secondary,\n  },\n  rowSelected: {\n    backgroundColor: `${colors.primary}15`,\n  },\n  rowHovered: {\n    backgroundColor: `${colors.primary}10`,\n  },\n  cell: {\n    color: colors.text.primary,\n    fontSize: 14,\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n    width: 100,\n  },\n  modelCell: {\n    width: 150,\n  },\n  typeCell: {\n    width: 80,\n  },\n  seriesCell: {\n    width: 120,\n  },\n  numberCell: {\n    width: 100,\n    textAlign: 'right',\n  },\n  numberHeaderCell: {\n    width: 100,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    gap: 4,\n  },\n  numberHeaderText: {\n    textAlign: 'left',\n    flex: 1,\n  },\n  linkCell: {\n    width: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n    borderBottomRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderCell: {\n    width: 80,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderText: {\n    textAlign: 'center',\n  },\n  linkButton: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    minWidth: 44,\n    alignItems: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  linkButtonPressed: {\n    opacity: 0.8,\n  },\n  linkText: {\n    color: colors.background.primary,\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  sortIconContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: 28,\n    justifyContent: 'center',\n    width: 16,\n    gap: 2,\n  },\n  sortIcon: {\n    color: colors.text.muted,\n    fontSize: 12,\n    width: 12,\n    height: 10,\n    lineHeight: 10,\n    textAlign: 'center',\n  },\n  sortIconUp: {\n    marginBottom: 0,\n  },\n  sortIconDown: {\n    marginTop: 0,\n  },\n  sortIconUpActive: {\n    color: colors.primary,\n    fontSize: 13,\n  },\n  sortIconDownActive: {\n    color: colors.primary,\n    fontSize: 13,\n  },\n  scrollViewContent: {\n    flexGrow: 0,\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet, Pressable } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { colors } from '../theme/colors';\n\nconst Footer = () => {\n  const navigation = useNavigation<RootStackNavigationProp>();\n\n  return (\n    <View style={styles.footer}>\n      <Text style={styles.copyright}>© 2025 FoilQuiver. All rights reserved.</Text>\n      <Text style={styles.separator}>|</Text>\n      <Pressable onPress={() => navigation.navigate('Terms')}>\n        <Text style={styles.link}>Terms of Service</Text>\n      </Pressable>\n      <Text style={styles.separator}>|</Text>\n      <Pressable onPress={() => navigation.navigate('Privacy')}>\n        <Text style={styles.link}>Privacy Policy</Text>\n      </Pressable>\n      <Text style={styles.separator}>|</Text>\n      <Pressable onPress={() => navigation.navigate('Contact')}>\n        <Text style={styles.link}>Contact Us</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  footer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n    backgroundColor: colors.background.secondary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n  },\n  copyright: {\n    color: colors.text.secondary,\n    marginRight: 16,\n  },\n  separator: {\n    color: colors.text.muted,\n    marginHorizontal: 8,\n  },\n  link: {\n    color: colors.primary,\n    textDecorationLine: 'none',\n  },\n  linkHovered: {\n    color: colors.secondary,\n  }\n});\n\nexport default Footer; ","import React from 'react';\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\n\nexport function LoadingIndicator() {\n  return (\n    <View style={styles.container}>\n      <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}); ","import { Helmet } from 'react-helmet-async';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  canonicalUrl?: string;\n  imageUrl?: string;\n}\n\nexport const SEOHead: React.FC<SEOHeadProps> = ({\n  title,\n  description,\n  canonicalUrl,\n  imageUrl\n}) => {\n  const siteTitle = 'FoilQuiver';\n  const fullTitle = `${title} | ${siteTitle}`;\n  \n  return (\n    <Helmet>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      {imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n      \n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      {imageUrl && <meta name=\"twitter:image\" content={imageUrl} />}\n    </Helmet>\n  );\n}; ","import React from 'react';\nimport { View, TextInput, Pressable, Text, StyleSheet, Platform } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { colors } from '../theme/colors';\n\ninterface SearchBarProps {\n  value: string;\n  onChangeText: (text: string) => void;\n  onClear: () => void;\n  placeholder?: string;\n}\n\nexport function SearchBar({\n  value,\n  onChangeText,\n  onClear,\n  placeholder = '🔍 Search foils...'\n}: SearchBarProps) {\n  return (\n    <View style={styles.wrapper}>\n      <View style={styles.container}>\n        <TextInput\n          style={styles.input}\n          value={value}\n          onChangeText={onChangeText}\n          placeholder={placeholder}\n          placeholderTextColor={colors.text.muted}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n        />\n        {value.length > 0 && (\n          <Pressable\n            style={styles.clearButton}\n            onPress={onClear}\n          >\n            <Text style={styles.clearButtonText}>✕</Text>\n          </Pressable>\n        )}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    width: '100%',\n    alignItems: 'center',\n    paddingVertical: 16,\n    backgroundColor: colors.background.primary,\n  },\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: colors.background.secondary,\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    borderWidth: 1,\n    borderColor: colors.border,\n    width: Platform.OS === 'web' ? '40%' : '90%',\n    maxWidth: 500,\n    minWidth: 280,\n  },\n  input: {\n    flex: 1,\n    height: 48,\n    fontSize: 16,\n    color: colors.text.primary,\n  },\n  clearButton: {\n    padding: 8,\n  },\n  clearButtonText: {\n    color: colors.text.muted,\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n}); "],"names":["WebWrapper","Platform","select","web","_ref","children","_jsx","style","position","bottom","left","right","zIndex","pointerEvents","display","justifyContent","paddingRight","spacing","LARGE","paddingBottom","MEDIUM","default","_ref2","_Fragment","_ref3","selectedFoils","onCompareSelected","onExitCompare","onClearSelection","isComparisonView","length","content","View","styles","comparisonBar","Pressable","button","cancelButton","onPress","Text","buttonText","_jsxs","selectionText","buttonGroup","clearButton","clearButtonText","buttonDisabled","disabled","OS","container","StyleSheet","create","flexDirection","alignItems","padding","backgroundColor","colors","background","secondary","borderTopWidth","borderTopColor","border","gap","floatingButton","_objectSpread","alignSelf","paddingHorizontal","paddingVertical","borderRadius","boxShadow","cursor","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","primary","text","muted","opacity","borderWidth","borderColor","color","fontWeight","fontSize","marginRight","selectedCount","buttonContainer","compareButton","compareButtonText","foils","_useSortedFoils","onClose","onCompare","useSortedFoils","sortOption","setSortOption","sortedFoils","FoilsTable","onSort","field","prev","direction","onFoilSelect","isSelected","ascending","flex","ErrorBoundary","_Component","_this","_classCallCheck","_len","arguments","args","Array","_key","concat","state","hasError","error","_inherits","_createClass","key","value","errorInfo","_this$state$error","this","errorText","message","props","Component","marginBottom","FilterControls","filterOptions","selectedBrands","selectedSeries","selectedTypes","onFilterChange","_useState","useState","_useState2","_slicedToArray","isExpanded","setIsExpanded","_useState3","Animated","Value","animation","_useState5","_useState6","contentHeight","setContentHeight","animatedHeight","interpolate","inputRange","outputRange","wrapper","toValue","spring","useNativeDriver","friction","start","header","headerContent","headerTitle","filterSummary","filterCount","Ionicons","name","size","onLayout","event","nativeEvent","layout","section","sectionTitle","chipContainer","brands","map","brand","chip","includes","chipSelected","chipText","chipTextSelected","types","type","series","overflow","paddingTop","flexWrap","TABLE_WIDTH","renderSortIcon","useWindowDimensions","isActive","sortIconContainer","sortIcon","sortIconUp","sortIconUpActive","sortIconDown","sortIconDownActive","getHeaderTextStyle","headerText","tableWrapper","ScrollView","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","scrollViewContent","tableContent","tableHeader","headerRow","headerCell","modelCell","typeCell","seriesCell","numberHeaderCell","numberHeaderText","linkHeaderCell","linkHeaderText","scrollViewContainer","scrollView","foil","index","_foil$specs$aspectRat","pressed","row","rowEven","rowSelected","rowHovered","cell","model","numberCell","specs","area","wingspan","aspectRatio","toFixed","price","linkCell","sourceUrl","e","stopPropagation","window","open","linkButton","linkButtonPressed","linkText","borderBottomWidth","borderBottomColor","borderRightWidth","borderRightColor","textAlign","borderTopRightRadius","borderBottomRightRadius","minWidth","lineHeight","marginTop","flexGrow","footer","copyright","separator","marginHorizontal","link","textDecorationLine","linkHovered","navigation","useNavigation","navigate","LoadingIndicator","ActivityIndicator","SEOHead","title","description","canonicalUrl","imageUrl","fullTitle","Helmet","rel","href","property","SearchBar","onChangeText","onClear","_ref$placeholder","placeholder","TextInput","input","placeholderTextColor","autoCapitalize","autoCorrect","maxWidth"],"sourceRoot":""}