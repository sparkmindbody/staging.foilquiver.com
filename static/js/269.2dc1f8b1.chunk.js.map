{"version":3,"file":"static/js/269.2dc1f8b1.chunk.js","mappings":"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","sources":["src/components/Footer.tsx","src/components/AppLayout.tsx","src/components/ComparisonControls.tsx","src/components/FoilsTable.tsx","src/components/SEOHead.tsx","src/hooks/useSearchFoils.ts","src/hooks/useSortedFoils.ts","src/utils/sorting.ts","src/screens/BrowseScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\nexport default function Footer() {\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { width } = useWindowDimensions();\n  const { colors } = useTheme();\n  const isMobile = width < 768;\n\n  return (\n    <View style={[\n      styles.container, \n      isMobile && styles.containerMobile,\n      { \n        backgroundColor: colors.background.primary,\n        borderTopColor: colors.border\n      }\n    ]}>\n      <View style={[styles.content, isMobile && styles.contentMobile]}>\n        <View style={[styles.linksContainer, isMobile && styles.linksContainerMobile]}>\n          <View style={[styles.linkGroup, isMobile && styles.linkGroupMobile]}>\n            <Pressable onPress={() => navigation.navigate('Terms')}>\n              <Text style={[styles.link, { color: colors.text.secondary }]}>Terms of Service</Text>\n            </Pressable>\n            <Text style={[styles.separator, { color: colors.text.tertiary }]}>•</Text>\n            <Pressable onPress={() => navigation.navigate('Privacy')}>\n              <Text style={[styles.link, { color: colors.text.secondary }]}>Privacy Policy</Text>\n            </Pressable>\n            <Text style={[styles.separator, { color: colors.text.tertiary }]}>•</Text>\n            <Pressable onPress={() => navigation.navigate('Contact')}>\n              <Text style={[styles.link, { color: colors.text.secondary }]}>Contact Us</Text>\n            </Pressable>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    padding: spacing.LARGE,\n  },\n  containerMobile: {\n    padding: 0,\n  },\n  content: {\n    padding: 0,\n    borderTopWidth: 1,\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n  },\n  contentMobile: {\n    flexDirection: 'column',\n    gap: 8,\n  },\n  linksContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  linksContainerMobile: {\n    flexDirection: 'column',\n    gap: spacing.SMALL,\n  },\n  linkGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.LARGE,\n  },\n  linkGroupMobile: {\n    gap: 8,\n  },\n  link: {\n    fontSize: 14,\n  },\n  separator: {\n    fontSize: 14,\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Footer from './Footer';\nimport { useTheme } from '../theme/ThemeContext';\n\ninterface AppLayoutProps {\n  children: React.ReactNode;\n  showFooter?: boolean;\n}\n\nexport const AppLayout: React.FC<AppLayoutProps> = ({ \n  children, \n  showFooter = true,\n}) => {\n  const { colors } = useTheme();\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.primary }]}>\n      <View style={styles.content}>\n        {children}\n      </View>\n      {showFooter && <Footer />}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: 1,\n    width: '100%',\n  },\n}); ","import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform, TouchableOpacity } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../theme/spacing';\nimport { colors } from '../theme/colors';\nimport { useTheme } from '../theme/ThemeContext';\nimport { useNavigation } from '@react-navigation/native';\nimport { Button } from './Button';\n\ninterface ComparisonControlsProps {\n  selectedFoils: BaseProduct[];\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  onClearSelection: () => void;\n  isComparisonView?: boolean;\n  isQuiverView?: boolean;\n}\n\nconst ComparisonControls = ({ \n  selectedFoils, \n  onCompareSelected, \n  onExitCompare, \n  onClearSelection, \n  isComparisonView = false,\n  isQuiverView = false\n}: ComparisonControlsProps) => {\n  const { colors } = useTheme();\n  const navigation = useNavigation();\n\n  // Only show controls if there are selected foils or we're in comparison view\n  if (selectedFoils.length === 0 && !isComparisonView) {\n    return null;\n  }\n\n  const handleCompare = () => {\n    if (selectedFoils.length === 0) return;\n    \n    // Navigate to the dedicated comparison screen\n    navigation.navigate('Comparison', {\n      foils: selectedFoils,\n    });\n  };\n\n  return !isComparisonView ? (\n    <View style={styles.comparisonBar}>\n      <View style={styles.buttonGroup}>\n        <Pressable\n          style={[styles.button, styles.clearButton]}\n          onPress={onClearSelection}\n        >\n          <Text style={[styles.buttonText, styles.clearButtonText]}>Clear</Text>\n        </Pressable>\n        <Pressable\n          style={[styles.button, styles.compareButton, selectedFoils.length < 2 && styles.buttonDisabled]}\n          onPress={handleCompare}\n          disabled={selectedFoils.length < 2}\n        >\n          <Text style={[styles.buttonText, styles.compareButtonText]}>Compare</Text>\n        </Pressable>\n      </View>\n    </View>\n  ) : (\n    <View style={styles.comparisonBar}>\n      <TouchableOpacity\n        style={[styles.button, { backgroundColor: colors.background.secondary }]}\n        onPress={onExitCompare}\n      >\n        <Text style={[styles.buttonText, { color: colors.text.primary }]}>\n          {isQuiverView ? 'Close Quiver' : 'Back'}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default ComparisonControls;\n\nconst styles = StyleSheet.create({\n  comparisonBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: spacing.MEDIUM,\n    paddingVertical: spacing.SMALL,\n    borderRadius: 8,\n    gap: 6,\n    minHeight: 32,\n    minWidth: 90,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n  buttonDisabled: {\n    opacity: 0.5,\n  },\n  clearButton: {\n    backgroundColor: colors.background.primary,\n    borderWidth: 1,\n    borderColor: colors.primary,\n  },\n  compareButton: {\n    backgroundColor: colors.primary,\n  },\n  buttonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    textAlign: 'center',\n    ...(Platform.OS === 'web' && {\n      userSelect: 'none',\n    }),\n  },\n  clearButtonText: {\n    color: colors.primary,\n  },\n  compareButtonText: {\n    color: colors.background.primary,\n  },\n}); ","/**\n * FoilsTable Component\n * \n * IMPORTANT: Column Alignment\n * - The table uses fixed column widths for consistent layout and horizontal scrolling\n * - Each column width in headerCell must match the corresponding cell width\n * - Current widths:\n *   - Regular columns (brand, model, type, series): 150px\n *   - Number columns (area, wingspan, AR, price): 100px\n *   - Link column: 100px\n * - When modifying column styles, always update both headerCell and cell styles to maintain alignment\n * - Table has a minWidth of 1200px to ensure proper layout on all screen sizes\n */\n\nimport React, { useEffect } from 'react';\nimport { View, Text, Pressable, ScrollView, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { BaseProduct, SortField } from '../types/scraper';\nimport { useTheme } from '../theme/ThemeContext';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT, COLUMN_WIDTHS, getTableWidth, getContentWidth, Column } from '../constants/layout';\nimport { saveSortOption, loadSortOption } from '../utils/storage';\nimport { trackAction, ANALYTICS_EVENTS } from '../utils/analytics';\nimport { spacing } from '../theme/spacing';\n\ninterface FilterOptions {\n  brands: string[];\n  series: string[];\n  type: string[];\n}\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  onSort: (field: SortField) => void;\n  onFoilSelect: (foil: BaseProduct) => void;\n  isSelected: (foil: BaseProduct) => boolean;\n  isTemporary?: (foil: BaseProduct) => boolean;\n  sortOption: { field: SortField; ascending: boolean };\n  columns: Column[];\n  filters: FilterOptions;\n  selectedFoils?: BaseProduct[];\n  onCompare?: () => void;\n  onClearSelection?: () => void;\n}\n\nconst DEFAULT_COLUMNS = [\n  { id: 'brand', label: 'Brand', isVisible: true },\n  { id: 'series', label: 'Series', isVisible: false },\n  { id: 'model', label: 'Model', isVisible: true },\n  { id: 'area', label: 'Area', isVisible: true },\n  { id: 'wingspan', label: 'Span', isVisible: true },\n  { id: 'aspectRatio', label: 'AR', isVisible: true },\n  { id: 'type', label: 'Type', isVisible: true },\n  { id: 'price', label: 'Price', isVisible: true },\n  { id: 'link', label: 'Link', isVisible: true },\n];\n\nexport const FoilsTable: React.FC<FoilsTableProps> = ({\n  foils,\n  onSort,\n  onFoilSelect,\n  isSelected,\n  isTemporary,\n  sortOption,\n  columns,\n  filters,\n  selectedFoils,\n  onCompare,\n  onClearSelection,\n}) => {\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const { colors } = useTheme();\n\n  // Load saved sort option on mount\n  useEffect(() => {\n    const loadSavedSort = async () => {\n      try {\n        const savedSort = await loadSortOption();\n        if (savedSort && (savedSort.field !== sortOption.field || savedSort.ascending !== sortOption.ascending)) {\n          onSort(savedSort.field);\n        }\n      } catch (error) {\n        console.error('Error loading sort option:', error);\n      }\n    };\n\n    loadSavedSort();\n  }, []);\n\n  // Save sort option when it changes\n  useEffect(() => {\n    const saveSortSettings = async () => {\n      try {\n        await saveSortOption({\n          field: sortOption.field,\n          ascending: sortOption.ascending\n        });\n      } catch (error) {\n        console.error('Error saving sort option:', error);\n      }\n    };\n\n    saveSortSettings();\n  }, [sortOption]);\n\n  const getColumnWidth = (columnId: string) => {\n    return COLUMN_WIDTHS[columnId as keyof typeof COLUMN_WIDTHS] || 150;\n  };\n\n  const isColumnFiltered = (columnId: string) => {\n    switch (columnId) {\n      case 'brand':\n        return filters.brands.length > 0;\n      case 'series':\n        return filters.series.length > 0;\n      case 'type':\n        return filters.type.length > 0;\n      default:\n        return false;\n    }\n  };\n\n  const renderSortIcon = (columnId: string) => {\n    if (sortOption.field !== columnId) {\n      return (\n        <View style={styles.sortIconContainer}>\n          <Text style={[styles.sortIcon, { color: colors.text.tertiary }]}>▲</Text>\n          <Text style={[styles.sortIcon, { color: colors.text.tertiary }]}>▼</Text>\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.sortIconContainer}>\n        <Text style={[\n          styles.sortIcon,\n          sortOption.ascending && [styles.sortIconUpActive, { color: colors.primary }]\n        ]}>▲</Text>\n        <Text style={[\n          styles.sortIcon,\n          !sortOption.ascending && [styles.sortIconDownActive, { color: colors.primary }]\n        ]}>▼</Text>\n      </View>\n    );\n  };\n\n  const getCellContent = (foil: BaseProduct, columnId: string) => {\n    let content: React.ReactNode = '-';\n    \n    switch (columnId) {\n      case 'brand':\n        content = foil.brand;\n        break;\n      case 'model':\n        content = foil.model;\n        break;\n      case 'series':\n        content = foil.series || '-';\n        break;\n      case 'area':\n        content = foil.specs?.area?.toFixed(2) || '-';\n        break;\n      case 'wingspan':\n        content = foil.specs?.wingspan?.toFixed(2) || '-';\n        break;\n      case 'aspectRatio':\n        content = foil.specs?.aspectRatio?.toFixed(2) || '-';\n        break;\n      case 'type':\n        content = foil.type || '-';\n        break;\n      case 'price':\n        content = foil.price ? `$${foil.price}` : '-';\n        break;\n      case 'link':\n        return (\n          <Pressable\n            style={[styles.linkButton, { backgroundColor: colors.primary }]}\n            onPress={() => window.open(foil.sourceUrl, '_blank')}\n          >\n            <Text style={[styles.linkText, { color: colors.text.inverse }]}>View</Text>\n            <Text style={[styles.externalLinkIcon, { color: colors.text.inverse }]}>↗</Text>\n          </Pressable>\n        );\n    }\n\n    return (\n      <Text \n        style={[\n          styles.cellText,\n          { color: colors.text.primary },\n          ['area', 'wingspan', 'aspectRatio', 'price'].includes(columnId) && styles.numberText\n        ]}\n      >\n        {content}\n      </Text>\n    );\n  };\n\n  const handleSort = (field: SortField) => {\n    trackAction(ANALYTICS_EVENTS.SORT_FOILS, {\n      field,\n      direction: sortOption.field === field && sortOption.ascending ? 'desc' : 'asc'\n    });\n    onSort(field);\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.primary }]}>\n      <ScrollView \n        horizontal \n        showsHorizontalScrollIndicator={true}\n        style={[\n          styles.horizontalScrollView,\n          isMobile && {\n            marginHorizontal: -CONTAINER_PADDING,\n            paddingHorizontal: CONTAINER_PADDING\n          }\n        ]}\n      >\n        <View style={styles.tableContent}>\n          <View style={[\n            styles.tableHeader,\n            { backgroundColor: colors.background.tertiary }\n          ]}>\n            <View style={[\n              styles.headerRow,\n              { \n                borderBottomColor: colors.border,\n                backgroundColor: colors.background.secondary,\n              }\n            ]}>\n              {columns.map(column => column.isVisible && (\n                <Pressable\n                  key={column.id}\n                  style={[\n                    styles.headerCell,\n                    { \n                      width: getColumnWidth(column.id),\n                      borderRightColor: colors.text.tertiary + '40',\n                      borderBottomColor: isColumnFiltered(column.id) ? colors.primary : colors.border,\n                      backgroundColor: colors.background.tertiary,\n                      borderRightWidth: 1,\n                    },\n                    isColumnFiltered(column.id) && styles.headerCellFiltered\n                  ]}\n                  onPress={() => handleSort(column.id as SortField)}\n                >\n                  <Text style={[\n                    styles.headerText,\n                    { \n                      color: isColumnFiltered(column.id) ? colors.primary : colors.text.primary,\n                      fontWeight: '600',\n                    }\n                  ]}>\n                    {column.label}\n                  </Text>\n                  {renderSortIcon(column.id)}\n                </Pressable>\n              ))}\n            </View>\n          </View>\n          <ScrollView \n            style={[styles.scrollView, { backgroundColor: colors.background.primary }]}\n            showsVerticalScrollIndicator={true}\n            bounces={false}\n          >\n            {foils.map((foil, index) => {\n              const selected = isSelected(foil);\n              const temporary = isTemporary?.(foil);\n              const rowKey = `${foil.model}-${foil.specs?.area || 'unknown'}-${index}`;\n              \n              return (\n                <Pressable\n                  key={rowKey}\n                  onPress={() => onFoilSelect(foil)}\n                  style={({ pressed }) => [\n                    styles.row,\n                    { borderBottomColor: colors.border },\n                    index % 2 === 0 && [styles.rowEven, { backgroundColor: colors.background.secondary + '50' }],\n                    selected && [styles.rowSelected, { \n                      backgroundColor: `${colors.primary}15`,\n                    }],\n                    temporary && [styles.rowTemporary, {\n                      backgroundColor: `${colors.success}10`,\n                    }],\n                    Platform.OS === 'web' && pressed && !selected && [styles.rowHovered, { \n                      backgroundColor: `${colors.primary}10`,\n                    }]\n                  ]}\n                >\n                  {columns.map(column => column.isVisible && (\n                    <View\n                      key={`${rowKey}-${column.id}`}\n                      style={[\n                        styles.cell,\n                        { \n                          width: getColumnWidth(column.id),\n                          borderRightColor: colors.border,\n                          borderRightWidth: 1,\n                        }\n                      ]}\n                    >\n                      {getCellContent(foil, column.id)}\n                    </View>\n                  ))}\n                </Pressable>\n              );\n            })}\n          </ScrollView>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n  },\n  horizontalScrollView: {\n    flex: 1,\n    width: '100%',\n  },\n  tableContent: {\n    flex: 1,\n    minWidth: '100%',\n  },\n  tableHeader: {\n    borderBottomWidth: 1,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.05,\n    shadowRadius: 1,\n    elevation: 2,\n  },\n  headerRow: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n  },\n  headerCell: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: spacing.MEDIUM,\n    borderRightWidth: 1,\n    borderBottomWidth: 2,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      transition: 'all 0.2s ease',\n    }),\n  },\n  headerCellFiltered: {\n    borderBottomWidth: 2,\n  },\n  headerText: {\n    fontSize: 14,\n    flex: 1,\n    letterSpacing: 0.3,\n  },\n  row: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  rowEven: {},\n  rowSelected: {\n    borderStyle: 'solid',\n  },\n  rowHovered: {\n    borderStyle: 'solid',\n  },\n  cell: {\n    padding: spacing.MEDIUM,\n    borderRightWidth: 1,\n  },\n  cellText: {\n    fontSize: 14,\n  },\n  numberText: {\n    textAlign: 'right',\n  },\n  scrollView: {\n    flex: 1,\n  },\n  sortIconContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: 28,\n    justifyContent: 'center',\n    width: 16,\n    gap: spacing.XSMALL,\n    marginLeft: spacing.SMALL,\n  },\n  sortIcon: {\n    fontSize: 12,\n    width: 12,\n    height: 10,\n    lineHeight: 10,\n    textAlign: 'center',\n  },\n  sortIconUpActive: {\n    fontSize: 13,\n  },\n  sortIconDownActive: {\n    fontSize: 13,\n  },\n  linkButton: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    minWidth: 44,\n    alignItems: 'center',\n    position: 'relative',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  linkText: {\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  externalLinkIcon: {\n    position: 'absolute',\n    top: 0,\n    right: 2,\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  rowTemporary: {\n    borderStyle: 'dashed',\n  },\n});\n","import { Helmet } from 'react-helmet-async';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  canonicalUrl?: string;\n  imageUrl?: string;\n}\n\nexport const SEOHead: React.FC<SEOHeadProps> = ({\n  title,\n  description,\n  canonicalUrl,\n  imageUrl\n}) => {\n  const siteTitle = 'FoilQuiver';\n  const fullTitle = `${title} | ${siteTitle}`;\n  \n  return (\n    <Helmet>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      {imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n      \n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      {imageUrl && <meta name=\"twitter:image\" content={imageUrl} />}\n    </Helmet>\n  );\n}; ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useSearchFoils(foils: BaseProduct[], searchQuery: string) {\n  const searchedFoils = useMemo(() => {\n    if (!searchQuery.trim()) {\n      return foils;\n    }\n\n    const query = searchQuery.toLowerCase().trim();\n    return foils.filter(foil => {\n      const searchableText = [\n        foil.brand,\n        foil.model,\n        foil.series || '',\n        foil.type || '',\n        foil.specs?.area?.toString() || '',\n        foil.specs?.wingspan?.toString() || '',\n        foil.specs?.aspectRatio?.toString() || '',\n      ].join(' ').toLowerCase();\n\n      return searchableText.includes(query);\n    });\n  }, [foils, searchQuery]);\n\n  return { searchedFoils };\n} ","import { useState, useMemo } from 'react';\nimport { BaseProduct, SortField } from '../types/scraper';\nimport { sortProducts } from '../utils/sorting';\n\nexport interface SortOption {\n  field: SortField;\n  direction: 'asc' | 'desc';\n}\n\nexport function useSortedFoils(foils: BaseProduct[]) {\n  const [sortOption, setSortOption] = useState<SortOption>({\n    field: 'area',\n    direction: 'desc'\n  });\n\n  const sortedFoils = useMemo(() => {\n    return sortProducts(foils, sortOption.field, sortOption.direction);\n  }, [foils, sortOption]);\n\n  return {\n    sortOption,\n    setSortOption,\n    sortedFoils\n  };\n} ","import { BaseProduct } from '../types/scraper';\nimport { SortField, SortDirection } from '../hooks/useSortedFoils';\n\nexport function sortProducts(\n  products: BaseProduct[],\n  field: SortField,\n  direction: SortDirection\n): BaseProduct[] {\n  return [...products].sort((a, b) => {\n    let valueA: string | number;\n    let valueB: string | number;\n\n    if (field === 'brand' || field === 'series' || field === 'model' || field === 'type') {\n      valueA = a[field].toLowerCase();\n      valueB = b[field].toLowerCase();\n    } else if (field === 'price') {\n      valueA = a.price || 0;\n      valueB = b.price || 0;\n    } else if (field in a.specs) {\n      valueA = a.specs[field as keyof typeof a.specs] || 0;\n      valueB = b.specs[field as keyof typeof b.specs] || 0;\n    } else {\n      valueA = '';\n      valueB = '';\n    }\n    \n    const multiplier = direction === 'asc' ? 1 : -1;\n    \n    if (typeof valueA === 'string' && typeof valueB === 'string') {\n      return valueA.localeCompare(valueB) * multiplier;\n    }\n    if (typeof valueA === 'number' && typeof valueB === 'number') {\n      return (valueA - valueB) * multiplier;\n    }\n    return 0;\n  });\n} ","import React, { useState, useEffect, useMemo, useTransition } from 'react';\nimport { View, Text, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport type { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { useFoils } from '../hooks/useFoils';\nimport { useSearchFoils } from '../hooks/useSearchFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\nimport { FoilsTable } from '../components/FoilsTable';\nimport ComparisonControls from '../components/ComparisonControls';\nimport { AppLayout } from '../components/AppLayout';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { SEOHead } from '../components/SEOHead';\nimport { RootStackParamList } from '../types/navigation';\nimport { useTheme } from '../theme/ThemeContext';\nimport { BaseProduct, SortField } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT, Column } from '../constants/layout';\nimport { spacing } from '../theme/spacing';\nimport { getEnvironmentConfig } from '../config/environment';\nimport { useApp } from '../context/AppContext';\nimport { routes } from '../utils/routes';\n\ninterface BrowseScreenProps extends NativeStackScreenProps<RootStackParamList, 'Browse'> {\n  filters: FilterOptions;\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n  columns: Column[];\n  brands: string[];\n}\n\nconst BrowseScreen = ({ \n  route,\n  navigation,\n  filters,\n  onFilterChange,\n  columns,\n  brands,\n}: BrowseScreenProps) => {\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const { foils, loading, error } = useFoils();\n  const { filteredFoils, filterOptions } = useFilteredFoils(foils, filters);\n  const { colors } = useTheme();\n  const [selectedFoils, setSelectedFoils] = useState<BaseProduct[]>([]);\n  const { searchQuery, setSearchQuery } = useApp();\n  const config = getEnvironmentConfig();\n  const [isPending, startTransition] = useTransition();\n\n  const { searchedFoils } = useSearchFoils(filteredFoils, searchQuery);\n  \n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(searchedFoils);\n\n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleFoilSelect = (foil: BaseProduct) => {\n    setSelectedFoils(prev => {\n      const isSelected = prev.some(f => \n        f.model === foil.model && \n        f.specs?.area === foil.specs?.area\n      );\n      if (isSelected) {\n        return prev.filter(f => \n          !(f.model === foil.model && f.specs?.area === foil.specs?.area)\n        );\n      }\n      return [...prev, foil];\n    });\n  };\n\n  const handleCompare = () => {\n    if (selectedFoils.length < 2) return;\n    startTransition(() => {\n      navigation.navigate('Comparison', {\n        foils: selectedFoils,\n        title: `Comparing ${selectedFoils.length} Foils`\n      });\n    });\n  };\n\n  const handleClearSelection = () => {\n    setSelectedFoils([]);\n  };\n\n  const isSelected = (foil: BaseProduct) => {\n    return selectedFoils.some(f => \n      f.model === foil.model && \n      f.specs?.area === foil.specs?.area\n    );\n  };\n\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return <Text style={[styles.error, { color: colors.error }]}>{error}</Text>;\n  }\n\n  return (\n    <AppLayout\n      showFooter={true}\n    >\n      <SEOHead\n        title=\"FoilQuiver - Browse and compare hydrofoils\"\n        description={`Compare ${foils.length} hydrofoils across ${brands.length} brands. Filter by type, brand, and specifications to find your perfect foil.`}\n        canonicalUrl={`${config.webUrl}${routes.browse}`}\n      />\n      <View style={styles.tableContainer}>\n        <FoilsTable\n          foils={sortedFoils}\n          onSort={handleSort}\n          onFoilSelect={handleFoilSelect}\n          isSelected={isSelected}\n          sortOption={{\n            field: sortOption.field,\n            ascending: sortOption.direction === 'asc'\n          }}\n          columns={columns}\n          filters={filters}\n          selectedFoils={selectedFoils}\n          onCompare={handleCompare}\n          onClearSelection={handleClearSelection}\n        />\n        {selectedFoils.length > 0 && (\n          <View style={styles.comparisonControlsContainer}>\n            <ComparisonControls\n              selectedFoils={selectedFoils}\n              onCompareSelected={handleCompare}\n              onClearSelection={handleClearSelection}\n              onExitCompare={() => {}}\n              isComparisonView={false}\n            />\n          </View>\n        )}\n      </View>\n    </AppLayout>\n  );\n};\n\nexport default BrowseScreen;\n\nconst styles = StyleSheet.create({\n  tableContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    width: '100%',\n    position: 'relative',\n    ...(Platform.OS === 'web' ? {\n      padding: CONTAINER_PADDING,\n    } : {\n      paddingVertical: CONTAINER_PADDING,\n    }),\n  },\n  comparisonControlsContainer: {\n    position: 'absolute',\n    bottom: spacing.LARGE,\n    right: 0,\n    left: 0,\n    paddingHorizontal: CONTAINER_PADDING,\n  },\n  error: {\n    padding: 16,\n    textAlign: 'center',\n  },\n}); "],"names":["Footer","navigation","useNavigation","width","useWindowDimensions","colors","useTheme","isMobile","_jsx","View","style","styles","container","containerMobile","backgroundColor","background","primary","borderTopColor","border","children","content","contentMobile","linksContainer","linksContainerMobile","_jsxs","linkGroup","linkGroupMobile","Pressable","onPress","navigate","Text","link","color","text","secondary","separator","tertiary","StyleSheet","create","padding","spacing","LARGE","borderTopWidth","maxWidth","marginHorizontal","flexDirection","gap","justifyContent","alignItems","SMALL","fontSize","AppLayout","showFooter","flex","display","ComparisonControls","selectedFoils","onCompareSelected","onExitCompare","onClearSelection","isComparisonView","isQuiverView","length","comparisonBar","TouchableOpacity","button","buttonText","buttonGroup","clearButton","clearButtonText","compareButton","buttonDisabled","handleCompare","foils","disabled","compareButtonText","MEDIUM","Object","assign","paddingHorizontal","paddingVertical","borderRadius","minHeight","minWidth","Platform","OS","cursor","pointerEvents","userSelect","boxShadow","opacity","borderWidth","borderColor","fontWeight","textAlign","FoilsTable","onSort","onFoilSelect","isSelected","isTemporary","sortOption","columns","filters","onCompare","MOBILE_BREAKPOINT","useEffect","async","savedSort","loadSortOption","field","ascending","error","loadSavedSort","saveSortOption","saveSortSettings","getColumnWidth","columnId","COLUMN_WIDTHS","isColumnFiltered","brands","series","type","getCellContent","foil","brand","model","specs","area","toFixed","wingspan","aspectRatio","price","linkButton","window","open","sourceUrl","linkText","inverse","externalLinkIcon","cellText","includes","numberText","ScrollView","horizontal","showsHorizontalScrollIndicator","horizontalScrollView","CONTAINER_PADDING","tableContent","tableHeader","headerRow","borderBottomColor","map","column","isVisible","headerCell","id","borderRightColor","borderRightWidth","headerCellFiltered","handleSort","trackAction","ANALYTICS_EVENTS","SORT_FOILS","direction","headerText","label","sortIconContainer","sortIcon","sortIconUpActive","sortIconDownActive","scrollView","showsVerticalScrollIndicator","bounces","index","selected","temporary","rowKey","pressed","row","rowEven","rowSelected","rowTemporary","success","rowHovered","cell","borderBottomWidth","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","transition","letterSpacing","borderStyle","XSMALL","marginLeft","lineHeight","position","top","right","SEOHead","_ref","title","description","canonicalUrl","imageUrl","fullTitle","Helmet","name","rel","href","property","useSearchFoils","searchQuery","searchedFoils","useMemo","trim","query","toLowerCase","filter","toString","join","useSortedFoils","setSortOption","useState","sortedFoils","products","_toConsumableArray","sort","a","b","valueA","valueB","multiplier","localeCompare","BrowseScreen","route","onFilterChange","loading","useFoils","filteredFoils","filterOptions","useFilteredFoils","setSelectedFoils","setSearchQuery","useApp","config","getEnvironmentConfig","isPending","startTransition","useTransition","handleClearSelection","LoadingIndicator","webUrl","routes","browse","tableContainer","prev","some","f","comparisonControlsContainer","bottom","left"],"sourceRoot":""}