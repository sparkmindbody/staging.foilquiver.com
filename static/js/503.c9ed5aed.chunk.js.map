{"version":3,"file":"static/js/503.c9ed5aed.chunk.js","mappings":"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","sources":["node_modules/react-native-safe-area-context/src/SafeAreaView.web.tsx","node_modules/react-native-web/dist/exports/TouchableOpacity/index.js","node_modules/react-native-web/dist/exports/Alert/index.js","src/screens/legal/Contact.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  Edge,\n  EdgeMode,\n  EdgeRecord,\n  NativeSafeAreaViewInstance,\n  NativeSafeAreaViewProps,\n} from './SafeArea.types';\nimport { useSafeAreaInsets } from './SafeAreaContext';\n\nconst defaultEdges: Record<Edge, EdgeMode> = {\n  top: 'additive',\n  left: 'additive',\n  bottom: 'additive',\n  right: 'additive',\n};\n\nfunction getEdgeValue(\n  inset: number,\n  current: number,\n  mode: EdgeMode | undefined,\n) {\n  switch (mode) {\n    case 'off':\n      return current;\n    case 'maximum':\n      return Math.max(current, inset);\n    case 'additive':\n    default:\n      return current + inset;\n  }\n}\n\nexport const SafeAreaView = React.forwardRef<\n  NativeSafeAreaViewInstance,\n  NativeSafeAreaViewProps\n>(({ style = {}, mode, edges, ...rest }, ref) => {\n  const insets = useSafeAreaInsets();\n\n  const edgesRecord = React.useMemo(() => {\n    if (edges == null) {\n      return defaultEdges;\n    }\n\n    return Array.isArray(edges)\n      ? edges.reduce<EdgeRecord>((acc, edge: Edge) => {\n          acc[edge] = 'additive';\n          return acc;\n        }, {})\n      : // ts has trouble with refining readonly arrays.\n        (edges as EdgeRecord);\n  }, [edges]);\n\n  const appliedStyle = React.useMemo(() => {\n    const flatStyle = StyleSheet.flatten(style) as Record<string, number>;\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal,\n      } = flatStyle;\n\n      const marginStyle = {\n        marginTop: getEdgeValue(insets.top, marginTop, edgesRecord.top),\n        marginRight: getEdgeValue(insets.right, marginRight, edgesRecord.right),\n        marginBottom: getEdgeValue(\n          insets.bottom,\n          marginBottom,\n          edgesRecord.bottom,\n        ),\n        marginLeft: getEdgeValue(insets.left, marginLeft, edgesRecord.left),\n      };\n\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal,\n      } = flatStyle;\n\n      const paddingStyle = {\n        paddingTop: getEdgeValue(insets.top, paddingTop, edgesRecord.top),\n        paddingRight: getEdgeValue(\n          insets.right,\n          paddingRight,\n          edgesRecord.right,\n        ),\n        paddingBottom: getEdgeValue(\n          insets.bottom,\n          paddingBottom,\n          edgesRecord.bottom,\n        ),\n        paddingLeft: getEdgeValue(insets.left, paddingLeft, edgesRecord.left),\n      };\n\n      return [style, paddingStyle];\n    }\n  }, [\n    edgesRecord.bottom,\n    edgesRecord.left,\n    edgesRecord.right,\n    edgesRecord.top,\n    insets.bottom,\n    insets.left,\n    insets.right,\n    insets.top,\n    mode,\n    style,\n  ]);\n\n  return <View style={appliedStyle} {...rest} ref={ref} />;\n});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use client';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeOpacity\", \"delayPressIn\", \"delayPressOut\", \"delayLongPress\", \"disabled\", \"focusable\", \"onLongPress\", \"onPress\", \"onPressIn\", \"onPressOut\", \"rejectResponderTermination\", \"style\"];\nimport * as React from 'react';\nimport { useCallback, useMemo, useState, useRef } from 'react';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePressEvents from '../../modules/usePressEvents';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\n//import { warnOnce } from '../../modules/warnOnce';\n\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, dimming it.\n */\nfunction TouchableOpacity(props, forwardedRef) {\n  /*\n  warnOnce(\n    'TouchableOpacity',\n    'TouchableOpacity is deprecated. Please use Pressable.'\n  );\n  */\n\n  var activeOpacity = props.activeOpacity,\n    delayPressIn = props.delayPressIn,\n    delayPressOut = props.delayPressOut,\n    delayLongPress = props.delayLongPress,\n    disabled = props.disabled,\n    focusable = props.focusable,\n    onLongPress = props.onLongPress,\n    onPress = props.onPress,\n    onPressIn = props.onPressIn,\n    onPressOut = props.onPressOut,\n    rejectResponderTermination = props.rejectResponderTermination,\n    style = props.style,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var hostRef = useRef(null);\n  var setRef = useMergeRefs(forwardedRef, hostRef);\n  var _useState = useState('0s'),\n    duration = _useState[0],\n    setDuration = _useState[1];\n  var _useState2 = useState(null),\n    opacityOverride = _useState2[0],\n    setOpacityOverride = _useState2[1];\n  var setOpacityTo = useCallback((value, duration) => {\n    setOpacityOverride(value);\n    setDuration(duration ? duration / 1000 + \"s\" : '0s');\n  }, [setOpacityOverride, setDuration]);\n  var setOpacityActive = useCallback(duration => {\n    setOpacityTo(activeOpacity !== null && activeOpacity !== void 0 ? activeOpacity : 0.2, duration);\n  }, [activeOpacity, setOpacityTo]);\n  var setOpacityInactive = useCallback(duration => {\n    setOpacityTo(null, duration);\n  }, [setOpacityTo]);\n  var pressConfig = useMemo(() => ({\n    cancelable: !rejectResponderTermination,\n    disabled,\n    delayLongPress,\n    delayPressStart: delayPressIn,\n    delayPressEnd: delayPressOut,\n    onLongPress,\n    onPress,\n    onPressStart(event) {\n      var isGrant = event.dispatchConfig != null ? event.dispatchConfig.registrationName === 'onResponderGrant' : event.type === 'keydown';\n      setOpacityActive(isGrant ? 0 : 150);\n      if (onPressIn != null) {\n        onPressIn(event);\n      }\n    },\n    onPressEnd(event) {\n      setOpacityInactive(250);\n      if (onPressOut != null) {\n        onPressOut(event);\n      }\n    }\n  }), [delayLongPress, delayPressIn, delayPressOut, disabled, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination, setOpacityActive, setOpacityInactive]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, pressEventHandlers, {\n    accessibilityDisabled: disabled,\n    focusable: !disabled && focusable !== false,\n    pointerEvents: disabled ? 'box-none' : undefined,\n    ref: setRef,\n    style: [styles.root, !disabled && styles.actionable, style, opacityOverride != null && {\n      opacity: opacityOverride\n    }, {\n      transitionDuration: duration\n    }]\n  }));\n}\nvar styles = StyleSheet.create({\n  root: {\n    transitionProperty: 'opacity',\n    transitionDuration: '0.15s',\n    userSelect: 'none'\n  },\n  actionable: {\n    cursor: 'pointer',\n    touchAction: 'manipulation'\n  }\n});\nvar MemoedTouchableOpacity = /*#__PURE__*/React.memo(/*#__PURE__*/React.forwardRef(TouchableOpacity));\nMemoedTouchableOpacity.displayName = 'TouchableOpacity';\nexport default MemoedTouchableOpacity;","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nclass Alert {\n  static alert() {}\n}\nexport default Alert;","import React, { useState } from 'react';\nimport { ScrollView, Text, StyleSheet, View, TextInput, TouchableOpacity, Alert } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../../types/navigation';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Contact'>;\n\nconst Contact = (props: Props) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = () => {\n    if (!name.trim() || !email.trim() || !message.trim()) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      Alert.alert('Error', 'Please enter a valid email address');\n      return;\n    }\n\n    // Here you would typically send the form data to your backend\n    // For now, we'll just show a success message\n    Alert.alert(\n      'Success',\n      'Thank you for your message! We will get back to you soon.',\n      [\n        {\n          text: 'OK',\n          onPress: () => {\n            setName('');\n            setEmail('');\n            setMessage('');\n          },\n        },\n      ]\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.content}>\n        <Text style={styles.title}>Contact Us</Text>\n        <Text style={styles.subtitle}>\n          FoilQuiver is still in very early development. Let me know if you have any feedback or feature requests!\n        </Text>\n\n        <View style={styles.form}>\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Name</Text>\n            <TextInput\n              style={styles.input}\n              value={name}\n              onChangeText={setName}\n              placeholder=\"Enter your name\"\n              placeholderTextColor=\"#999\"\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Email</Text>\n            <TextInput\n              style={styles.input}\n              value={email}\n              onChangeText={setEmail}\n              placeholder=\"Enter your email\"\n              placeholderTextColor=\"#999\"\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Message</Text>\n            <TextInput\n              style={[styles.input, styles.messageInput]}\n              value={message}\n              onChangeText={setMessage}\n              placeholder=\"Type your message here\"\n              placeholderTextColor=\"#999\"\n              multiline\n              numberOfLines={4}\n              textAlignVertical=\"top\"\n            />\n          </View>\n\n          <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n            <Text style={styles.submitButtonText}>Send Message</Text>\n          </TouchableOpacity>\n\n          <View style={styles.section}>\n            <Text style={styles.alternativeContact}>\n              Alternatively, you can email me directly at:{'\\n'}\n              sungho@sparkmindbody.com\n            </Text>\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 24,\n    lineHeight: 24,\n  },\n  form: {\n    marginTop: 20,\n  },\n  inputContainer: {\n    marginBottom: 20,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 8,\n    color: '#333',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    backgroundColor: '#fafafa',\n  },\n  messageInput: {\n    height: 120,\n    textAlignVertical: 'top',\n  },\n  submitButton: {\n    backgroundColor: '#007AFF',\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  section: {\n    marginTop: 32,\n    marginBottom: 24,\n  },\n  alternativeContact: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n    textAlign: 'center',\n  },\n});\n\nexport default Contact; "],"names":["defaultEdges","top","left","bottom","right","getEdgeValue","inset","current","mode","Math","max","SafeAreaView","React","_ref","ref","style","edges","rest","_objectWithoutPropertiesLoose","_excluded","insets","useSafeAreaInsets","edgesRecord","Array","isArray","reduce","acc","edge","appliedStyle","flatStyle","StyleSheet","flatten","margin","marginVertical","marginHorizontal","marginTop","marginRight","marginBottom","marginLeft","marginStyle","padding","paddingVertical","paddingHorizontal","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingStyle","View","_extends","styles","create","root","transitionProperty","transitionDuration","userSelect","actionable","cursor","touchAction","MemoedTouchableOpacity","props","forwardedRef","activeOpacity","delayPressIn","delayPressOut","delayLongPress","disabled","focusable","onLongPress","onPress","onPressIn","onPressOut","rejectResponderTermination","hostRef","useRef","setRef","useMergeRefs","_useState","useState","duration","setDuration","_useState2","opacityOverride","setOpacityOverride","setOpacityTo","useCallback","value","setOpacityActive","setOpacityInactive","pressConfig","useMemo","cancelable","delayPressStart","delayPressEnd","onPressStart","event","isGrant","dispatchConfig","registrationName","type","onPressEnd","pressEventHandlers","usePressEvents","accessibilityDisabled","pointerEvents","undefined","opacity","displayName","_createClass","Alert","_classCallCheck","key","container","flex","backgroundColor","content","title","fontSize","fontWeight","subtitle","color","lineHeight","form","inputContainer","label","input","borderWidth","borderColor","borderRadius","messageInput","height","textAlignVertical","submitButton","alignItems","submitButtonText","section","alternativeContact","textAlign","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","message","setMessage","_jsx","children","_jsxs","ScrollView","Text","TextInput","onChangeText","placeholder","placeholderTextColor","keyboardType","autoCapitalize","multiline","numberOfLines","TouchableOpacity","trim","test","alert","text"],"sourceRoot":""}