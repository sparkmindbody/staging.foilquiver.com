{"version":3,"file":"static/js/components.93c1ac2b.js","mappings":"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","sources":["src/components/ComparisonControls.tsx","src/components/ComparisonView.tsx","src/components/ErrorBoundary.tsx","src/components/ErrorMessage.tsx","src/components/FilterPanel.tsx","src/components/FilterControls.tsx","src/components/FoilsTable.tsx","src/components/Footer.tsx","src/components/LoadingIndicator.tsx","src/components/SEOHead.tsx","src/components/SearchBar.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../constants/spacing';\n\ninterface ComparisonControlsProps {\n  selectedFoils: BaseProduct[];\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  onClearSelection: () => void;\n  isComparisonView?: boolean;\n}\n\nconst WebWrapper = Platform.select({\n  web: ({ children }: { children: React.ReactNode }) => (\n    <div style={{\n      position: 'fixed',\n      bottom: 50,\n      left: 0,\n      right: 0,\n      zIndex: 1000,\n      pointerEvents: 'none',\n    }}>\n      <div style={{ pointerEvents: 'auto', display: 'flex', justifyContent: 'flex-end', paddingRight: spacing.LARGE }}>\n        {children}\n      </div>\n    </div>\n  ),\n  default: ({ children }: { children: React.ReactNode }) => <>{children}</>,\n});\n\nconst ComparisonControls = ({ selectedFoils, onCompareSelected, onExitCompare, onClearSelection, isComparisonView }: ComparisonControlsProps) => {\n  // Only show controls if there are selected foils or we're in comparison view\n  if (selectedFoils.length === 0 && !isComparisonView) {\n    return null;\n  }\n\n  const content = !isComparisonView ? (\n    <View style={styles.comparisonBar}>\n      <Text style={styles.selectionText}>\n        Selected: {selectedFoils.length}\n      </Text>\n      <View style={styles.buttonGroup}>\n        <Pressable\n          style={[styles.button, styles.clearButton]}\n          onPress={onClearSelection}\n        >\n          <Text style={styles.buttonText}>Clear</Text>\n        </Pressable>\n        <Pressable\n          style={[styles.button, selectedFoils.length < 2 && styles.buttonDisabled]}\n          onPress={onCompareSelected}\n          disabled={selectedFoils.length < 2}\n        >\n          <Text style={styles.buttonText}>Compare</Text>\n        </Pressable>\n      </View>\n    </View>\n  ) : (\n    <View style={styles.comparisonBar}>\n      <Pressable\n        style={[styles.button, styles.cancelButton]}\n        onPress={onExitCompare}\n      >\n        <Text style={styles.buttonText}>Back</Text>\n      </Pressable>\n    </View>\n  );\n\n  return Platform.OS === 'web' ? (\n    <WebWrapper>{content}</WebWrapper>\n  ) : (\n    <View style={styles.container}>\n      {content}\n    </View>\n  );\n};\n\nexport default ComparisonControls;\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    right: 0,\n    paddingHorizontal: spacing.LARGE,\n    pointerEvents: 'box-none',\n  },\n  comparisonBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  floatingButton: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonDisabled: {\n    backgroundColor: '#ccc',\n  },\n  clearButton: {\n    backgroundColor: '#6c757d', // A neutral gray color\n  },\n  cancelButton: {\n    backgroundColor: '#FF3B30',\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '600',\n    fontSize: 14,\n  },\n  selectionText: {\n    fontSize: 14,\n    color: '#666',\n    marginRight: spacing.MEDIUM,\n  },\n}); ","import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport FoilsTable from './FoilsTable';\nimport { BaseProduct } from '../types/scraper';\nimport { SortOption, SortField } from '../hooks/useSortedFoils';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\n\ninterface ComparisonViewProps {\n  foils: BaseProduct[];\n  onClose?: () => void;\n  onCompare?: () => void;\n}\n\nconst ComparisonView = ({ foils, onClose, onCompare }: ComparisonViewProps) => {\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(foils);\n  \n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleSelect = () => {};\n  const isSelected = () => false;\n\n  return (\n    <View style={styles.container}>\n      <FoilsTable\n        foils={sortedFoils}\n        sortOption={sortOption}\n        onSort={handleSort}\n        isSelected={isSelected}\n        onFoilSelect={handleSelect}\n      />\n    </View>\n  );\n};\n\nexport default ComparisonView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  }\n});","import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n    error: null\n  };\n\n  public static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Uncaught error:', error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return (\n        <View style={styles.container}>\n          <Text style={styles.text}>Something went wrong.</Text>\n          <Text style={styles.errorText}>{this.state.error?.message}</Text>\n        </View>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  text: {\n    fontSize: 16,\n    marginBottom: 10,\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 14,\n  },\n}); ","import React from 'react';\nimport { View, Text, Pressable, StyleSheet } from 'react-native';\n\ninterface ErrorMessageProps {\n  message: string;\n  onRetry?: () => void;\n}\n\nexport function ErrorMessage({ message, onRetry }: ErrorMessageProps) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.message}>{message}</Text>\n      {onRetry && (\n        <Pressable\n          style={({ pressed }) => [\n            styles.retryButton,\n            pressed && styles.retryButtonPressed\n          ]}\n          onPress={onRetry}\n        >\n          <Text style={styles.retryButtonText}>Retry</Text>\n        </Pressable>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: '#ffebee',\n    borderRadius: 8,\n    margin: 16,\n  },\n  message: {\n    color: '#c62828',\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 12,\n  },\n  retryButton: {\n    backgroundColor: '#c62828',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 6,\n  },\n  retryButtonPressed: {\n    backgroundColor: '#b71c1c',\n  },\n  retryButtonText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n}); ","import React, { useState, useRef } from 'react';\nimport { View, Text, Pressable, StyleSheet, Animated, ScrollView, LayoutChangeEvent } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\ninterface FilterPanelProps {\n  filters: {\n    brands: string[];\n    series: string[];\n    type: 'front' | 'tail' | null;\n  };\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    brandSeries: Record<string, string[]>;\n  };\n  onBrandFilter: (brand: string) => void;\n  onSeriesFilter: (series: string) => void;\n  onTypeFilter: (type: 'front' | 'tail' | null) => void;\n}\n\nexport function FilterPanel({\n  filters,\n  filterOptions,\n  onBrandFilter,\n  onSeriesFilter,\n  onTypeFilter,\n}: FilterPanelProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [animation] = useState(new Animated.Value(0));\n  const [contentHeight, setContentHeight] = useState(0);\n\n  const toggleExpanded = () => {\n    const toValue = isExpanded ? 0 : 1;\n    Animated.spring(animation, {\n      toValue,\n      useNativeDriver: false,\n    }).start();\n    setIsExpanded(!isExpanded);\n  };\n\n  const handleLayout = (event: LayoutChangeEvent) => {\n    const { height } = event.nativeEvent.layout;\n    setContentHeight(height);\n  };\n\n  const animatedHeight = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, contentHeight],\n  });\n\n  return (\n    <View style={styles.container}>\n      <Pressable onPress={toggleExpanded} style={styles.header}>\n        <Text style={styles.headerText}>Filters</Text>\n        <Ionicons \n          name={isExpanded ? 'chevron-up' : 'chevron-down'} \n          size={24} \n          color=\"#666\"\n        />\n      </Pressable>\n\n      <Animated.View style={[styles.content, { height: animatedHeight }]}>\n        <View style={styles.scrollContainer} onLayout={handleLayout}>\n          <View style={styles.filterSection}>\n            <View style={styles.filterRow}>\n              <Text style={styles.filterTitle}>Type:</Text>\n              <View style={styles.filterButtons}>\n                <Pressable\n                  style={[\n                    styles.filterButton,\n                    filters.type === 'front' && styles.filterButtonActive,\n                  ]}\n                  onPress={() => onTypeFilter(filters.type === 'front' ? null : 'front')}\n                >\n                  <Text style={[\n                    styles.filterButtonText,\n                    filters.type === 'front' && styles.filterButtonTextActive,\n                  ]}>Front</Text>\n                </Pressable>\n                <Pressable\n                  style={[\n                    styles.filterButton,\n                    filters.type === 'tail' && styles.filterButtonActive,\n                  ]}\n                  onPress={() => onTypeFilter(filters.type === 'tail' ? null : 'tail')}\n                >\n                  <Text style={[\n                    styles.filterButtonText,\n                    filters.type === 'tail' && styles.filterButtonTextActive,\n                  ]}>Tail</Text>\n                </Pressable>\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.filterSection}>\n            <View style={styles.filterRow}>\n              <Text style={styles.filterTitle}>Brand:</Text>\n              <View style={styles.filterButtons}>\n                {filterOptions.brands.map(brand => (\n                  <Pressable\n                    key={brand}\n                    style={[\n                      styles.filterButton,\n                      filters.brands.includes(brand) && styles.filterButtonActive,\n                    ]}\n                    onPress={() => onBrandFilter(brand)}\n                  >\n                    <Text style={[\n                      styles.filterButtonText,\n                      filters.brands.includes(brand) && styles.filterButtonTextActive,\n                    ]}>{brand}</Text>\n                  </Pressable>\n                ))}\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.filterSection}>\n            <View style={styles.filterRow}>\n              <Text style={styles.filterTitle}>Series:</Text>\n              <View style={styles.filterButtons}>\n                {filterOptions.series.map(series => (\n                  <Pressable\n                    key={series}\n                    style={[\n                      styles.filterButton,\n                      filters.series.includes(series) && styles.filterButtonActive,\n                    ]}\n                    onPress={() => onSeriesFilter(series)}\n                  >\n                    <Text style={[\n                      styles.filterButtonText,\n                      filters.series.includes(series) && styles.filterButtonTextActive,\n                    ]}>{series}</Text>\n                  </Pressable>\n                ))}\n              </View>\n            </View>\n          </View>\n        </View>\n      </Animated.View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 12,\n  },\n  headerText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  content: {\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  scrollContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n  },\n  filterSection: {\n    padding: 8,\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n  },\n  filterRow: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  filterTitle: {\n    fontSize: 14,\n    color: '#666',\n    marginRight: 8,\n    minWidth: 50,\n    paddingTop: 6, // Align with filter buttons\n  },\n  filterButtons: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 6,\n  },\n  filterButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    backgroundColor: 'white',\n    borderWidth: 1,\n    borderColor: '#ddd',\n    marginBottom: 4,\n  },\n  filterButtonActive: {\n    backgroundColor: '#007AFF',\n    borderColor: '#007AFF',\n  },\n  filterButtonText: {\n    color: '#333',\n    fontSize: 13,\n  },\n  filterButtonTextActive: {\n    color: 'white',\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FilterPanel } from './FilterPanel';\nimport { FilterOptions } from '../types/filters';\n\ninterface FilterControlsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n    brandSeries: Record<string, string[]>;\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (filterType: keyof FilterOptions, values: string[]) => void;\n}\n\nexport function FilterControls({\n  filterOptions,\n  selectedBrands = [],\n  selectedSeries = [],\n  selectedTypes = [],\n  onFilterChange,\n}: FilterControlsProps) {\n  const handleBrandFilter = (brand: string) => {\n    const newBrands = selectedBrands.includes(brand)\n      ? selectedBrands.filter(b => b !== brand)\n      : [...selectedBrands, brand];\n    onFilterChange('brands', newBrands);\n  };\n\n  const handleSeriesFilter = (series: string) => {\n    const newSeries = selectedSeries.includes(series)\n      ? selectedSeries.filter(s => s !== series)\n      : [...selectedSeries, series];\n    onFilterChange('series', newSeries);\n  };\n\n  const handleTypeFilter = (type: 'front' | 'tail' | null) => {\n    onFilterChange('type', type ? [type] : []);\n  };\n\n  return (\n    <View style={styles.container}>\n      <FilterPanel\n        filters={{\n          brands: selectedBrands,\n          series: selectedSeries,\n          type: selectedTypes.length > 0 ? selectedTypes[0] as 'front' | 'tail' : null,\n        }}\n        filterOptions={filterOptions}\n        onBrandFilter={handleBrandFilter}\n        onSeriesFilter={handleSeriesFilter}\n        onTypeFilter={handleTypeFilter}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n}); ","import React, { useMemo, useEffect, useState } from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform, useWindowDimensions, ScrollView } from 'react-native';\nimport { FixedSizeList as List } from 'react-window';\nimport { BaseProduct } from '../types/scraper';\nimport { SortOption, SortField } from '../hooks/useSortedFoils';\nimport { colors } from '../constants/colors';\nimport { spacing } from '../constants/spacing';\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  sortOption: SortOption;\n  onSort: (field: SortField) => void;\n  isSelected: (foil: BaseProduct) => boolean;\n  onFoilSelect: (foil: BaseProduct) => void;\n}\n\ninterface SortIndicatorProps {\n  isActive: boolean;\n  direction?: 'asc' | 'desc';\n}\n\nconst SortIndicator: React.FC<SortIndicatorProps> = ({ isActive, direction }) => {\n  const columnWidths = useColumnWidths([]);  // Empty array since SortIndicator doesn't need dynamic widths\n  const styles = useStyles(columnWidths);\n  return (\n    <View style={styles.sortIndicatorContainer}>\n      <Text style={[\n        styles.sortArrow,\n        isActive && direction === 'asc' ? styles.sortArrowActive : styles.sortArrowInactive\n      ]}>▲</Text>\n      <Text style={[\n        styles.sortArrow,\n        isActive && direction === 'desc' ? styles.sortArrowActive : styles.sortArrowInactive\n      ]}>▼</Text>\n    </View>\n  );\n};\n\nconst useColumnWidths = (foils: BaseProduct[]) => {\n  return useMemo(() => {\n    const baseWidths = {\n      brand: 100,      // Base width for \"Brand\" + sort indicator\n      series: 120,     // Base width for \"Series\" + sort indicator\n      model: 160,      // Base width for longer model names\n      wingspan: 100,   // Width for \"Wingspan\" + numbers + unit\n      area: 100,       // Width for \"Area\" + numbers + unit\n      aspectRatio: 80, // Width for \"AR\" + numbers\n      cord: 90,        // Width for \"Cord\" + numbers + unit\n      type: 80,        // Width for \"Type\" + sort indicator\n      price: 90,       // Width for \"Price\" + numbers\n      link: 100,       // Width for \"Product Link\"\n    };\n\n    // Find maximum content lengths\n    foils.forEach(foil => {\n      const brandWidth = (foil.brand?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.brand = Math.max(baseWidths.brand, brandWidth);\n      \n      const seriesWidth = (foil.series?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.series = Math.max(baseWidths.series, seriesWidth);\n      \n      const modelWidth = (foil.model?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.model = Math.max(baseWidths.model, modelWidth);\n    });\n\n    return baseWidths;\n  }, [foils]);\n};\n\nconst useStyles = (columnWidths: ReturnType<typeof useColumnWidths>) => {\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      width: '100%',\n      height: '100%',\n    },\n    horizontalScrollView: {\n      flex: 1,\n    },\n    contentContainer: {\n      flexGrow: 1,\n    },\n    headerContainer: {\n      backgroundColor: colors.LIGHT_GRAY,\n      borderBottomWidth: 1,\n      borderBottomColor: colors.BORDER,\n      position: Platform.select({\n        web: 'sticky' as any,\n        default: 'relative',\n      }),\n      top: 0,\n      zIndex: 1,\n    },\n    headerRow: {\n      flexDirection: 'row',\n    },\n    row: {\n      flexDirection: 'row',\n      borderBottomWidth: 1,\n      borderBottomColor: colors.BORDER,\n    },\n    cell: {\n      padding: spacing.MEDIUM,\n      justifyContent: 'center',\n    },\n    textCell: {\n      alignItems: 'flex-start',\n    },\n    numericCell: {\n      alignItems: 'flex-end',\n    },\n    sortIndicatorContainer: {\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 16,\n      marginLeft: spacing.SMALL,\n    },\n    sortArrow: {\n      fontSize: 8,\n      lineHeight: 8,\n      height: 8,\n      textAlign: 'center',\n    },\n    sortArrowActive: {\n      color: '#007AFF', // Use your app's primary color\n    },\n    sortArrowInactive: {\n      color: '#C7C7CC', // Light gray color for inactive state\n    },\n    headerContent: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      width: '100%',\n      paddingRight: spacing.SMALL,\n    },\n    headerNumericContent: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      width: '100%',\n      gap: spacing.SMALL,\n    },\n    headerCell: {\n      backgroundColor: colors.LIGHT_GRAY,\n      padding: spacing.SMALL,\n      borderBottomWidth: 1,\n      borderBottomColor: colors.BORDER,\n    },\n    headerText: {\n      fontWeight: 'bold',\n      color: colors.TEXT_PRIMARY,\n      flex: 1,\n      fontFamily: Platform.select({\n        web: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n        ios: '-apple-system',\n        android: 'Roboto',\n        default: 'System',\n      }),\n    },\n    text: {\n      fontFamily: Platform.select({\n        web: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n        ios: '-apple-system',\n        android: 'Roboto',\n        default: 'System',\n      }),\n    },\n    numericText: {\n      textAlign: 'right',\n      width: '100%',\n      fontFamily: Platform.select({\n        web: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n        ios: '-apple-system',\n        android: 'Roboto',\n        default: 'System',\n      }),\n    },\n    selectedRow: {\n      backgroundColor: colors.SELECTED_ROW,\n    },\n    cellContent: {\n      width: '100%',\n    },\n    link: {\n      color: colors.LINK,\n      textDecorationLine: 'underline',\n    },\n    virtualizedWrapper: Platform.select({\n      web: {\n        flex: 1,\n        width: '100%',\n        height: '100%',\n        overflowY: 'scroll' as const,\n        overflowX: 'hidden' as const,\n      },\n      default: {\n        flex: 1,\n      },\n    }),\n    tableWrapper: {\n      flex: 1,\n      overflow: 'hidden',\n    },\n    brandCell: {\n      width: columnWidths.brand,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    seriesCell: {\n      width: columnWidths.series,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    modelCell: {\n      width: columnWidths.model,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    wingspanCell: {\n      width: columnWidths.wingspan,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    areaCell: {\n      width: columnWidths.area,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    arCell: {\n      width: columnWidths.aspectRatio,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    cordCell: {\n      width: columnWidths.cord,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    typeCell: {\n      width: columnWidths.type,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    priceCell: {\n      width: columnWidths.price,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    linkCell: {\n      width: columnWidths.link,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n  });\n};\n\nconst FoilsTable = ({ foils, onSort, onFoilSelect, isSelected, sortOption }: FoilsTableProps) => {\n  const columnWidths = useColumnWidths(foils);\n  const styles = useStyles(columnWidths);\n  const { height: windowHeight } = useWindowDimensions();\n  const [tableHeight, setTableHeight] = useState(500);\n  const [headerHeight, setHeaderHeight] = useState(50);\n\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      // Calculate available height (subtract header, footer, and other UI elements)\n      const calculateHeight = () => {\n        const footerHeight = 60; // Approximate footer height\n        const filterHeight = 60; // Approximate filter controls height\n        const padding = 40; // Some padding\n        const availableHeight = windowHeight - footerHeight - filterHeight - headerHeight - padding;\n        setTableHeight(Math.max(400, availableHeight)); // Minimum height of 400px\n      };\n\n      calculateHeight();\n      window.addEventListener('resize', calculateHeight);\n      return () => window.removeEventListener('resize', calculateHeight);\n    }\n  }, [windowHeight, headerHeight]);\n\n  const getSortIndicator = (field: SortField) => {\n    const isActive = sortOption.field === field;\n    return <SortIndicator isActive={isActive} direction={isActive ? sortOption.direction : undefined} />;\n  };\n\n  const renderHeaderContent = (text: string, field: SortField, isNumeric: boolean = false) => (\n    <View style={isNumeric ? styles.headerNumericContent : styles.headerContent}>\n      <Text style={[styles.headerText, isNumeric && styles.numericText]}>{text}</Text>\n      {getSortIndicator(field)}\n    </View>\n  );\n\n  const Row = ({ index, style }: { index: number; style: any }) => {\n    const foil = foils[index];\n    const rowKey = `row-${foil.brand}-${foil.model}`.toLowerCase().replace(/\\s+/g, '-');\n    const selected = isSelected(foil);\n    \n    return (\n      <Pressable\n        key={rowKey}\n        onPress={() => onFoilSelect(foil)}\n        style={[styles.row, selected && styles.selectedRow, style]}\n      >\n        <View style={[styles.cell, styles.textCell, styles.brandCell]}>\n          <Text style={styles.text}>{foil.brand}</Text>\n        </View>\n        <View style={[styles.cell, styles.textCell, styles.seriesCell]}>\n          <Text style={styles.text}>{foil.series}</Text>\n        </View>\n        <View style={[styles.cell, styles.textCell, styles.modelCell]}>\n          <Text style={styles.text}>{foil.model}</Text>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.wingspanCell]}>\n          <Text style={styles.numericText}>{foil.specs.wingspan || '-'}</Text>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.areaCell]}>\n          <Text style={styles.numericText}>{foil.specs.area || '-'}</Text>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.arCell]}>\n          <Text style={styles.numericText}>{foil.specs.aspectRatio?.toFixed(1) || '-'}</Text>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.cordCell]}>\n          <Text style={styles.numericText}>{foil.specs.cord || '-'}</Text>\n        </View>\n        <View style={[styles.cell, styles.textCell, styles.typeCell]}>\n          <Text style={styles.text}>{foil.type}</Text>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.priceCell]}>\n          <Text style={styles.numericText}>{foil.price ? `$${foil.price}` : '-'}</Text>\n        </View>\n        <View style={[styles.cell, styles.textCell, styles.linkCell]}>\n          <Text \n            style={[styles.text, styles.link]}\n            onPress={() => Platform.OS === 'web' ? window.open(foil.sourceUrl, '_blank') : null}\n          >\n            View\n          </Text>\n        </View>\n      </Pressable>\n    );\n  };\n\n  const getTableWidth = () => {\n    return Object.values(columnWidths).reduce((sum, width) => sum + width, 0);\n  };\n\n  const renderTable = () => {\n    if (Platform.OS === 'web') {\n      return (\n        <View style={styles.virtualizedWrapper}>\n          <List\n            height={tableHeight}\n            itemCount={foils.length}\n            itemSize={50}\n            width={getTableWidth()}\n          >\n            {Row}\n          </List>\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.tableWrapper}>\n        {foils.map((foil, index) => (\n          <Row key={`${foil.brand}-${foil.model}`} index={index} style={{}} />\n        ))}\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView horizontal style={styles.horizontalScrollView} contentContainerStyle={styles.contentContainer}>\n        <View style={{ width: getTableWidth() }}>\n          <View \n            style={styles.headerContainer}\n            onLayout={(event) => {\n              const { height } = event.nativeEvent.layout;\n              setHeaderHeight(height);\n            }}\n          >\n            <View style={styles.headerRow}>\n              <Pressable style={[styles.cell, styles.headerCell, styles.brandCell]} onPress={() => onSort('brand')}>\n                {renderHeaderContent('Brand', 'brand')}\n              </Pressable>\n              <Pressable style={[styles.cell, styles.headerCell, styles.seriesCell]} onPress={() => onSort('series')}>\n                {renderHeaderContent('Series', 'series')}\n              </Pressable>\n              <Pressable style={[styles.cell, styles.headerCell, styles.modelCell]} onPress={() => onSort('model')}>\n                {renderHeaderContent('Model', 'model')}\n              </Pressable>\n              <Pressable style={[styles.cell, styles.headerCell, styles.wingspanCell]} onPress={() => onSort('wingspan')}>\n                {renderHeaderContent('Wingspan', 'wingspan', true)}\n              </Pressable>\n              <Pressable style={[styles.cell, styles.headerCell, styles.areaCell]} onPress={() => onSort('area')}>\n                {renderHeaderContent('Area', 'area', true)}\n              </Pressable>\n              <Pressable style={[styles.cell, styles.headerCell, styles.arCell]} onPress={() => onSort('aspectRatio')}>\n                {renderHeaderContent('AR', 'aspectRatio', true)}\n              </Pressable>\n              <Pressable style={[styles.cell, styles.headerCell, styles.cordCell]} onPress={() => onSort('cord')}>\n                {renderHeaderContent('Cord', 'cord', true)}\n              </Pressable>\n              <Pressable style={[styles.cell, styles.headerCell, styles.typeCell]} onPress={() => onSort('type')}>\n                {renderHeaderContent('Type', 'type')}\n              </Pressable>\n              <Pressable style={[styles.cell, styles.headerCell, styles.priceCell]} onPress={() => onSort('price')}>\n                {renderHeaderContent('Price', 'price', true)}\n              </Pressable>\n              <View style={[styles.cell, styles.headerCell, styles.linkCell]}>\n                {renderHeaderContent('Product Link', 'link')}\n              </View>\n            </View>\n          </View>\n          {renderTable()}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default FoilsTable;","import React from 'react';\nimport { View, Text, StyleSheet, Pressable } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProp } from '../types/navigation';\n\nconst Footer = () => {\n  const navigation = useNavigation<RootStackNavigationProp>();\n\n  return (\n    <View style={styles.container}>\n      <Pressable onPress={() => navigation.navigate('Terms')}>\n        <Text style={styles.link}>Terms of Service</Text>\n      </Pressable>\n      <Pressable onPress={() => navigation.navigate('Privacy')}>\n        <Text style={styles.link}>Privacy Policy</Text>\n      </Pressable>\n      <Pressable onPress={() => navigation.navigate('Contact')}>\n        <Text style={styles.link}>Contact Us</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    gap: 16,\n    backgroundColor: '#f4f4f4',\n  },\n  link: {\n    color: '#333',\n    textDecorationLine: 'underline',\n  },\n});\n\nexport default Footer; ","import React from 'react';\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\n\nexport function LoadingIndicator() {\n  return (\n    <View style={styles.container}>\n      <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}); ","import { Helmet } from 'react-helmet-async';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  canonicalUrl?: string;\n  imageUrl?: string;\n}\n\nexport const SEOHead: React.FC<SEOHeadProps> = ({\n  title,\n  description,\n  canonicalUrl,\n  imageUrl\n}) => {\n  const siteTitle = 'FoilQuiver';\n  const fullTitle = `${title} | ${siteTitle}`;\n  \n  return (\n    <Helmet>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      {imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n      \n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      {imageUrl && <meta name=\"twitter:image\" content={imageUrl} />}\n    </Helmet>\n  );\n}; ","import React from 'react';\nimport { View, TextInput, Pressable, Text, StyleSheet } from 'react-native';\n\ninterface SearchBarProps {\n  value: string;\n  onChangeText: (text: string) => void;\n  onClear: () => void;\n  placeholder?: string;\n}\n\nexport function SearchBar({\n  value,\n  onChangeText,\n  onClear,\n  placeholder = 'Search foils...'\n}: SearchBarProps) {\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        value={value}\n        onChangeText={onChangeText}\n        placeholder={placeholder}\n        placeholderTextColor=\"#999\"\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n      />\n      {value.length > 0 && (\n        <Pressable\n          style={styles.clearButton}\n          onPress={onClear}\n        >\n          <Text style={styles.clearButtonText}>✕</Text>\n        </Pressable>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#f0f0f0',\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    marginHorizontal: 16,\n    marginVertical: 8,\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    fontSize: 16,\n    color: '#333',\n  },\n  clearButton: {\n    padding: 8,\n  },\n  clearButtonText: {\n    color: '#999',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n}); "],"names":["WebWrapper","Platform","select","web","_ref","children","_jsx","style","position","bottom","left","right","zIndex","pointerEvents","display","justifyContent","paddingRight","spacing","LARGE","default","_ref2","_Fragment","_ref3","selectedFoils","onCompareSelected","onExitCompare","onClearSelection","isComparisonView","length","content","View","styles","comparisonBar","Pressable","button","cancelButton","onPress","Text","buttonText","_jsxs","selectionText","buttonGroup","clearButton","buttonDisabled","disabled","OS","container","StyleSheet","create","paddingHorizontal","flexDirection","alignItems","gap","MEDIUM","backgroundColor","floatingButton","_objectSpread","alignSelf","paddingVertical","borderRadius","boxShadow","cursor","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","color","fontWeight","fontSize","marginRight","foils","_useSortedFoils","onClose","onCompare","useSortedFoils","sortOption","setSortOption","sortedFoils","FoilsTable","onSort","field","prev","direction","isSelected","onFoilSelect","flex","ErrorBoundary","_Component","_this","_classCallCheck","_len","arguments","args","Array","_key","concat","state","hasError","error","_inherits","_createClass","key","value","errorInfo","_this$state$error","this","text","errorText","message","props","Component","padding","marginBottom","ErrorMessage","onRetry","pressed","retryButton","retryButtonPressed","retryButtonText","margin","textAlign","FilterPanel","filters","filterOptions","onBrandFilter","onSeriesFilter","onTypeFilter","_useState","useState","_useState2","_slicedToArray","isExpanded","setIsExpanded","_useState3","Animated","Value","animation","_useState5","_useState6","contentHeight","setContentHeight","animatedHeight","interpolate","inputRange","outputRange","toValue","spring","useNativeDriver","start","header","headerText","Ionicons","name","size","scrollContainer","onLayout","event","nativeEvent","layout","filterSection","filterRow","filterTitle","filterButtons","filterButton","type","filterButtonActive","filterButtonText","filterButtonTextActive","brands","map","brand","includes","series","borderBottomWidth","borderBottomColor","overflow","borderTopWidth","borderTopColor","minWidth","paddingTop","flexWrap","borderWidth","borderColor","FilterControls","_ref$selectedBrands","selectedBrands","_ref$selectedSeries","selectedSeries","_ref$selectedTypes","selectedTypes","onFilterChange","newBrands","filter","b","_toConsumableArray","newSeries","s","SortIndicator","isActive","columnWidths","useColumnWidths","useStyles","sortIndicatorContainer","sortArrow","sortArrowActive","sortArrowInactive","useMemo","baseWidths","model","wingspan","area","aspectRatio","cord","price","link","forEach","foil","_foil$brand","_foil$series","_foil$model","brandWidth","Math","max","seriesWidth","modelWidth","horizontalScrollView","contentContainer","flexGrow","headerContainer","colors","LIGHT_GRAY","BORDER","top","headerRow","row","cell","textCell","numericCell","marginLeft","SMALL","lineHeight","headerContent","headerNumericContent","headerCell","TEXT_PRIMARY","fontFamily","ios","android","numericText","selectedRow","SELECTED_ROW","cellContent","LINK","textDecorationLine","virtualizedWrapper","overflowY","overflowX","tableWrapper","brandCell","flexShrink","seriesCell","modelCell","wingspanCell","areaCell","arCell","cordCell","typeCell","priceCell","linkCell","windowHeight","useWindowDimensions","tableHeight","setTableHeight","_useState4","headerHeight","setHeaderHeight","useEffect","calculateHeight","availableHeight","window","addEventListener","removeEventListener","getSortIndicator","undefined","renderHeaderContent","isNumeric","Row","_foil$specs$aspectRat","index","rowKey","toLowerCase","replace","selected","specs","toFixed","open","sourceUrl","getTableWidth","Object","values","reduce","sum","ScrollView","horizontal","contentContainerStyle","List","itemCount","itemSize","navigation","useNavigation","navigate","LoadingIndicator","ActivityIndicator","SEOHead","title","description","canonicalUrl","imageUrl","fullTitle","Helmet","rel","href","property","SearchBar","onChangeText","onClear","_ref$placeholder","placeholder","TextInput","input","placeholderTextColor","autoCapitalize","autoCorrect","clearButtonText","marginHorizontal","marginVertical"],"sourceRoot":""}