{"version":3,"file":"static/js/component.components.51d44492.chunk.js","mappings":"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","sources":["src/components/ComparisonControls.tsx","src/components/ComparisonView.tsx","src/components/ErrorMessage.tsx","src/components/FilterPanel.tsx","src/components/FilterControls.tsx","src/components/FoilsTable.tsx","src/components/Footer.tsx","src/components/SEOHead.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../constants/spacing';\n\ninterface ComparisonControlsProps {\n  selectedFoils: BaseProduct[];\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  onClearSelection: () => void;\n  isComparisonView?: boolean;\n}\n\nconst WebWrapper = Platform.select({\n  web: ({ children }: { children: React.ReactNode }) => (\n    <div style={{\n      position: 'fixed',\n      bottom: 50,\n      left: 0,\n      right: 0,\n      zIndex: 1000,\n      pointerEvents: 'none',\n    }}>\n      <div style={{ pointerEvents: 'auto', display: 'flex', justifyContent: 'flex-end', paddingRight: spacing.LARGE }}>\n        {children}\n      </div>\n    </div>\n  ),\n  default: ({ children }: { children: React.ReactNode }) => <>{children}</>,\n});\n\nconst ComparisonControls = ({ selectedFoils, onCompareSelected, onExitCompare, onClearSelection, isComparisonView }: ComparisonControlsProps) => {\n  // Only show controls if there are selected foils or we're in comparison view\n  if (selectedFoils.length === 0 && !isComparisonView) {\n    return null;\n  }\n\n  const content = !isComparisonView ? (\n    <View style={styles.comparisonBar}>\n      <Text style={styles.selectionText}>\n        Selected: {selectedFoils.length}\n      </Text>\n      <View style={styles.buttonGroup}>\n        <Pressable\n          style={[styles.button, styles.clearButton]}\n          onPress={onClearSelection}\n        >\n          <Text style={styles.buttonText}>Clear</Text>\n        </Pressable>\n        <Pressable\n          style={[styles.button, selectedFoils.length < 2 && styles.buttonDisabled]}\n          onPress={onCompareSelected}\n          disabled={selectedFoils.length < 2}\n        >\n          <Text style={styles.buttonText}>Compare</Text>\n        </Pressable>\n      </View>\n    </View>\n  ) : (\n    <View style={styles.comparisonBar}>\n      <Pressable\n        style={[styles.button, styles.cancelButton]}\n        onPress={onExitCompare}\n      >\n        <Text style={styles.buttonText}>Back</Text>\n      </Pressable>\n    </View>\n  );\n\n  return Platform.OS === 'web' ? (\n    <WebWrapper>{content}</WebWrapper>\n  ) : (\n    <View style={styles.container}>\n      {content}\n    </View>\n  );\n};\n\nexport default ComparisonControls;\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    right: 0,\n    paddingHorizontal: spacing.LARGE,\n    pointerEvents: 'box-none',\n  },\n  comparisonBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  floatingButton: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonDisabled: {\n    backgroundColor: '#ccc',\n  },\n  clearButton: {\n    backgroundColor: '#6c757d', // A neutral gray color\n  },\n  cancelButton: {\n    backgroundColor: '#FF3B30',\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '600',\n    fontSize: 14,\n  },\n  selectionText: {\n    fontSize: 14,\n    color: '#666',\n    marginRight: spacing.MEDIUM,\n  },\n}); ","import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport FoilsTable from './FoilsTable';\nimport { BaseProduct } from '../types/scraper';\nimport { SortOption, SortField } from '../hooks/useSortedFoils';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\n\ninterface ComparisonViewProps {\n  foils: BaseProduct[];\n  onClose?: () => void;\n  onCompare?: () => void;\n}\n\nconst ComparisonView = ({ foils, onClose, onCompare }: ComparisonViewProps) => {\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(foils);\n  \n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleSelect = () => {};\n  const isSelected = () => false;\n\n  return (\n    <View style={styles.container}>\n      <FoilsTable\n        foils={sortedFoils}\n        sortOption={sortOption}\n        onSort={handleSort}\n        isSelected={isSelected}\n        onFoilSelect={handleSelect}\n      />\n    </View>\n  );\n};\n\nexport default ComparisonView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  }\n});","import React from 'react';\nimport { View, Text, Pressable, StyleSheet } from 'react-native';\n\ninterface ErrorMessageProps {\n  message: string;\n  onRetry?: () => void;\n}\n\nexport function ErrorMessage({ message, onRetry }: ErrorMessageProps) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.message}>{message}</Text>\n      {onRetry && (\n        <Pressable\n          style={({ pressed }) => [\n            styles.retryButton,\n            pressed && styles.retryButtonPressed\n          ]}\n          onPress={onRetry}\n        >\n          <Text style={styles.retryButtonText}>Retry</Text>\n        </Pressable>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: '#ffebee',\n    borderRadius: 8,\n    margin: 16,\n  },\n  message: {\n    color: '#c62828',\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 12,\n  },\n  retryButton: {\n    backgroundColor: '#c62828',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 6,\n  },\n  retryButtonPressed: {\n    backgroundColor: '#b71c1c',\n  },\n  retryButtonText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n}); ","import React, { useState, useRef } from 'react';\nimport { View, Text, Pressable, StyleSheet, Animated, ScrollView, LayoutChangeEvent } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\ninterface FilterPanelProps {\n  filters: {\n    brands: string[];\n    series: string[];\n    type: 'front' | 'tail' | null;\n  };\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    brandSeries: Record<string, string[]>;\n  };\n  onBrandFilter: (brand: string) => void;\n  onSeriesFilter: (series: string) => void;\n  onTypeFilter: (type: 'front' | 'tail' | null) => void;\n}\n\nexport function FilterPanel({\n  filters,\n  filterOptions,\n  onBrandFilter,\n  onSeriesFilter,\n  onTypeFilter,\n}: FilterPanelProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [animation] = useState(new Animated.Value(0));\n  const [contentHeight, setContentHeight] = useState(0);\n\n  const toggleExpanded = () => {\n    const toValue = isExpanded ? 0 : 1;\n    Animated.spring(animation, {\n      toValue,\n      useNativeDriver: false,\n    }).start();\n    setIsExpanded(!isExpanded);\n  };\n\n  const handleLayout = (event: LayoutChangeEvent) => {\n    const { height } = event.nativeEvent.layout;\n    setContentHeight(height);\n  };\n\n  const animatedHeight = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, contentHeight],\n  });\n\n  return (\n    <View style={styles.container}>\n      <Pressable onPress={toggleExpanded} style={styles.header}>\n        <Text style={styles.headerText}>Filters</Text>\n        <Ionicons \n          name={isExpanded ? 'chevron-up' : 'chevron-down'} \n          size={24} \n          color=\"#666\"\n        />\n      </Pressable>\n\n      <Animated.View style={[styles.content, { height: animatedHeight }]}>\n        <View style={styles.scrollContainer} onLayout={handleLayout}>\n          <View style={styles.filterSection}>\n            <View style={styles.filterRow}>\n              <Text style={styles.filterTitle}>Type:</Text>\n              <View style={styles.filterButtons}>\n                <Pressable\n                  style={[\n                    styles.filterButton,\n                    filters.type === 'front' && styles.filterButtonActive,\n                  ]}\n                  onPress={() => onTypeFilter(filters.type === 'front' ? null : 'front')}\n                >\n                  <Text style={[\n                    styles.filterButtonText,\n                    filters.type === 'front' && styles.filterButtonTextActive,\n                  ]}>Front</Text>\n                </Pressable>\n                <Pressable\n                  style={[\n                    styles.filterButton,\n                    filters.type === 'tail' && styles.filterButtonActive,\n                  ]}\n                  onPress={() => onTypeFilter(filters.type === 'tail' ? null : 'tail')}\n                >\n                  <Text style={[\n                    styles.filterButtonText,\n                    filters.type === 'tail' && styles.filterButtonTextActive,\n                  ]}>Tail</Text>\n                </Pressable>\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.filterSection}>\n            <View style={styles.filterRow}>\n              <Text style={styles.filterTitle}>Brand:</Text>\n              <View style={styles.filterButtons}>\n                {filterOptions.brands.map(brand => (\n                  <Pressable\n                    key={brand}\n                    style={[\n                      styles.filterButton,\n                      filters.brands.includes(brand) && styles.filterButtonActive,\n                    ]}\n                    onPress={() => onBrandFilter(brand)}\n                  >\n                    <Text style={[\n                      styles.filterButtonText,\n                      filters.brands.includes(brand) && styles.filterButtonTextActive,\n                    ]}>{brand}</Text>\n                  </Pressable>\n                ))}\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.filterSection}>\n            <View style={styles.filterRow}>\n              <Text style={styles.filterTitle}>Series:</Text>\n              <View style={styles.filterButtons}>\n                {filterOptions.series.map(series => (\n                  <Pressable\n                    key={series}\n                    style={[\n                      styles.filterButton,\n                      filters.series.includes(series) && styles.filterButtonActive,\n                    ]}\n                    onPress={() => onSeriesFilter(series)}\n                  >\n                    <Text style={[\n                      styles.filterButtonText,\n                      filters.series.includes(series) && styles.filterButtonTextActive,\n                    ]}>{series}</Text>\n                  </Pressable>\n                ))}\n              </View>\n            </View>\n          </View>\n        </View>\n      </Animated.View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 12,\n  },\n  headerText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  content: {\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  scrollContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n  },\n  filterSection: {\n    padding: 8,\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n  },\n  filterRow: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  filterTitle: {\n    fontSize: 14,\n    color: '#666',\n    marginRight: 8,\n    minWidth: 50,\n    paddingTop: 6, // Align with filter buttons\n  },\n  filterButtons: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 6,\n  },\n  filterButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    backgroundColor: 'white',\n    borderWidth: 1,\n    borderColor: '#ddd',\n    marginBottom: 4,\n  },\n  filterButtonActive: {\n    backgroundColor: '#007AFF',\n    borderColor: '#007AFF',\n  },\n  filterButtonText: {\n    color: '#333',\n    fontSize: 13,\n  },\n  filterButtonTextActive: {\n    color: 'white',\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FilterPanel } from './FilterPanel';\nimport { FilterOptions } from '../types/filters';\n\ninterface FilterControlsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n    brandSeries: Record<string, string[]>;\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (filterType: keyof FilterOptions, values: string[]) => void;\n}\n\nexport function FilterControls({\n  filterOptions,\n  selectedBrands = [],\n  selectedSeries = [],\n  selectedTypes = [],\n  onFilterChange,\n}: FilterControlsProps) {\n  const handleBrandFilter = (brand: string) => {\n    const newBrands = selectedBrands.includes(brand)\n      ? selectedBrands.filter(b => b !== brand)\n      : [...selectedBrands, brand];\n    onFilterChange('brands', newBrands);\n  };\n\n  const handleSeriesFilter = (series: string) => {\n    const newSeries = selectedSeries.includes(series)\n      ? selectedSeries.filter(s => s !== series)\n      : [...selectedSeries, series];\n    onFilterChange('series', newSeries);\n  };\n\n  const handleTypeFilter = (type: 'front' | 'tail' | null) => {\n    onFilterChange('type', type ? [type] : []);\n  };\n\n  return (\n    <View style={styles.container}>\n      <FilterPanel\n        filters={{\n          brands: selectedBrands,\n          series: selectedSeries,\n          type: selectedTypes.length > 0 ? selectedTypes[0] as 'front' | 'tail' : null,\n        }}\n        filterOptions={filterOptions}\n        onBrandFilter={handleBrandFilter}\n        onSeriesFilter={handleSeriesFilter}\n        onTypeFilter={handleTypeFilter}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n}); ","import React, { useMemo, useEffect, useState, memo } from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform, useWindowDimensions, ScrollView } from 'react-native';\nimport { FixedSizeList as List } from 'react-window';\nimport { BaseProduct } from '../types/scraper';\nimport { SortOption, SortField } from '../hooks/useSortedFoils';\nimport { colors } from '../constants/colors';\nimport { spacing } from '../constants/spacing';\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  sortOption: SortOption;\n  onSort: (field: SortField) => void;\n  isSelected: (foil: BaseProduct) => boolean;\n  onFoilSelect: (foil: BaseProduct) => void;\n}\n\ninterface SortIndicatorProps {\n  isActive: boolean;\n  direction?: 'asc' | 'desc';\n}\n\nconst SortIndicator: React.FC<SortIndicatorProps> = ({ isActive, direction }) => {\n  const columnWidths = useColumnWidths([]);  // Empty array since SortIndicator doesn't need dynamic widths\n  const styles = useStyles(columnWidths);\n  return (\n    <View style={styles.sortIndicatorContainer}>\n      <Text style={[\n        styles.sortArrow,\n        isActive && direction === 'asc' ? styles.sortArrowActive : styles.sortArrowInactive\n      ]}>▲</Text>\n      <Text style={[\n        styles.sortArrow,\n        isActive && direction === 'desc' ? styles.sortArrowActive : styles.sortArrowInactive\n      ]}>▼</Text>\n    </View>\n  );\n};\n\nconst useColumnWidths = (foils: BaseProduct[]) => {\n  return useMemo(() => {\n    const baseWidths = {\n      brand: 100,      // Base width for \"Brand\" + sort indicator\n      series: 120,     // Base width for \"Series\" + sort indicator\n      model: 160,      // Base width for longer model names\n      wingspan: 100,   // Width for \"Wingspan\" + numbers + unit\n      area: 100,       // Width for \"Area\" + numbers + unit\n      aspectRatio: 80, // Width for \"AR\" + numbers\n      cord: 90,        // Width for \"Cord\" + numbers + unit\n      type: 80,        // Width for \"Type\" + sort indicator\n      price: 90,       // Width for \"Price\" + numbers\n      link: 100,       // Width for \"Product Link\"\n    };\n\n    // Find maximum content lengths\n    foils.forEach(foil => {\n      const brandWidth = (foil.brand?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.brand = Math.max(baseWidths.brand, brandWidth);\n      \n      const seriesWidth = (foil.series?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.series = Math.max(baseWidths.series, seriesWidth);\n      \n      const modelWidth = (foil.model?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.model = Math.max(baseWidths.model, modelWidth);\n    });\n\n    return baseWidths;\n  }, [foils]);\n};\n\nconst useStyles = (columnWidths: ReturnType<typeof useColumnWidths>) => {\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      width: '100%',\n      height: '100%',\n    },\n    horizontalScrollView: {\n      flex: 1,\n    },\n    contentContainer: {\n      flexGrow: 1,\n    },\n    headerContainer: {\n      backgroundColor: colors.LIGHT_GRAY,\n      borderBottomWidth: 1,\n      borderBottomColor: colors.BORDER,\n      position: Platform.select({\n        web: 'sticky' as any,\n        default: 'relative',\n      }),\n      top: 0,\n      zIndex: 1,\n    },\n    headerRow: {\n      flexDirection: 'row',\n    },\n    row: {\n      flexDirection: 'row',\n      borderBottomWidth: 1,\n      borderBottomColor: colors.BORDER,\n    },\n    cell: {\n      padding: spacing.MEDIUM,\n      justifyContent: 'center',\n    },\n    textCell: {\n      alignItems: 'flex-start',\n    },\n    numericCell: {\n      alignItems: 'flex-end',\n    },\n    sortIndicatorContainer: {\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 16,\n      marginLeft: spacing.SMALL,\n    },\n    sortArrow: {\n      fontSize: 8,\n      lineHeight: 8,\n      height: 8,\n      textAlign: 'center',\n    },\n    sortArrowActive: {\n      color: '#007AFF', // Use your app's primary color\n    },\n    sortArrowInactive: {\n      color: '#C7C7CC', // Light gray color for inactive state\n    },\n    headerContent: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      width: '100%',\n      paddingRight: spacing.SMALL,\n    },\n    headerNumericContent: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      width: '100%',\n      gap: spacing.SMALL,\n    },\n    headerCell: {\n      backgroundColor: colors.LIGHT_GRAY,\n      padding: spacing.SMALL,\n      borderBottomWidth: 1,\n      borderBottomColor: colors.BORDER,\n    },\n    headerText: {\n      fontWeight: 'bold',\n      color: colors.TEXT_PRIMARY,\n      flex: 1,\n      fontFamily: Platform.select({\n        web: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n        ios: '-apple-system',\n        android: 'Roboto',\n        default: 'System',\n      }),\n    },\n    text: {\n      fontFamily: Platform.select({\n        web: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n        ios: '-apple-system',\n        android: 'Roboto',\n        default: 'System',\n      }),\n    },\n    numericText: {\n      textAlign: 'right',\n      width: '100%',\n      fontFamily: Platform.select({\n        web: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n        ios: '-apple-system',\n        android: 'Roboto',\n        default: 'System',\n      }),\n    },\n    selectedRow: {\n      backgroundColor: colors.SELECTED_ROW,\n    },\n    cellContent: {\n      width: '100%',\n    },\n    link: {\n      color: colors.LINK,\n      textDecorationLine: 'underline',\n    },\n    virtualizedWrapper: Platform.select({\n      web: {\n        flex: 1,\n        width: '100%',\n        height: '100%',\n        overflowY: 'scroll' as const,\n        overflowX: 'hidden' as const,\n      },\n      default: {\n        flex: 1,\n      },\n    }),\n    tableWrapper: {\n      flex: 1,\n      overflow: 'hidden',\n    },\n    brandCell: {\n      width: columnWidths.brand,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    seriesCell: {\n      width: columnWidths.series,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    modelCell: {\n      width: columnWidths.model,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    wingspanCell: {\n      width: columnWidths.wingspan,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    areaCell: {\n      width: columnWidths.area,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    arCell: {\n      width: columnWidths.aspectRatio,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    cordCell: {\n      width: columnWidths.cord,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    typeCell: {\n      width: columnWidths.type,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    priceCell: {\n      width: columnWidths.price,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    linkCell: {\n      width: columnWidths.link,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n  });\n};\n\n// Memoize row component for better performance\nconst Row = memo(({ index, style, data }: { index: number; style: any; data: any }) => {\n  const { foils, styles, isSelected, onFoilSelect } = data;\n  const foil = foils[index];\n  const rowKey = `row-${foil.brand}-${foil.model}`.toLowerCase().replace(/\\s+/g, '-');\n  const selected = isSelected(foil);\n  \n  return (\n    <Pressable\n      key={rowKey}\n      onPress={() => onFoilSelect(foil)}\n      style={[styles.row, selected && styles.selectedRow, style]}\n    >\n      <View style={[styles.cell, styles.textCell, styles.brandCell]}>\n        <Text style={styles.text}>{foil.brand}</Text>\n      </View>\n      <View style={[styles.cell, styles.textCell, styles.seriesCell]}>\n        <Text style={styles.text}>{foil.series}</Text>\n      </View>\n      <View style={[styles.cell, styles.textCell, styles.modelCell]}>\n        <Text style={styles.text}>{foil.model}</Text>\n      </View>\n      <View style={[styles.cell, styles.numericCell, styles.wingspanCell]}>\n        <Text style={styles.numericText}>{foil.specs.wingspan || '-'}</Text>\n      </View>\n      <View style={[styles.cell, styles.numericCell, styles.areaCell]}>\n        <Text style={styles.numericText}>{foil.specs.area || '-'}</Text>\n      </View>\n      <View style={[styles.cell, styles.numericCell, styles.arCell]}>\n        <Text style={styles.numericText}>{foil.specs.aspectRatio?.toFixed(1) || '-'}</Text>\n      </View>\n      <View style={[styles.cell, styles.numericCell, styles.cordCell]}>\n        <Text style={styles.numericText}>{foil.specs.cord || '-'}</Text>\n      </View>\n      <View style={[styles.cell, styles.textCell, styles.typeCell]}>\n        <Text style={styles.text}>{foil.type}</Text>\n      </View>\n      <View style={[styles.cell, styles.numericCell, styles.priceCell]}>\n        <Text style={styles.numericText}>{foil.price ? `$${foil.price}` : '-'}</Text>\n      </View>\n      <View style={[styles.cell, styles.textCell, styles.linkCell]}>\n        <Text \n          style={[styles.text, styles.link]}\n          onPress={() => Platform.OS === 'web' ? window.open(foil.sourceUrl, '_blank') : null}\n        >\n          View\n        </Text>\n      </View>\n    </Pressable>\n  );\n});\n\nRow.displayName = 'Row';\n\n// Memoize header component\nconst TableHeader = memo(({ onSort, sortOption, styles, columnWidths }: any) => {\n  const renderHeaderContent = (text: string, field: SortField, isNumeric: boolean = false) => {\n    const isActive = sortOption.field === field;\n    return (\n      <View style={isNumeric ? styles.headerNumericContent : styles.headerContent}>\n        <Text style={[styles.headerText, isNumeric && styles.numericText]}>{text}</Text>\n        <View style={styles.sortIndicatorContainer}>\n          <Text style={[\n            styles.sortArrow,\n            isActive && sortOption.direction === 'asc' ? styles.sortArrowActive : styles.sortArrowInactive\n          ]}>▲</Text>\n          <Text style={[\n            styles.sortArrow,\n            isActive && sortOption.direction === 'desc' ? styles.sortArrowActive : styles.sortArrowInactive\n          ]}>▼</Text>\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.headerRow}>\n      <Pressable style={[styles.cell, styles.headerCell, styles.brandCell]} onPress={() => onSort('brand')}>\n        {renderHeaderContent('Brand', 'brand')}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.seriesCell]} onPress={() => onSort('series')}>\n        {renderHeaderContent('Series', 'series')}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.modelCell]} onPress={() => onSort('model')}>\n        {renderHeaderContent('Model', 'model')}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.wingspanCell]} onPress={() => onSort('wingspan')}>\n        {renderHeaderContent('Wingspan', 'wingspan', true)}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.areaCell]} onPress={() => onSort('area')}>\n        {renderHeaderContent('Area', 'area', true)}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.arCell]} onPress={() => onSort('aspectRatio')}>\n        {renderHeaderContent('AR', 'aspectRatio', true)}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.cordCell]} onPress={() => onSort('cord')}>\n        {renderHeaderContent('Cord', 'cord', true)}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.typeCell]} onPress={() => onSort('type')}>\n        {renderHeaderContent('Type', 'type')}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.priceCell]} onPress={() => onSort('price')}>\n        {renderHeaderContent('Price', 'price', true)}\n      </Pressable>\n      <View style={[styles.cell, styles.headerCell, styles.linkCell]}>\n        {renderHeaderContent('Product Link', 'link')}\n      </View>\n    </View>\n  );\n});\n\nTableHeader.displayName = 'TableHeader';\n\nconst FoilsTable = ({ foils, onSort, onFoilSelect, isSelected, sortOption }: FoilsTableProps) => {\n  const columnWidths = useColumnWidths(foils);\n  const styles = useStyles(columnWidths);\n  const { height: windowHeight } = useWindowDimensions();\n  const [tableHeight, setTableHeight] = useState(500);\n  const [headerHeight, setHeaderHeight] = useState(50);\n\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      const calculateHeight = () => {\n        const footerHeight = 60;\n        const filterHeight = 60;\n        const padding = 40;\n        const availableHeight = windowHeight - footerHeight - filterHeight - headerHeight - padding;\n        setTableHeight(Math.max(400, availableHeight));\n      };\n\n      calculateHeight();\n      window.addEventListener('resize', calculateHeight);\n      return () => window.removeEventListener('resize', calculateHeight);\n    }\n  }, [windowHeight, headerHeight]);\n\n  const getTableWidth = () => {\n    return Object.values(columnWidths).reduce((sum, width) => sum + width, 0);\n  };\n\n  const itemData = useMemo(() => ({\n    foils,\n    styles,\n    isSelected,\n    onFoilSelect\n  }), [foils, styles, isSelected, onFoilSelect]);\n\n  return (\n    <View style={styles.container}>\n      <ScrollView horizontal style={styles.horizontalScrollView} contentContainerStyle={styles.contentContainer}>\n        <View style={{ width: getTableWidth() }}>\n          <View \n            style={styles.headerContainer}\n            onLayout={(event) => {\n              const { height } = event.nativeEvent.layout;\n              setHeaderHeight(height);\n            }}\n          >\n            <TableHeader\n              onSort={onSort}\n              sortOption={sortOption}\n              styles={styles}\n              columnWidths={columnWidths}\n            />\n          </View>\n          {Platform.OS === 'web' ? (\n            <View style={styles.virtualizedWrapper}>\n              <List\n                height={tableHeight}\n                itemCount={foils.length}\n                itemSize={50}\n                width={getTableWidth()}\n                itemData={itemData}\n              >\n                {Row}\n              </List>\n            </View>\n          ) : (\n            <View style={styles.tableWrapper}>\n              {foils.map((foil, index) => (\n                <Row\n                  key={`${foil.brand}-${foil.model}`}\n                  index={index}\n                  style={{}}\n                  data={itemData}\n                />\n              ))}\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default memo(FoilsTable);","import React from 'react';\nimport { View, Text, StyleSheet, Pressable } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProp } from '../types/navigation';\n\nconst Footer = () => {\n  const navigation = useNavigation<RootStackNavigationProp>();\n\n  return (\n    <View style={styles.container}>\n      <Pressable onPress={() => navigation.navigate('Terms')}>\n        <Text style={styles.link}>Terms of Service</Text>\n      </Pressable>\n      <Pressable onPress={() => navigation.navigate('Privacy')}>\n        <Text style={styles.link}>Privacy Policy</Text>\n      </Pressable>\n      <Pressable onPress={() => navigation.navigate('Contact')}>\n        <Text style={styles.link}>Contact Us</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    gap: 16,\n    backgroundColor: '#f4f4f4',\n  },\n  link: {\n    color: '#333',\n    textDecorationLine: 'underline',\n  },\n});\n\nexport default Footer; ","import { Helmet } from 'react-helmet-async';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  canonicalUrl?: string;\n  imageUrl?: string;\n}\n\nexport const SEOHead: React.FC<SEOHeadProps> = ({\n  title,\n  description,\n  canonicalUrl,\n  imageUrl\n}) => {\n  const siteTitle = 'FoilQuiver';\n  const fullTitle = `${title} | ${siteTitle}`;\n  \n  return (\n    <Helmet>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      {imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n      \n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      {imageUrl && <meta name=\"twitter:image\" content={imageUrl} />}\n    </Helmet>\n  );\n}; "],"names":["WebWrapper","Platform","select","web","_ref","children","_jsx","style","position","bottom","left","right","zIndex","pointerEvents","display","justifyContent","paddingRight","spacing","LARGE","default","_ref2","_Fragment","_ref3","selectedFoils","onCompareSelected","onExitCompare","onClearSelection","isComparisonView","length","content","View","styles","comparisonBar","Pressable","button","cancelButton","onPress","Text","buttonText","_jsxs","selectionText","buttonGroup","clearButton","buttonDisabled","disabled","OS","container","StyleSheet","create","paddingHorizontal","flexDirection","alignItems","gap","MEDIUM","backgroundColor","floatingButton","_objectSpread","alignSelf","paddingVertical","borderRadius","boxShadow","cursor","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","color","fontWeight","fontSize","marginRight","foils","_useSortedFoils","onClose","onCompare","useSortedFoils","sortOption","setSortOption","sortedFoils","FoilsTable","onSort","field","prev","direction","isSelected","onFoilSelect","flex","ErrorMessage","message","onRetry","pressed","retryButton","retryButtonPressed","retryButtonText","padding","margin","textAlign","marginBottom","FilterPanel","filters","filterOptions","onBrandFilter","onSeriesFilter","onTypeFilter","_useState","useState","_useState2","_slicedToArray","isExpanded","setIsExpanded","_useState3","Animated","Value","animation","_useState5","_useState6","contentHeight","setContentHeight","animatedHeight","interpolate","inputRange","outputRange","toValue","spring","useNativeDriver","start","header","headerText","Ionicons","name","size","scrollContainer","onLayout","event","nativeEvent","layout","filterSection","filterRow","filterTitle","filterButtons","filterButton","type","filterButtonActive","filterButtonText","filterButtonTextActive","brands","map","brand","includes","series","borderBottomWidth","borderBottomColor","overflow","borderTopWidth","borderTopColor","minWidth","paddingTop","flexWrap","borderWidth","borderColor","FilterControls","_ref$selectedBrands","selectedBrands","_ref$selectedSeries","selectedSeries","_ref$selectedTypes","selectedTypes","onFilterChange","newBrands","filter","b","concat","_toConsumableArray","newSeries","s","Row","memo","_foil$specs$aspectRat","index","data","foil","rowKey","model","toLowerCase","replace","selected","row","selectedRow","cell","textCell","brandCell","text","seriesCell","modelCell","numericCell","wingspanCell","numericText","specs","wingspan","areaCell","area","arCell","aspectRatio","toFixed","cordCell","cord","typeCell","priceCell","price","linkCell","link","window","open","sourceUrl","displayName","TableHeader","renderHeaderContent","columnWidths","isNumeric","arguments","undefined","isActive","headerNumericContent","headerContent","sortIndicatorContainer","sortArrow","sortArrowActive","sortArrowInactive","headerRow","headerCell","_ref4","useMemo","baseWidths","forEach","_foil$brand","_foil$series","_foil$model","brandWidth","Math","max","seriesWidth","modelWidth","useColumnWidths","horizontalScrollView","contentContainer","flexGrow","headerContainer","colors","LIGHT_GRAY","BORDER","top","marginLeft","SMALL","lineHeight","TEXT_PRIMARY","fontFamily","ios","android","SELECTED_ROW","cellContent","LINK","textDecorationLine","virtualizedWrapper","overflowY","overflowX","tableWrapper","flexShrink","useStyles","windowHeight","useWindowDimensions","tableHeight","setTableHeight","_useState4","headerHeight","setHeaderHeight","useEffect","calculateHeight","availableHeight","addEventListener","removeEventListener","getTableWidth","Object","values","reduce","sum","itemData","ScrollView","horizontal","contentContainerStyle","List","itemCount","itemSize","navigation","useNavigation","navigate","SEOHead","title","description","canonicalUrl","imageUrl","fullTitle","Helmet","rel","href","property"],"sourceRoot":""}