{"version":3,"file":"static/js/main.b7924d7e.js","mappings":"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","sources":["src/components/ErrorBoundary.tsx","src/components/SearchBar.tsx","src/navigation/AppNavigator.tsx","index.ts","App.tsx","src/components/LoadingIndicator.tsx","src/theme/colors.ts"],"sourcesContent":["import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n    error: null\n  };\n\n  public static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Uncaught error:', error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return (\n        <View style={styles.container}>\n          <Text style={styles.text}>Something went wrong.</Text>\n          <Text style={styles.errorText}>{this.state.error?.message}</Text>\n        </View>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  text: {\n    fontSize: 16,\n    marginBottom: 10,\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 14,\n  },\n}); ","import React from 'react';\nimport { View, TextInput, Pressable, Text, StyleSheet, Platform } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { colors } from '../theme/colors';\n\ninterface SearchBarProps {\n  value: string;\n  onChangeText: (text: string) => void;\n  onClear: () => void;\n  placeholder?: string;\n}\n\nexport function SearchBar({\n  value,\n  onChangeText,\n  onClear,\n  placeholder = 'üîç Search foils...'\n}: SearchBarProps) {\n  return (\n    <View style={styles.wrapper}>\n      <View style={styles.container}>\n        <TextInput\n          style={styles.input}\n          value={value}\n          onChangeText={onChangeText}\n          placeholder={placeholder}\n          placeholderTextColor={colors.text.muted}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n        />\n        {value.length > 0 && (\n          <Pressable\n            style={styles.clearButton}\n            onPress={onClear}\n          >\n            <Text style={styles.clearButtonText}>‚úï</Text>\n          </Pressable>\n        )}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    width: '100%',\n    alignItems: 'center',\n    paddingVertical: 16,\n    backgroundColor: colors.background.primary,\n  },\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: colors.background.secondary,\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    borderWidth: 1,\n    borderColor: colors.border,\n    width: Platform.OS === 'web' ? '40%' : '90%',\n    maxWidth: 500,\n    minWidth: 280,\n  },\n  input: {\n    flex: 1,\n    height: 48,\n    fontSize: 16,\n    color: colors.text.primary,\n  },\n  clearButton: {\n    padding: 8,\n  },\n  clearButtonText: {\n    color: colors.text.muted,\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n}); ","import React, { lazy, Suspense } from 'react';\nimport { View, Text, StyleSheet, Pressable } from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackParamList, RootStackNavigationProp } from '../types/navigation';\nimport { SearchBar } from '../components/SearchBar';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { colors } from '../theme/colors';\n\n// Lazy load screens\nconst BrowseScreen = lazy(() => import('../screens/BrowseScreen'));\nconst PrivacyPolicy = lazy(() => import('../screens/legal/PrivacyPolicy'));\nconst TermsOfService = lazy(() => import('../screens/legal/TermsOfService'));\nconst Contact = lazy(() => import('../screens/legal/Contact'));\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\ninterface AppNavigatorProps {\n  searchQuery: string;\n  onSearch: (text: string) => void;\n}\n\nexport const AppNavigator = ({ searchQuery, onSearch }: AppNavigatorProps) => {\n  const navigation = useNavigation<RootStackNavigationProp>();\n\n  const handleLogoPress = () => {\n    navigation.reset({\n      index: 0,\n      routes: [{ name: 'Browse', params: { searchQuery } }],\n    });\n  };\n\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"Browse\"\n        options={{\n          headerTitle: '',\n          headerLeft: () => (\n            <View style={styles.headerContainer}>\n              <Pressable \n                onPress={handleLogoPress}\n                style={({ pressed }) => [\n                  styles.logoContainer,\n                  pressed && styles.logoPressed\n                ]}\n              >\n                <Text style={styles.headerTitle}>FoilQuiver</Text>\n              </Pressable>\n              <View style={styles.searchBarContainer}>\n                <SearchBar \n                  value={searchQuery}\n                  onChangeText={onSearch}\n                  onClear={() => onSearch('')}\n                />\n              </View>\n            </View>\n          ),\n          headerStyle: {\n            backgroundColor: colors.background.primary,\n          },\n          headerShadowVisible: false,\n        }}\n      >\n        {(props) => (\n          <Suspense fallback={<LoadingIndicator />}>\n            <BrowseScreen {...props} />\n          </Suspense>\n        )}\n      </Stack.Screen>\n      <Stack.Screen \n        name=\"Terms\"\n        options={{\n          title: 'Terms of Service',\n          headerStyle: {\n            backgroundColor: '#f4f4f4',\n          },\n        }}\n      >\n        {(props) => (\n          <Suspense fallback={<LoadingIndicator />}>\n            <TermsOfService {...props} />\n          </Suspense>\n        )}\n      </Stack.Screen>\n      <Stack.Screen \n        name=\"Privacy\"\n        options={{\n          title: 'Privacy Policy',\n          headerStyle: {\n            backgroundColor: '#f4f4f4',\n          },\n        }}\n      >\n        {(props) => (\n          <Suspense fallback={<LoadingIndicator />}>\n            <PrivacyPolicy {...props} />\n          </Suspense>\n        )}\n      </Stack.Screen>\n      <Stack.Screen \n        name=\"Contact\"\n        options={{\n          title: 'Contact Us',\n          headerStyle: {\n            backgroundColor: '#f4f4f4',\n          },\n        }}\n      >\n        {(props) => (\n          <Suspense fallback={<LoadingIndicator />}>\n            <Contact {...props} />\n          </Suspense>\n        )}\n      </Stack.Screen>\n    </Stack.Navigator>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: colors.background.primary,\n    width: '100%',\n    paddingRight: 16,\n  },\n  logoContainer: {\n    padding: 12,\n  },\n  logoPressed: {\n    opacity: 0.7,\n  },\n  headerTitle: {\n    color: colors.primary,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  searchBarContainer: {\n    flex: 1,\n  }\n}); ","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import React, { useState, useRef } from 'react';\nimport { NavigationContainer, NavigationContainerRef, LinkingOptions } from '@react-navigation/native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { RootStackParamList } from './src/types/navigation';\nimport { ErrorBoundary } from './src/components/ErrorBoundary';\nimport { AppNavigator } from './src/navigation/AppNavigator';\nimport { LoadingIndicator } from './src/components/LoadingIndicator';\nimport { routes } from './src/utils/routes';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const navigationRef = useRef<NavigationContainerRef<RootStackParamList>>(null);\n\n  const linking: LinkingOptions<RootStackParamList> = {\n    prefixes: ['https://foilquiver.com', 'http://localhost:19006'],\n    config: {\n      screens: {\n        browse: '',\n        terms: 'terms',\n        privacy: 'privacy',\n        contact: 'contact',\n        comparison: 'comparison',\n        brand: 'brand/:brandName',\n        foil: 'foil/:brandName/:modelName',\n      },\n    },\n    getInitialURL() {\n      const url = new URL(window.location.href);\n      const searchQuery = url.searchParams.get('searchQuery') || '';\n      return `/?searchQuery=${searchQuery}`;\n    },\n  };\n\n  const handleSearch = (text: string) => {\n    setSearchQuery(text);\n    if (navigationRef.current) {\n      navigationRef.current.setParams({ searchQuery: text });\n    }\n  };\n\n  return (\n    <HelmetProvider>\n      <ErrorBoundary>\n        <SafeAreaProvider>\n          <NavigationContainer \n            ref={navigationRef}\n            linking={linking}\n            fallback={<LoadingIndicator />}\n          >\n            <AppNavigator \n              searchQuery={searchQuery}\n              onSearch={handleSearch}\n            />\n          </NavigationContainer>\n        </SafeAreaProvider>\n      </ErrorBoundary>\n    </HelmetProvider>\n  );\n} ","import React from 'react';\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\n\nexport function LoadingIndicator() {\n  return (\n    <View style={styles.container}>\n      <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}); ","export const colors = {\n  primary: '#BF3475',    // Main blue for primary actions, links\n  secondary: '#1F214D',  // Orange for accents, highlights\n  link: '#0066cc',       // Alternative link color\n  background: {\n    primary: '#FFFFFF',  // Main background\n    secondary: '#F5F7FA', // Secondary background (e.g., cards, hover states)\n    hover: '#f8f9fa',    // Hover state background\n    selected: '#e6f3ff'  // Selected state background\n  },\n  text: {\n    primary: '#1A1A1A',\n    secondary: '#4A4A4A',\n    muted: '#757575'\n  },\n  border: 'rgba(0, 0, 0, .1)',\n  palette: {\n    deepBlue: '#00659D',    // Deep ocean blue\n    teal: '#00ABBC',        // Vibrant teal\n    sand: '#E2C58A',        // Warm beige/sand\n    coral: '#FC8890',       // Soft coral pink\n    raspberry: '#B35D7F'    // Muted raspberry\n  },\n  palette2: {\n    midnight: '#1F214D',    // Deep navy/midnight blue\n    purple: '#50366F',      // Rich purple\n    magenta: '#BF3475',     // Vibrant magenta\n    coral: '#EE6C45',       // Warm coral orange\n    gold: '#FFCE61'         // Bright yellow gold\n  }\n} as const; \n\n"],"names":["ErrorBoundary","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","concat","state","hasError","error","_inherits","_createClass","key","value","errorInfo","_this$state$error","this","_jsxs","View","style","styles","container","children","_jsx","Text","text","errorText","message","props","Component","StyleSheet","create","flex","justifyContent","alignItems","padding","fontSize","marginBottom","color","SearchBar","_ref","onChangeText","onClear","_ref$placeholder","placeholder","wrapper","TextInput","input","placeholderTextColor","colors","muted","autoCapitalize","autoCorrect","Pressable","clearButton","onPress","clearButtonText","width","paddingVertical","backgroundColor","background","primary","flexDirection","secondary","borderRadius","paddingHorizontal","borderWidth","borderColor","border","Platform","OS","maxWidth","minWidth","height","fontWeight","BrowseScreen","lazy","PrivacyPolicy","TermsOfService","Contact","Stack","createNativeStackNavigator","AppNavigator","searchQuery","onSearch","navigation","useNavigation","handleLogoPress","reset","index","routes","name","params","Navigator","Screen","options","headerTitle","headerLeft","headerContainer","_ref2","pressed","logoContainer","logoPressed","searchBarContainer","headerStyle","headerShadowVisible","Suspense","fallback","LoadingIndicator","_objectSpread","title","paddingRight","opacity","registerRootComponent","_useState","useState","_useState2","_slicedToArray","setSearchQuery","navigationRef","useRef","linking","prefixes","config","screens","browse","terms","privacy","contact","comparison","brand","foil","getInitialURL","URL","window","location","href","searchParams","get","HelmetProvider","SafeAreaProvider","NavigationContainer","ref","current","setParams","ActivityIndicator","size","link","hover","selected","palette","deepBlue","teal","sand","coral","raspberry","palette2","midnight","purple","magenta","gold"],"sourceRoot":""}